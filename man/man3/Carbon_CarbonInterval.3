.TH "CarbonInterval" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CarbonInterval \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits DateInterval\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ($\fByears\fP=1, $\fBmonths\fP=null, $\fBweeks\fP=null, $\fBdays\fP=null, $\fBhours\fP=null, $\fBminutes\fP=null, $\fBseconds\fP=null)"
.br
.ti -1c
.RI "\fB__get\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fB__set\fP ($\fBname\fP, $val)"
.br
.ti -1c
.RI "\fBweeksAndDays\fP ($\fBweeks\fP, $\fBdays\fP)"
.br
.ti -1c
.RI "\fB__call\fP ($\fBname\fP, $args)"
.br
.ti -1c
.RI "\fBforHumans\fP ()"
.br
.ti -1c
.RI "\fB__toString\fP ()"
.br
.ti -1c
.RI "\fBadd\fP (DateInterval $interval)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBcreate\fP ($\fByears\fP=1, $\fBmonths\fP=null, $\fBweeks\fP=null, $\fBdays\fP=null, $\fBhours\fP=null, $\fBminutes\fP=null, $\fBseconds\fP=null)"
.br
.ti -1c
.RI "static \fB__callStatic\fP ($\fBname\fP, $args)"
.br
.ti -1c
.RI "static \fBinstance\fP (DateInterval $\fBdi\fP)"
.br
.ti -1c
.RI "static \fBgetTranslator\fP ()"
.br
.ti -1c
.RI "static \fBsetTranslator\fP (\fBTranslatorInterface\fP $\fBtranslator\fP)"
.br
.ti -1c
.RI "static \fBgetLocale\fP ()"
.br
.ti -1c
.RI "static \fBsetLocale\fP ($\fBlocale\fP)"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBPERIOD_PREFIX\fP = 'P'"
.br
.ti -1c
.RI "const \fBPERIOD_YEARS\fP = 'Y'"
.br
.ti -1c
.RI "const \fBPERIOD_MONTHS\fP = 'M'"
.br
.ti -1c
.RI "const \fBPERIOD_DAYS\fP = 'D'"
.br
.ti -1c
.RI "const \fBPERIOD_TIME_PREFIX\fP = 'T'"
.br
.ti -1c
.RI "const \fBPERIOD_HOURS\fP = 'H'"
.br
.ti -1c
.RI "const \fBPERIOD_MINUTES\fP = 'M'"
.br
.ti -1c
.RI "const \fBPERIOD_SECONDS\fP = 'S'"
.br
.ti -1c
.RI "const \fBPHP_DAYS_FALSE\fP = -99999"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static \fBtranslator\fP ()"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static \fB$translator\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 68 of file CarbonInterval\&.php\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ( $years = \fC1\fP,  $months = \fCnull\fP,  $weeks = \fCnull\fP,  $days = \fCnull\fP,  $hours = \fCnull\fP,  $minutes = \fCnull\fP,  $seconds = \fCnull\fP)"
Create a new \fBCarbonInterval\fP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fI$years\fP 
.br
\fI$months\fP 
.br
\fI$weeks\fP 
.br
\fI$days\fP 
.br
\fI$hours\fP 
.br
\fI$minutes\fP 
.br
\fI$seconds\fP 
.RE
.PP

.PP
Definition at line 120 of file CarbonInterval\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "__call ( $name,  $args)"
Allow fluent calls on the setters\&.\&.\&. CarbonInterval::years(3)->months(5)->\fBday()\fP\&.
.PP
Note: This is done using the magic method to allow static and instance methods to have the same names\&.
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 403 of file CarbonInterval\&.php\&.
.SS "static __callStatic ( $name,  $args)\fC [static]\fP"
Provide static helpers to create instances\&. Allows CarbonInterval::years(3)\&.
.PP
Note: This is done using the magic method to allow static and instance methods to have the same names\&.
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 172 of file CarbonInterval\&.php\&.
.SS "__get ( $name)"
Get a part of the \fBCarbonInterval\fP object
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidArgumentException\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 307 of file CarbonInterval\&.php\&.
.SS "__set ( $name,  $val)"
Set a part of the \fBCarbonInterval\fP object
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.br
\fI$value\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidArgumentException\fP 
.RE
.PP

.PP
Definition at line 348 of file CarbonInterval\&.php\&.
.SS "__toString ()"
Format the instance as a string using the \fBforHumans()\fP function\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 480 of file CarbonInterval\&.php\&.
.SS "add (DateInterval $interval)"
Add the passed interval to the current instance
.PP
\fBParameters:\fP
.RS 4
\fI$interval\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 492 of file CarbonInterval\&.php\&.
.SS "static create ( $years = \fC1\fP,  $months = \fCnull\fP,  $weeks = \fCnull\fP,  $days = \fCnull\fP,  $hours = \fCnull\fP,  $minutes = \fCnull\fP,  $seconds = \fCnull\fP)\fC [static]\fP"
Create a new \fBCarbonInterval\fP instance from specific values\&. This is an alias for the constructor that allows better fluent syntax as it allows you to do CarbonInterval::create(1)->\fBfn()\fP rather than (new CarbonInterval(1))->\fBfn()\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$years\fP 
.br
\fI$months\fP 
.br
\fI$weeks\fP 
.br
\fI$days\fP 
.br
\fI$hours\fP 
.br
\fI$minutes\fP 
.br
\fI$seconds\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 159 of file CarbonInterval\&.php\&.
.SS "forHumans ()"
Get the current interval in a human readable format in the current locale\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 453 of file CarbonInterval\&.php\&.
.SS "static getLocale ()\fC [static]\fP"
Get the current translator locale
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 276 of file CarbonInterval\&.php\&.
.SS "static getTranslator ()\fC [static]\fP"
Get the translator instance in use
.PP
\fBReturns:\fP
.RS 4
TranslatorInterface 
.RE
.PP

.PP
Definition at line 256 of file CarbonInterval\&.php\&.
.SS "static instance (DateInterval $di)\fC [static]\fP"
Create a \fBCarbonInterval\fP instance from a DateInterval one\&. Can not instance DateInterval objects created from DateTime::diff() as you can't externally set the $days field\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidArgumentException\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 219 of file CarbonInterval\&.php\&.
.SS "static setLocale ( $locale)\fC [static]\fP"
Set the current translator locale
.PP
\fBParameters:\fP
.RS 4
\fI$locale\fP 
.RE
.PP

.PP
Definition at line 286 of file CarbonInterval\&.php\&.
.SS "static setTranslator (\fBTranslatorInterface\fP $translator)\fC [static]\fP"
Set the translator instance to use
.PP
\fBParameters:\fP
.RS 4
\fITranslatorInterface\fP 
.RE
.PP

.PP
Definition at line 266 of file CarbonInterval\&.php\&.
.SS "static translator ()\fC [static]\fP, \fC [protected]\fP"
Intialize the translator instance if necessary\&.
.PP
\fBReturns:\fP
.RS 4
TranslatorInterface 
.RE
.PP

.PP
Definition at line 240 of file CarbonInterval\&.php\&.
.SS "weeksAndDays ( $weeks,  $days)"
Allow setting of weeks and days to be cumulative\&.
.PP
\fBParameters:\fP
.RS 4
\fI$weeks\fP Number of weeks to set 
.br
\fI$days\fP Number of days to set
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 389 of file CarbonInterval\&.php\&.
.SH "Field Documentation"
.PP 
.SS "$\fBtranslator\fP\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 87 of file CarbonInterval\&.php\&.
.SS "const PERIOD_DAYS = 'D'"

.PP
Definition at line 76 of file CarbonInterval\&.php\&.
.SS "const PERIOD_HOURS = 'H'"

.PP
Definition at line 78 of file CarbonInterval\&.php\&.
.SS "const PERIOD_MINUTES = 'M'"

.PP
Definition at line 79 of file CarbonInterval\&.php\&.
.SS "const PERIOD_MONTHS = 'M'"

.PP
Definition at line 75 of file CarbonInterval\&.php\&.
.SS "const PERIOD_PREFIX = 'P'"
Interval spec period designators 
.PP
Definition at line 73 of file CarbonInterval\&.php\&.
.SS "const PERIOD_SECONDS = 'S'"

.PP
Definition at line 80 of file CarbonInterval\&.php\&.
.SS "const PERIOD_TIME_PREFIX = 'T'"

.PP
Definition at line 77 of file CarbonInterval\&.php\&.
.SS "const PERIOD_YEARS = 'Y'"

.PP
Definition at line 74 of file CarbonInterval\&.php\&.
.SS "const PHP_DAYS_FALSE = -99999"
Before \fBPHP\fP 5\&.4\&.20/5\&.5\&.4 instead of FALSE days will be set to -99999 when the interval instance was created by DateTime:diff()\&. 
.PP
Definition at line 93 of file CarbonInterval\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
