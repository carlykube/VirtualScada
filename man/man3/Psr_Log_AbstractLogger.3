.TH "AbstractLogger" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AbstractLogger \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBLoggerInterface\fP\&.
.PP
Inherited by \fBNullLogger\fP, and \fBConsoleLogger\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBemergency\fP ($message, array $context=array())"
.br
.ti -1c
.RI "\fBalert\fP ($message, array $context=array())"
.br
.ti -1c
.RI "\fBcritical\fP ($message, array $context=array())"
.br
.ti -1c
.RI "\fBerror\fP ($message, array $context=array())"
.br
.ti -1c
.RI "\fBwarning\fP ($message, array $context=array())"
.br
.ti -1c
.RI "\fBnotice\fP ($message, array $context=array())"
.br
.ti -1c
.RI "\fBinfo\fP ($message, array $context=array())"
.br
.ti -1c
.RI "\fBdebug\fP ($message, array $context=array())"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is a simple Logger implementation that other Loggers can inherit from\&.
.PP
It simply delegates all log-level-specific methods to the \fClog\fP method to reduce boilerplate code that a simple Logger that does the same thing with messages regardless of the error level has to implement\&. 
.PP
Definition at line 12 of file AbstractLogger\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "alert ( $message, array $context = \fCarray()\fP)"
Action must be taken immediately\&.
.PP
Example: Entire website down, database unavailable, etc\&. This should trigger the SMS alerts and wake you up\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 36 of file AbstractLogger\&.php\&.
.SS "critical ( $message, array $context = \fCarray()\fP)"
Critical conditions\&.
.PP
Example: Application component unavailable, unexpected exception\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 50 of file AbstractLogger\&.php\&.
.SS "debug ( $message, array $context = \fCarray()\fP)"
Detailed debug information\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 116 of file AbstractLogger\&.php\&.
.SS "emergency ( $message, array $context = \fCarray()\fP)"
System is unusable\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 21 of file AbstractLogger\&.php\&.
.SS "error ( $message, array $context = \fCarray()\fP)"
Runtime errors that do not require immediate action but should typically be logged and monitored\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 63 of file AbstractLogger\&.php\&.
.SS "info ( $message, array $context = \fCarray()\fP)"
Interesting events\&.
.PP
Example: User logs in, SQL logs\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 104 of file AbstractLogger\&.php\&.
.SS "notice ( $message, array $context = \fCarray()\fP)"
Normal but significant events\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 90 of file AbstractLogger\&.php\&.
.SS "warning ( $message, array $context = \fCarray()\fP)"
Exceptional occurrences that are not errors\&.
.PP
Example: Use of deprecated APIs, poor use of an API, undesirable things that are not necessarily wrong\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 78 of file AbstractLogger\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
