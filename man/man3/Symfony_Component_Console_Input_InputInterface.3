.TH "InputInterface" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
InputInterface \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBInput\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBgetFirstArgument\fP ()"
.br
.ti -1c
.RI "\fBhasParameterOption\fP ($\fBvalues\fP)"
.br
.ti -1c
.RI "\fBgetParameterOption\fP ($\fBvalues\fP, $default=false)"
.br
.ti -1c
.RI "\fBbind\fP (\fBInputDefinition\fP $definition)"
.br
.ti -1c
.RI "\fBvalidate\fP ()"
.br
.ti -1c
.RI "\fBgetArguments\fP ()"
.br
.ti -1c
.RI "\fBgetArgument\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBsetArgument\fP ($\fBname\fP, $value)"
.br
.ti -1c
.RI "\fBhasArgument\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBgetOptions\fP ()"
.br
.ti -1c
.RI "\fBgetOption\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBsetOption\fP ($\fBname\fP, $value)"
.br
.ti -1c
.RI "\fBhasOption\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBisInteractive\fP ()"
.br
.ti -1c
.RI "\fBsetInteractive\fP ($interactive)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBInputInterface\fP is the interface implemented by all input classes\&.
.PP
\fBAuthor:\fP
.RS 4
Fabien Potencier fabien@symfony.com 
.RE
.PP

.PP
Definition at line 19 of file InputInterface\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "bind (\fBInputDefinition\fP $definition)"
Binds the current \fBInput\fP instance with the given arguments and options\&.
.PP
\fBParameters:\fP
.RS 4
\fI$definition\fP \fBA\fP \fBInputDefinition\fP instance 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "getArgument ( $name)"
Gets argument by name\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP The name of the argument
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "getArguments ()"
Returns all the given arguments merged with the default values\&.
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "getFirstArgument ()"
Returns the first argument from the raw parameters (not parsed)\&.
.PP
\fBReturns:\fP
.RS 4
string The value of the first argument or null otherwise 
.RE
.PP

.PP
Implemented in \fBArgvInput\fP, and \fBArrayInput\fP\&.
.SS "getOption ( $name)"
Gets an option by name\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP The name of the option
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "getOptions ()"
Returns all the given options merged with the default values\&.
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "getParameterOption ( $values,  $default = \fCfalse\fP)"
Returns the value of a raw option (not parsed)\&.
.PP
This method is to be used to introspect the input parameters before they have been validated\&. It must be used carefully\&.
.PP
\fBParameters:\fP
.RS 4
\fI$values\fP The value(s) to look for in the raw parameters (can be an array) 
.br
\fI$default\fP The default value to return if no result is found
.RE
.PP
\fBReturns:\fP
.RS 4
mixed The option value 
.RE
.PP

.PP
Implemented in \fBArgvInput\fP, and \fBArrayInput\fP\&.
.SS "hasArgument ( $name)"
Returns true if an \fBInputArgument\fP object exists by name or position\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP The \fBInputArgument\fP name or position
.RE
.PP
\fBReturns:\fP
.RS 4
bool true if the \fBInputArgument\fP object exists, false otherwise 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "hasOption ( $name)"
Returns true if an \fBInputOption\fP object exists by name\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP The \fBInputOption\fP name
.RE
.PP
\fBReturns:\fP
.RS 4
bool true if the \fBInputOption\fP object exists, false otherwise 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "hasParameterOption ( $values)"
Returns true if the raw parameters (not parsed) contain a value\&.
.PP
This method is to be used to introspect the input parameters before they have been validated\&. It must be used carefully\&.
.PP
\fBParameters:\fP
.RS 4
\fI$values\fP The values to look for in the raw parameters (can be an array)
.RE
.PP
\fBReturns:\fP
.RS 4
bool true if the value is contained in the raw parameters 
.RE
.PP

.PP
Implemented in \fBArgvInput\fP, and \fBArrayInput\fP\&.
.SS "isInteractive ()"
Is this input means interactive?
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "setArgument ( $name,  $value)"
Sets an argument value by name\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP The argument name 
.br
\fI$value\fP The argument value
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "setInteractive ( $interactive)"
Sets the input interactivity\&.
.PP
\fBParameters:\fP
.RS 4
\fI$interactive\fP If the input should be interactive 
.RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "setOption ( $name,  $value)"
Sets an option value by name\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP The option name 
.br
\fI$value\fP The option value
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Implemented in \fBInput\fP\&.
.SS "validate ()"
Validates if arguments given are correct\&.
.PP
Throws an exception when not enough arguments are given\&.
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Implemented in \fBInput\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
