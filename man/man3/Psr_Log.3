.TH "Psr\Log" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Psr\Log \- 
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBTest\fP"
.br
.in -1c
.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBAbstractLogger\fP"
.br
.ti -1c
.RI "class \fBInvalidArgumentException\fP"
.br
.ti -1c
.RI "interface \fBLoggerAwareInterface\fP"
.br
.ti -1c
.RI "interface \fBLoggerInterface\fP"
.br
.ti -1c
.RI "class \fBLogLevel\fP"
.br
.ti -1c
.RI "class \fBNullLogger\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBsetLogger\fP (\fBLoggerInterface\fP $logger)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "trait \fBLoggerAwareTrait\fP"
.br
.ti -1c
.RI "trait \fBLoggerTrait\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "Psr\\Log\\setLogger (\fBLoggerInterface\fP $logger)"
Sets a logger\&.
.PP
\fBParameters:\fP
.RS 4
\fI$logger\fP 
.RE
.PP

.PP
Definition at line 18 of file LoggerAwareTrait\&.php\&.
.SH "Variable Documentation"
.PP 
.SS "trait LoggerAwareTrait"
\fBInitial value:\fP
.PP
.nf
{
    
    protected $logger
.fi
Basic Implementation of \fBLoggerAwareInterface\fP\&. 
.PP
Definition at line 9 of file LoggerAwareTrait\&.php\&.
.SS "trait LoggerTrait"
This is a simple Logger trait that classes unable to extend \fBAbstractLogger\fP (because they extend another class, etc) can include\&.
.PP
It simply delegates all log-level-specific methods to the \fClog\fP method to reduce boilerplate code that a simple Logger that does the same thing with messages regardless of the error level has to implement\&. 
.PP
Definition at line 14 of file LoggerTrait\&.php\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
