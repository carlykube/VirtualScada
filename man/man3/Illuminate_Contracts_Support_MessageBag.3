.TH "MessageBag" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MessageBag \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBkeys\fP ()"
.br
.ti -1c
.RI "\fBadd\fP ($key, $message)"
.br
.ti -1c
.RI "\fBmerge\fP ($messages)"
.br
.ti -1c
.RI "\fBhas\fP ($key=null)"
.br
.ti -1c
.RI "\fBfirst\fP ($key=null, $\fBformat\fP=null)"
.br
.ti -1c
.RI "\fBget\fP ($key, $\fBformat\fP=null)"
.br
.ti -1c
.RI "\fBall\fP ($\fBformat\fP=null)"
.br
.ti -1c
.RI "\fBgetFormat\fP ()"
.br
.ti -1c
.RI "\fBsetFormat\fP ($\fBformat\fP= ':message')"
.br
.ti -1c
.RI "\fBisEmpty\fP ()"
.br
.ti -1c
.RI "\fBcount\fP ()"
.br
.ti -1c
.RI "\fBtoArray\fP ()"
.br
.ti -1c
.RI "\fBkeys\fP ()"
.br
.ti -1c
.RI "\fBadd\fP ($key, $message)"
.br
.ti -1c
.RI "\fBmerge\fP ($messages)"
.br
.ti -1c
.RI "\fBhas\fP ($key=null)"
.br
.ti -1c
.RI "\fBfirst\fP ($key=null, $\fBformat\fP=null)"
.br
.ti -1c
.RI "\fBget\fP ($key, $\fBformat\fP=null)"
.br
.ti -1c
.RI "\fBall\fP ($\fBformat\fP=null)"
.br
.ti -1c
.RI "\fBgetFormat\fP ()"
.br
.ti -1c
.RI "\fBsetFormat\fP ($\fBformat\fP= ':message')"
.br
.ti -1c
.RI "\fBisEmpty\fP ()"
.br
.ti -1c
.RI "\fBcount\fP ()"
.br
.ti -1c
.RI "\fBtoArray\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 262 of file compiled\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "add ( $key,  $message)"
Add a message to the bag\&.
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP 
.br
\fI$message\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
$this 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "add ( $key,  $message)"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "all ( $format = \fCnull\fP)"
Get all of the messages for every key in the bag\&.
.PP
\fBParameters:\fP
.RS 4
\fI$format\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "all ( $format = \fCnull\fP)"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "count ()"
Get the number of messages in the container\&.
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "count ()"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "first ( $key = \fCnull\fP,  $format = \fCnull\fP)"
Get the first message from the bag for a given key\&.
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP 
.br
\fI$format\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "first ( $key = \fCnull\fP,  $format = \fCnull\fP)"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "get ( $key,  $format = \fCnull\fP)"
Get all of the messages from the bag for a given key\&.
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP 
.br
\fI$format\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "get ( $key,  $format = \fCnull\fP)"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "getFormat ()"
Get the default message format\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "getFormat ()"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "has ( $key = \fCnull\fP)"
Determine if messages exist for a given key\&.
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "has ( $key = \fCnull\fP)"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "isEmpty ()"
Determine if the message bag has any messages\&.
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "isEmpty ()"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "keys ()"
Get the keys present in the message bag\&.
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "keys ()"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "merge ( $messages)"
Merge a new array of messages into the bag\&.
.PP
\fBParameters:\fP
.RS 4
\fI$messages\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
$this 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "merge ( $messages)"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "setFormat ( $format = \fC':message'\fP)"
Set the default message format\&.
.PP
\fBParameters:\fP
.RS 4
\fI$format\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
$this 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "setFormat ( $format = \fC':message'\fP)"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "toArray ()"
Get the instance as an array\&.
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.
.SS "toArray ()"

.PP
Implemented in \fBMessageBag\fP, and \fBMessageBag\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
