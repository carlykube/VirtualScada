.TH "todo" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
todo \- Todo List 

.IP "\fBPage \fBChanges in PHPUnit 4\&.2\fP \fP" 1c
\fCwill now be reported as risky when the\fP--disallow-todo-tests\fCoption is used or\fPbeStrictAboutTodoAnnotatedTests=true\fCis set in the configuration file
.IP "\(bu" 2
TheatLeast()\fCand\fPatMost()\fCinvocation count matchers were added\fP
.IP "\(bu" 2
\fCThe\fP\fBassertTag()\fP\fCand\fPassertSelect*()\fCassertion methods have been deprecated in favor of the [phpunit-dom-assertions](https://github.com/phpunit/phpunit-dom-assertions) extension; these methods will be removed in \fBPHPUnit\fP 5\&.0 *\fPtrigger_error(\fBMETHOD\fP \&. ' is deprecated', E_USER_DEPRECATED);\fCis used now to indicate that a \fBPHPUnit\fP API method is deprecated; the old 'system' for deprecating methods has been removed\fP
.IP "\(bu" 2
\fCThe \fBPHP\fP Archive (PHAR) distribution of \fBPHPUnit\fP can now be used as a library;\fPinclude()\fCing or\fPrequire()`ing it will not execute the CLI test runner 
.PP
\fP
.IP "\fBPage \fBChanges in PHPUnit 4\&.3\fP \fP" 1c
\fC ` annotated tests are counted twice \fP
.IP "\fBGlobal \fBDescription::export\fP ()\fP" 1c
\fC determine the exact format as used by \fBPHP\fP \fBReflection\fP and implement it\&. \fP
.IP "\fBGlobal \fBDescription::getFormattedContents\fP ()\fP" 1c
\fC this should become a more intelligent piece of code where the configuration contains a setting what format long descriptions are\&. \fP
.IP "\fBGlobal \fBDocBlock::export\fP ()\fP" 1c
\fC determine the exact format as used by \fBPHP\fP \fBReflection\fP and implement it\&. \fP
.IP "\fBGlobal \fBIssue1468Test::testFailure\fP ()\fP" 1c
\fC Implement this test  \fP
.IP "\fBClass \fBSwift_Signers_OpenDKIMSignerTest\fP \fP" 1c
\fC  \fP
.IP "\fBGlobal \fBTag::export\fP ()\fP" 1c
\fC determine the exact format as used by \fBPHP\fP \fBReflection\fP and implement it\&. \fP
.IP "\fBGlobal \fBUtil_TestTest::methodForTestParseAnnotation\fP ()\fP" 1c
\fC Remove fixture from test class  \fP
.IP "\fBGlobal \fBUtil_TestTest::testGetExpectedException\fP ()\fP" 1c
\fC Split up in separate tests  \fP
.IP "\fBGlobal \fBUtil_TestTest::testGetProvidedDataRegEx\fP ()\fP" 1c
\fC This test does not really test functionality of \fBPHPUnit_Util_Test\fP  \fP
.IP "\fBGlobal \fBUtil_TestTest::testParseAnnotation\fP ()\fP" 1c
\fC Not sure what this test tests (name is misleading at least)  \fP
.IP "\fBClass \fBValidConstantPass\fP \fP" 1c
\fC Detect constants defined in the current code snippet? \&.\&.\&. Might not be worth it, since it would need to both be defining and referencing a namespaced constant, which doesn't seem like that big of a target for failure\&. \fP
.PP

