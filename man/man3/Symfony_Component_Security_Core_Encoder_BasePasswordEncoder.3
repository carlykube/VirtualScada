.TH "BasePasswordEncoder" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BasePasswordEncoder \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPasswordEncoderInterface\fP\&.
.PP
Inherited by \fBBCryptPasswordEncoder\fP, \fBMessageDigestPasswordEncoder\fP, \fBPbkdf2PasswordEncoder\fP, \fBPlaintextPasswordEncoder\fP, and \fBPasswordEncoder\fP\&.
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBMAX_PASSWORD_LENGTH\fP = 4096"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBdemergePasswordAndSalt\fP ($mergedPasswordSalt)"
.br
.ti -1c
.RI "\fBmergePasswordAndSalt\fP ($password, $salt)"
.br
.ti -1c
.RI "\fBcomparePasswords\fP ($password1, $password2)"
.br
.ti -1c
.RI "\fBisPasswordTooLong\fP ($password)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBBasePasswordEncoder\fP is the base class for all password encoders\&.
.PP
\fBAuthor:\fP
.RS 4
Fabien Potencier fabien@symfony.com 
.RE
.PP

.PP
Definition at line 21 of file BasePasswordEncoder\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "comparePasswords ( $password1,  $password2)\fC [protected]\fP"
Compares two passwords\&.
.PP
This method implements a constant-time algorithm to compare passwords to avoid (remote) timing attacks\&.
.PP
\fBParameters:\fP
.RS 4
\fI$password1\fP The first password 
.br
\fI$password2\fP The second password
.RE
.PP
\fBReturns:\fP
.RS 4
bool true if the two passwords are the same, false otherwise 
.RE
.PP

.PP
Definition at line 84 of file BasePasswordEncoder\&.php\&.
.SS "demergePasswordAndSalt ( $mergedPasswordSalt)\fC [protected]\fP"
Demerges a merge password and salt string\&.
.PP
\fBParameters:\fP
.RS 4
\fI$mergedPasswordSalt\fP The merged password and salt string
.RE
.PP
\fBReturns:\fP
.RS 4
array An array where the first element is the password and the second the salt 
.RE
.PP

.PP
Definition at line 32 of file BasePasswordEncoder\&.php\&.
.SS "isPasswordTooLong ( $password)\fC [protected]\fP"
Checks if the password is too long\&.
.PP
\fBParameters:\fP
.RS 4
\fI$password\fP The password to check
.RE
.PP
\fBReturns:\fP
.RS 4
bool true if the password is too long, false otherwise 
.RE
.PP

.PP
Definition at line 96 of file BasePasswordEncoder\&.php\&.
.SS "mergePasswordAndSalt ( $password,  $salt)\fC [protected]\fP"
Merges a password and a salt\&.
.PP
\fBParameters:\fP
.RS 4
\fI$password\fP the password to be used 
.br
\fI$salt\fP the salt to be used
.RE
.PP
\fBReturns:\fP
.RS 4
string a merged password and salt
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Definition at line 60 of file BasePasswordEncoder\&.php\&.
.SH "Field Documentation"
.PP 
.SS "const MAX_PASSWORD_LENGTH = 4096"

.PP
Definition at line 23 of file BasePasswordEncoder\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
