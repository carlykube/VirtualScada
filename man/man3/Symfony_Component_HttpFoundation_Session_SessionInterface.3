.TH "SessionInterface" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SessionInterface \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBSessionInterface\fP, \fBSessionInterface\fP, and \fBSession\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBstart\fP ()"
.br
.ti -1c
.RI "\fBgetId\fP ()"
.br
.ti -1c
.RI "\fBsetId\fP ($id)"
.br
.ti -1c
.RI "\fBgetName\fP ()"
.br
.ti -1c
.RI "\fBsetName\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBinvalidate\fP ($lifetime=null)"
.br
.ti -1c
.RI "\fBmigrate\fP ($destroy=false, $lifetime=null)"
.br
.ti -1c
.RI "\fBsave\fP ()"
.br
.ti -1c
.RI "\fBhas\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBget\fP ($\fBname\fP, $default=null)"
.br
.ti -1c
.RI "\fBset\fP ($\fBname\fP, $value)"
.br
.ti -1c
.RI "\fBall\fP ()"
.br
.ti -1c
.RI "\fBreplace\fP (array $attributes)"
.br
.ti -1c
.RI "\fBremove\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBclear\fP ()"
.br
.ti -1c
.RI "\fBisStarted\fP ()"
.br
.ti -1c
.RI "\fBregisterBag\fP (\fBSessionBagInterface\fP $bag)"
.br
.ti -1c
.RI "\fBgetBag\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBgetMetadataBag\fP ()"
.br
.ti -1c
.RI "\fBstart\fP ()"
.br
.ti -1c
.RI "\fBgetId\fP ()"
.br
.ti -1c
.RI "\fBsetId\fP ($id)"
.br
.ti -1c
.RI "\fBgetName\fP ()"
.br
.ti -1c
.RI "\fBsetName\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBinvalidate\fP ($lifetime=null)"
.br
.ti -1c
.RI "\fBmigrate\fP ($destroy=false, $lifetime=null)"
.br
.ti -1c
.RI "\fBsave\fP ()"
.br
.ti -1c
.RI "\fBhas\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBget\fP ($\fBname\fP, $default=null)"
.br
.ti -1c
.RI "\fBset\fP ($\fBname\fP, $value)"
.br
.ti -1c
.RI "\fBall\fP ()"
.br
.ti -1c
.RI "\fBreplace\fP (array $attributes)"
.br
.ti -1c
.RI "\fBremove\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBclear\fP ()"
.br
.ti -1c
.RI "\fBisStarted\fP ()"
.br
.ti -1c
.RI "\fBregisterBag\fP (\fBSessionBagInterface\fP $bag)"
.br
.ti -1c
.RI "\fBgetBag\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBgetMetadataBag\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Interface for the session\&.
.PP
\fBAuthor:\fP
.RS 4
Drak drak@zikula.org 
.RE
.PP

.PP
Definition at line 3745 of file compiled\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "all ()"
Returns attributes\&.
.PP
\fBReturns:\fP
.RS 4
array Attributes
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "all ()"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "clear ()"
Clears all attributes\&.
.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "clear ()"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "get ( $name,  $default = \fCnull\fP)"
Returns an attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP The attribute name 
.br
\fI$default\fP The default value if not found\&.
.RE
.PP
\fBReturns:\fP
.RS 4
mixed
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "get ( $name,  $default = \fCnull\fP)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "getBag ( $name)"
Gets a bag instance by name\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBSessionBagInterface\fP 
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "getBag ( $name)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "getId ()"
Returns the session ID\&.
.PP
\fBReturns:\fP
.RS 4
string The session ID\&.
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBSession\fP, and \fBStore\fP\&.
.SS "getId ()"

.PP
Implemented in \fBStore\fP, \fBSession\fP, and \fBStore\fP\&.
.SS "getMetadataBag ()"
Gets session meta\&.
.PP
\fBReturns:\fP
.RS 4
MetadataBag 
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "getMetadataBag ()"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "getName ()"
Returns the session name\&.
.PP
\fBReturns:\fP
.RS 4
mixed The session name\&.
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBSession\fP, and \fBStore\fP\&.
.SS "getName ()"

.PP
Implemented in \fBStore\fP, \fBSession\fP, and \fBStore\fP\&.
.SS "has ( $name)"
Checks if an attribute is defined\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP The attribute name
.RE
.PP
\fBReturns:\fP
.RS 4
bool true if the attribute is defined, false otherwise
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "has ( $name)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "invalidate ( $lifetime = \fCnull\fP)"
Invalidates the current session\&.
.PP
Clears all session attributes and flashes and regenerates the session and deletes the old session from persistence\&.
.PP
\fBParameters:\fP
.RS 4
\fI$lifetime\fP Sets the cookie lifetime for the session cookie\&. \fBA\fP null value will leave the system settings unchanged, 0 sets the cookie to expire with browser session\&. Time is in seconds, and is not a Unix timestamp\&.
.RE
.PP
\fBReturns:\fP
.RS 4
bool True if session invalidated, false if error\&.
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "invalidate ( $lifetime = \fCnull\fP)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "isStarted ()"
Checks if the session was started\&.
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "isStarted ()"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "migrate ( $destroy = \fCfalse\fP,  $lifetime = \fCnull\fP)"
Migrates the current session to a new session id while maintaining all session attributes\&.
.PP
\fBParameters:\fP
.RS 4
\fI$destroy\fP Whether to delete the old session or leave it to garbage collection\&. 
.br
\fI$lifetime\fP Sets the cookie lifetime for the session cookie\&. \fBA\fP null value will leave the system settings unchanged, 0 sets the cookie to expire with browser session\&. Time is in seconds, and is not a Unix timestamp\&.
.RE
.PP
\fBReturns:\fP
.RS 4
bool True if session migrated, false if error\&.
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "migrate ( $destroy = \fCfalse\fP,  $lifetime = \fCnull\fP)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "registerBag (\fBSessionBagInterface\fP $bag)"
Registers a \fBSessionBagInterface\fP with the session\&.
.PP
\fBParameters:\fP
.RS 4
\fI$bag\fP 
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "registerBag (\fBSessionBagInterface\fP $bag)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "remove ( $name)"
Removes an attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed The removed value or null when it does not exist
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "remove ( $name)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "replace (array $attributes)"
Sets attributes\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributes\fP Attributes 
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "replace (array $attributes)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "save ()"
Force the session to be saved and closed\&.
.PP
This method is generally not required for real sessions as the session will be automatically saved at the end of code execution\&. 
.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "save ()"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "set ( $name,  $value)"
Sets an attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.br
\fI$value\fP 
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "set ( $name,  $value)"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "setId ( $id)"
Sets the session ID\&.
.PP
\fBParameters:\fP
.RS 4
\fI$id\fP 
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBSession\fP, and \fBStore\fP\&.
.SS "setId ( $id)"

.PP
Implemented in \fBStore\fP, \fBSession\fP, and \fBStore\fP\&.
.SS "setName ( $name)"
Sets the session name\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP

.PP
Implemented in \fBStore\fP, \fBSession\fP, and \fBStore\fP\&.
.SS "setName ( $name)"

.PP
Implemented in \fBStore\fP, \fBSession\fP, and \fBStore\fP\&.
.SS "start ()"
Starts the session storage\&.
.PP
\fBReturns:\fP
.RS 4
bool True if session started\&.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.
.SS "start ()"

.PP
Implemented in \fBStore\fP, \fBStore\fP, and \fBSession\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
