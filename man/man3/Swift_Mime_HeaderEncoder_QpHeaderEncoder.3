.TH "Swift_Mime_HeaderEncoder_QpHeaderEncoder" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Swift_Mime_HeaderEncoder_QpHeaderEncoder \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBSwift_Encoder_QpEncoder\fP, and \fBSwift_Mime_HeaderEncoder\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP (\fBSwift_CharacterStream\fP $charStream)"
.br
.ti -1c
.RI "\fBgetName\fP ()"
.br
.ti -1c
.RI "\fBencodeString\fP ($string, $firstLineOffset=0, $maxLineLength=0)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBinitSafeMap\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Handles Quoted Printable (Q) Header Encoding in \fBSwift\fP Mailer\&.
.PP
\fBAuthor:\fP
.RS 4
Chris Corbyn 
.RE
.PP

.PP
Definition at line 16 of file QpHeaderEncoder\&.php\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct (\fBSwift_CharacterStream\fP $charStream)"
Creates a new QpHeaderEncoder for the given CharacterStream\&.
.PP
\fBParameters:\fP
.RS 4
\fI$charStream\fP to use for reading characters 
.RE
.PP

.PP
Definition at line 23 of file QpHeaderEncoder\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "encodeString ( $string,  $firstLineOffset = \fC0\fP,  $maxLineLength = \fC0\fP)"
Takes an unencoded string and produces a QP encoded string from it\&.
.PP
\fBParameters:\fP
.RS 4
\fI$string\fP string to encode 
.br
\fI$firstLineOffset\fP optional 
.br
\fI$maxLineLength\fP optional, 0 indicates the default of 76 chars
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Implements \fBSwift_Encoder\fP\&.
.PP
Definition at line 59 of file QpHeaderEncoder\&.php\&.
.SS "getName ()"
Get the name of this encoding scheme\&.
.PP
Returns the string 'Q'\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Implements \fBSwift_Mime_HeaderEncoder\fP\&.
.PP
Definition at line 45 of file QpHeaderEncoder\&.php\&.
.SS "initSafeMap ()\fC [protected]\fP"

.PP
Definition at line 28 of file QpHeaderEncoder\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
