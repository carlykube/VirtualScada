.TH "Finder" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Finder \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits IteratorAggregate, Countable, IteratorAggregate, and Countable\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ()"
.br
.ti -1c
.RI "\fBaddAdapter\fP (\fBAdapterInterface\fP $adapter, $priority=0)"
.br
.ti -1c
.RI "\fBuseBestAdapter\fP ()"
.br
.ti -1c
.RI "\fBsetAdapter\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBremoveAdapters\fP ()"
.br
.ti -1c
.RI "\fBgetAdapters\fP ()"
.br
.ti -1c
.RI "\fBdirectories\fP ()"
.br
.ti -1c
.RI "\fBfiles\fP ()"
.br
.ti -1c
.RI "\fBdepth\fP ($level)"
.br
.ti -1c
.RI "\fBdate\fP ($date)"
.br
.ti -1c
.RI "\fBname\fP ($pattern)"
.br
.ti -1c
.RI "\fBnotName\fP ($pattern)"
.br
.ti -1c
.RI "\fBcontains\fP ($pattern)"
.br
.ti -1c
.RI "\fBnotContains\fP ($pattern)"
.br
.ti -1c
.RI "\fBpath\fP ($pattern)"
.br
.ti -1c
.RI "\fBnotPath\fP ($pattern)"
.br
.ti -1c
.RI "\fBsize\fP ($size)"
.br
.ti -1c
.RI "\fBexclude\fP ($dirs)"
.br
.ti -1c
.RI "\fBignoreDotFiles\fP ($ignoreDotFiles)"
.br
.ti -1c
.RI "\fBignoreVCS\fP ($ignoreVCS)"
.br
.ti -1c
.RI "\fBsort\fP (\\Closure $closure)"
.br
.ti -1c
.RI "\fBsortByName\fP ()"
.br
.ti -1c
.RI "\fBsortByType\fP ()"
.br
.ti -1c
.RI "\fBsortByAccessedTime\fP ()"
.br
.ti -1c
.RI "\fBsortByChangedTime\fP ()"
.br
.ti -1c
.RI "\fBsortByModifiedTime\fP ()"
.br
.ti -1c
.RI "\fBfilter\fP (\\Closure $closure)"
.br
.ti -1c
.RI "\fBfollowLinks\fP ()"
.br
.ti -1c
.RI "\fBignoreUnreadableDirs\fP ($ignore=true)"
.br
.ti -1c
.RI "\fBin\fP ($dirs)"
.br
.ti -1c
.RI "\fBgetIterator\fP ()"
.br
.ti -1c
.RI "\fBappend\fP ($iterator)"
.br
.ti -1c
.RI "\fBcount\fP ()"
.br
.ti -1c
.RI "\fB__construct\fP ()"
.br
.ti -1c
.RI "\fBaddAdapter\fP (\fBAdapterInterface\fP $adapter, $priority=0)"
.br
.ti -1c
.RI "\fBuseBestAdapter\fP ()"
.br
.ti -1c
.RI "\fBsetAdapter\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBremoveAdapters\fP ()"
.br
.ti -1c
.RI "\fBgetAdapters\fP ()"
.br
.ti -1c
.RI "\fBdirectories\fP ()"
.br
.ti -1c
.RI "\fBfiles\fP ()"
.br
.ti -1c
.RI "\fBdepth\fP ($level)"
.br
.ti -1c
.RI "\fBdate\fP ($date)"
.br
.ti -1c
.RI "\fBname\fP ($pattern)"
.br
.ti -1c
.RI "\fBnotName\fP ($pattern)"
.br
.ti -1c
.RI "\fBcontains\fP ($pattern)"
.br
.ti -1c
.RI "\fBnotContains\fP ($pattern)"
.br
.ti -1c
.RI "\fBpath\fP ($pattern)"
.br
.ti -1c
.RI "\fBnotPath\fP ($pattern)"
.br
.ti -1c
.RI "\fBsize\fP ($size)"
.br
.ti -1c
.RI "\fBexclude\fP ($dirs)"
.br
.ti -1c
.RI "\fBignoreDotFiles\fP ($ignoreDotFiles)"
.br
.ti -1c
.RI "\fBignoreVCS\fP ($ignoreVCS)"
.br
.ti -1c
.RI "\fBsort\fP (\\Closure $closure)"
.br
.ti -1c
.RI "\fBsortByName\fP ()"
.br
.ti -1c
.RI "\fBsortByType\fP ()"
.br
.ti -1c
.RI "\fBsortByAccessedTime\fP ()"
.br
.ti -1c
.RI "\fBsortByChangedTime\fP ()"
.br
.ti -1c
.RI "\fBsortByModifiedTime\fP ()"
.br
.ti -1c
.RI "\fBfilter\fP (\\Closure $closure)"
.br
.ti -1c
.RI "\fBfollowLinks\fP ()"
.br
.ti -1c
.RI "\fBignoreUnreadableDirs\fP ($ignore=true)"
.br
.ti -1c
.RI "\fBin\fP ($dirs)"
.br
.ti -1c
.RI "\fBgetIterator\fP ()"
.br
.ti -1c
.RI "\fBappend\fP ($iterator)"
.br
.ti -1c
.RI "\fBcount\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBcreate\fP ()"
.br
.ti -1c
.RI "static \fBaddVCSPattern\fP ($pattern)"
.br
.ti -1c
.RI "static \fBcreate\fP ()"
.br
.ti -1c
.RI "static \fBaddVCSPattern\fP ($pattern)"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBIGNORE_VCS_FILES\fP = 1"
.br
.ti -1c
.RI "const \fBIGNORE_DOT_FILES\fP = 2"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBFinder\fP allows to build rules to find files and directories\&.
.PP
It is a thin wrapper around several specialized iterator classes\&.
.PP
All rules may be invoked several times\&.
.PP
All methods return the current \fBFinder\fP object to allow easy chaining:
.PP
$finder = \fBFinder::create()\fP->\fBfiles()\fP->name('*\&.php')->in(\fBDIR\fP);
.PP
\fBAuthor:\fP
.RS 4
Fabien Potencier fabien@symfony.com
.RE
.PP

.PP
Definition at line 16055 of file compiled\&.php\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ()"

.PP
Definition at line 16079 of file compiled\&.php\&.
.SS "__construct ()"
Constructor\&. 
.PP
Definition at line 75 of file Finder\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "addAdapter (\fBAdapterInterface\fP $adapter,  $priority = \fC0\fP)"
Registers a finder engine implementation\&.
.PP
\fBParameters:\fP
.RS 4
\fI$adapter\fP An adapter instance 
.br
\fI$priority\fP Highest is selected first
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance 
.RE
.PP

.PP
Definition at line 107 of file Finder\&.php\&.
.SS "addAdapter (\fBAdapterInterface\fP $adapter,  $priority = \fC0\fP)"

.PP
Definition at line 16088 of file compiled\&.php\&.
.SS "static addVCSPattern ( $pattern)\fC [static]\fP"
Adds VCS patterns\&.
.PP
\fBSee also:\fP
.RS 4
\fBignoreVCS()\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIstring|string[]\fP $pattern VCS patterns to ignore 
.RE
.PP

.PP
Definition at line 476 of file Finder\&.php\&.
.SS "static addVCSPattern ( $pattern)\fC [static]\fP"

.PP
Definition at line 16196 of file compiled\&.php\&.
.SS "append ( $iterator)"
Appends an existing set of files/directories to the finder\&.
.PP
The set can be another \fBFinder\fP, an \fBIterator\fP, an IteratorAggregate, or even a plain array\&.
.PP
\fBParameters:\fP
.RS 4
\fI$iterator\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The finder
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Definition at line 728 of file Finder\&.php\&.
.SS "append ( $iterator)"

.PP
Definition at line 16280 of file compiled\&.php\&.
.SS "contains ( $pattern)"
Adds tests that file contents must match\&.
.PP
Strings or PCRE patterns can be used:
.PP
$finder->contains('Lorem ipsum') $finder->contains('/Lorem ipsum/i')
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP \fBA\fP pattern (string or regexp)
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
FilecontentFilterIterator 
.RE
.PP

.PP
Definition at line 310 of file Finder\&.php\&.
.SS "contains ( $pattern)"

.PP
Definition at line 16148 of file compiled\&.php\&.
.SS "count ()"
Counts all the results collected by the iterators\&.
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Definition at line 752 of file Finder\&.php\&.
.SS "count ()"

.PP
Definition at line 16297 of file compiled\&.php\&.
.SS "static create ()\fC [static]\fP"
Creates a new \fBFinder\fP\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP \fBA\fP new \fBFinder\fP instance
.RE
.PP

.PP
Definition at line 94 of file Finder\&.php\&.
.SS "static create ()\fC [static]\fP"

.PP
Definition at line 16084 of file compiled\&.php\&.
.SS "date ( $date)"
Adds tests for file dates (last modified)\&.
.PP
The date must be something that strtotime() is able to parse:
.PP
$finder->date('since yesterday'); $finder->date('until 2 days ago'); $finder->date('> now - 2 hours'); $finder->date('>= 2005-10-15');
.PP
\fBParameters:\fP
.RS 4
\fI$date\fP \fBA\fP date range string
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
strtotime 
.PP
DateRangeFilterIterator 
.PP
DateComparator
.RE
.PP

.PP
Definition at line 247 of file Finder\&.php\&.
.SS "date ( $date)"

.PP
Definition at line 16133 of file compiled\&.php\&.
.SS "depth ( $level)"
Adds tests for the directory depth\&.
.PP
Usage:
.PP
$finder->depth('> 1') // the \fBFinder\fP will start matching at level 1\&. $finder->depth('< 3') // the \fBFinder\fP will descend at most 3 levels of directories below the starting point\&.
.PP
\fBParameters:\fP
.RS 4
\fI$level\fP The depth level expression
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
DepthRangeFilterIterator 
.PP
NumberComparator
.RE
.PP

.PP
Definition at line 220 of file Finder\&.php\&.
.SS "depth ( $level)"

.PP
Definition at line 16128 of file compiled\&.php\&.
.SS "directories ()"
Restricts the matching to directories only\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP

.PP
Definition at line 182 of file Finder\&.php\&.
.SS "directories ()"

.PP
Definition at line 16118 of file compiled\&.php\&.
.SS "exclude ( $dirs)"
Excludes directories\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dirs\fP \fBA\fP directory path or an array of directories
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
ExcludeDirectoryFilterIterator
.RE
.PP

.PP
Definition at line 418 of file Finder\&.php\&.
.SS "exclude ( $dirs)"

.PP
Definition at line 16173 of file compiled\&.php\&.
.SS "files ()"
Restricts the matching to files only\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP

.PP
Definition at line 196 of file Finder\&.php\&.
.SS "files ()"

.PP
Definition at line 16123 of file compiled\&.php\&.
.SS "filter (\\Closure $closure)"
Filters the iterator with an anonymous function\&.
.PP
The anonymous function receives a  and must return false to remove files\&.
.PP
\fBParameters:\fP
.RS 4
\fI$closure\fP An anonymous function
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
CustomFilterIterator
.RE
.PP

.PP
Definition at line 619 of file Finder\&.php\&.
.SS "filter (\\Closure $closure)"

.PP
Definition at line 16233 of file compiled\&.php\&.
.SS "followLinks ()"
Forces the following of symlinks\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP

.PP
Definition at line 633 of file Finder\&.php\&.
.SS "followLinks ()"

.PP
Definition at line 16238 of file compiled\&.php\&.
.SS "getAdapters ()"
Returns registered adapters ordered by priority without extra information\&.
.PP
\fBReturns:\fP
.RS 4
AdapterInterface[] 
.RE
.PP

.PP
Definition at line 168 of file Finder\&.php\&.
.SS "getAdapters ()"

.PP
Definition at line 16112 of file compiled\&.php\&.
.SS "getIterator ()"
Returns an \fBIterator\fP for the current \fBFinder\fP configuration\&.
.PP
This method implements the IteratorAggregate interface\&.
.PP
\fBReturns:\fP
.RS 4
An iterator
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Definition at line 695 of file Finder\&.php\&.
.SS "getIterator ()"

.PP
Definition at line 16263 of file compiled\&.php\&.
.SS "ignoreDotFiles ( $ignoreDotFiles)"
Excludes 'hidden' directories and files (starting with a dot)\&.
.PP
\fBParameters:\fP
.RS 4
\fI$ignoreDotFiles\fP Whether to exclude 'hidden' files or not
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
ExcludeDirectoryFilterIterator
.RE
.PP

.PP
Definition at line 436 of file Finder\&.php\&.
.SS "ignoreDotFiles ( $ignoreDotFiles)"

.PP
Definition at line 16178 of file compiled\&.php\&.
.SS "ignoreUnreadableDirs ( $ignore = \fCtrue\fP)"
Tells finder to ignore unreadable directories\&.
.PP
By default, scanning unreadable directories content throws an AccessDeniedException\&.
.PP
\fBParameters:\fP
.RS 4
\fI$ignore\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance 
.RE
.PP

.PP
Definition at line 649 of file Finder\&.php\&.
.SS "ignoreUnreadableDirs ( $ignore = \fCtrue\fP)"

.PP
Definition at line 16243 of file compiled\&.php\&.
.SS "ignoreVCS ( $ignoreVCS)"
Forces the finder to ignore version control directories\&.
.PP
\fBParameters:\fP
.RS 4
\fI$ignoreVCS\fP Whether to exclude VCS files or not
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
ExcludeDirectoryFilterIterator
.RE
.PP

.PP
Definition at line 458 of file Finder\&.php\&.
.SS "ignoreVCS ( $ignoreVCS)"

.PP
Definition at line 16187 of file compiled\&.php\&.
.SS "in ( $dirs)"
Searches files and directories which match defined rules\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dirs\fP \fBA\fP directory path or an array of directories
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Definition at line 667 of file Finder\&.php\&.
.SS "in ( $dirs)"

.PP
Definition at line 16248 of file compiled\&.php\&.
.SS "name ( $pattern)"
Adds rules that files must match\&.
.PP
You can use patterns (delimited with / sign), globs or simple strings\&.
.PP
$finder->name('*\&.php') $finder->name('/\&.php$/') // same as above $finder->name('test\&.php')
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP \fBA\fP pattern (a regexp, a glob, or a string)
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
FilenameFilterIterator
.RE
.PP

.PP
Definition at line 271 of file Finder\&.php\&.
.SS "name ( $pattern)"

.PP
Definition at line 16138 of file compiled\&.php\&.
.SS "notContains ( $pattern)"
Adds tests that file contents must not match\&.
.PP
Strings or PCRE patterns can be used:
.PP
$finder->notContains('Lorem ipsum') $finder->notContains('/Lorem ipsum/i')
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP \fBA\fP pattern (string or regexp)
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
FilecontentFilterIterator 
.RE
.PP

.PP
Definition at line 331 of file Finder\&.php\&.
.SS "notContains ( $pattern)"

.PP
Definition at line 16153 of file compiled\&.php\&.
.SS "notName ( $pattern)"
Adds rules that files must not match\&.
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP \fBA\fP pattern (a regexp, a glob, or a string)
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
FilenameFilterIterator
.RE
.PP

.PP
Definition at line 289 of file Finder\&.php\&.
.SS "notName ( $pattern)"

.PP
Definition at line 16143 of file compiled\&.php\&.
.SS "notPath ( $pattern)"
Adds rules that filenames must not match\&.
.PP
You can use patterns (delimited with / sign) or simple strings\&.
.PP
$finder->notPath('some/special/dir') $finder->notPath('/some\\/special\\/dir/') // same as above
.PP
Use only / as dirname separator\&.
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP \fBA\fP pattern (a regexp or a string)
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
FilenameFilterIterator 
.RE
.PP

.PP
Definition at line 377 of file Finder\&.php\&.
.SS "notPath ( $pattern)"

.PP
Definition at line 16163 of file compiled\&.php\&.
.SS "path ( $pattern)"
Adds rules that filenames must match\&.
.PP
You can use patterns (delimited with / sign) or simple strings\&.
.PP
$finder->path('some/special/dir') $finder->path('/some\\/special\\/dir/') // same as above
.PP
Use only / as dirname separator\&.
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP \fBA\fP pattern (a regexp or a string)
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
FilenameFilterIterator 
.RE
.PP

.PP
Definition at line 354 of file Finder\&.php\&.
.SS "path ( $pattern)"

.PP
Definition at line 16158 of file compiled\&.php\&.
.SS "removeAdapters ()"
Removes all adapters registered in the finder\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance 
.RE
.PP

.PP
Definition at line 156 of file Finder\&.php\&.
.SS "removeAdapters ()"

.PP
Definition at line 16107 of file compiled\&.php\&.
.SS "setAdapter ( $name)"
Selects the adapter to use\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Definition at line 139 of file Finder\&.php\&.
.SS "setAdapter ( $name)"

.PP
Definition at line 16098 of file compiled\&.php\&.
.SS "size ( $size)"
Adds tests for file sizes\&.
.PP
$finder->size('> 10K'); $finder->size('<= 1Ki'); $finder->size(4);
.PP
\fBParameters:\fP
.RS 4
\fI$size\fP \fBA\fP size range string
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
SizeRangeFilterIterator 
.PP
NumberComparator
.RE
.PP

.PP
Definition at line 400 of file Finder\&.php\&.
.SS "size ( $size)"

.PP
Definition at line 16168 of file compiled\&.php\&.
.SS "sort (\\Closure $closure)"
Sorts files and directories by an anonymous function\&.
.PP
The anonymous function receives two  instances to compare\&.
.PP
This can be slow as all the matching files and directories must be retrieved for comparison\&.
.PP
\fBParameters:\fP
.RS 4
\fI$closure\fP An anonymous function
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
SortableIterator
.RE
.PP

.PP
Definition at line 500 of file Finder\&.php\&.
.SS "sort (\\Closure $closure)"

.PP
Definition at line 16203 of file compiled\&.php\&.
.SS "sortByAccessedTime ()"
Sorts files and directories by the last accessed time\&.
.PP
This is the time that the file was last accessed, read or written to\&.
.PP
This can be slow as all the matching files and directories must be retrieved for comparison\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
SortableIterator
.RE
.PP

.PP
Definition at line 556 of file Finder\&.php\&.
.SS "sortByAccessedTime ()"

.PP
Definition at line 16218 of file compiled\&.php\&.
.SS "sortByChangedTime ()"
Sorts files and directories by the last inode changed time\&.
.PP
This is the time that the inode information was last modified (permissions, owner, group or other metadata)\&.
.PP
On Windows, since inode is not available, changed time is actually the file creation time\&.
.PP
This can be slow as all the matching files and directories must be retrieved for comparison\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
SortableIterator
.RE
.PP

.PP
Definition at line 578 of file Finder\&.php\&.
.SS "sortByChangedTime ()"

.PP
Definition at line 16223 of file compiled\&.php\&.
.SS "sortByModifiedTime ()"
Sorts files and directories by the last modified time\&.
.PP
This is the last time the actual contents of the file were last modified\&.
.PP
This can be slow as all the matching files and directories must be retrieved for comparison\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
SortableIterator
.RE
.PP

.PP
Definition at line 598 of file Finder\&.php\&.
.SS "sortByModifiedTime ()"

.PP
Definition at line 16228 of file compiled\&.php\&.
.SS "sortByName ()"
Sorts files and directories by name\&.
.PP
This can be slow as all the matching files and directories must be retrieved for comparison\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
SortableIterator
.RE
.PP

.PP
Definition at line 518 of file Finder\&.php\&.
.SS "sortByName ()"

.PP
Definition at line 16208 of file compiled\&.php\&.
.SS "sortByType ()"
Sorts files and directories by type (directories before files), then by name\&.
.PP
This can be slow as all the matching files and directories must be retrieved for comparison\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance
.RE
.PP
\fBSee also:\fP
.RS 4
SortableIterator
.RE
.PP

.PP
Definition at line 536 of file Finder\&.php\&.
.SS "sortByType ()"

.PP
Definition at line 16213 of file compiled\&.php\&.
.SS "useBestAdapter ()"
Sets the selected adapter to the best one according to the current platform the code is run on\&.
.PP
\fBReturns:\fP
.RS 4
\fBFinder\fP The current \fBFinder\fP instance 
.RE
.PP

.PP
Definition at line 123 of file Finder\&.php\&.
.SS "useBestAdapter ()"

.PP
Definition at line 16093 of file compiled\&.php\&.
.SH "Field Documentation"
.PP 
.SS "const IGNORE_DOT_FILES = 2"

.PP
Definition at line 16058 of file compiled\&.php\&.
.SS "const IGNORE_VCS_FILES = 1"

.PP
Definition at line 16057 of file compiled\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
