.TH "Loop" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Loop \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBForkingLoop\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP (\fBConfiguration\fP $config)"
.br
.ti -1c
.RI "\fBrun\fP (\fBShell\fP $shell)"
.br
.ti -1c
.RI "\fBbeforeLoop\fP ()"
.br
.ti -1c
.RI "\fBafterLoop\fP ()"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static \fBbindLoop\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBPsy\fP \fBShell\fP execution loop\&. 
.PP
Definition at line 22 of file Loop\&.php\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct (\fBConfiguration\fP $config)"
\fBLoop\fP constructor\&.
.PP
The non-forking loop doesn't have much use for \fBConfiguration\fP, so we'll just ignore it\&.
.PP
\fBParameters:\fP
.RS 4
\fI$config\fP 
.RE
.PP

.PP
Definition at line 32 of file Loop\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "afterLoop ()"
\fBA\fP afterLoop callback\&.
.PP
This is executed at the end of each loop iteration\&. In the default (non-forking) loop implementation, this is a no-op\&. 
.PP
Definition at line 148 of file Loop\&.php\&.
.SS "beforeLoop ()"
\fBA\fP beforeLoop callback\&.
.PP
This is executed at the start of each loop iteration\&. In the default (non-forking) loop implementation, this is a no-op\&. 
.PP
Definition at line 137 of file Loop\&.php\&.
.SS "static bindLoop ()\fC [static]\fP, \fC [protected]\fP"
Decide whether to bind the execution loop\&.
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 158 of file Loop\&.php\&.
.SS "run (\fBShell\fP $shell)"
Run the execution loop\&.
.PP
\fBExceptions:\fP
.RS 4
\fIThrowUpException\fP if thrown by the \fCthrow-up\fP command\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$shell\fP 
.RE
.PP

.PP
Definition at line 44 of file Loop\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
