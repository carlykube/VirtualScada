.TH "BladeCompiler" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BladeCompiler \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBCompiler\fP, \fBCompilerInterface\fP, \fBCompiler\fP, and \fBCompilerInterface\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBcompile\fP ($\fBpath\fP=null)"
.br
.ti -1c
.RI "\fBgetPath\fP ()"
.br
.ti -1c
.RI "\fBsetPath\fP ($\fBpath\fP)"
.br
.ti -1c
.RI "\fBcompileString\fP ($value)"
.br
.ti -1c
.RI "\fBcompileEchoDefaults\fP ($value)"
.br
.ti -1c
.RI "\fBextend\fP (callable $compiler)"
.br
.ti -1c
.RI "\fBcreateMatcher\fP ($function)"
.br
.ti -1c
.RI "\fBcreateOpenMatcher\fP ($function)"
.br
.ti -1c
.RI "\fBcreatePlainMatcher\fP ($function)"
.br
.ti -1c
.RI "\fBsetRawTags\fP ($openTag, $closeTag)"
.br
.ti -1c
.RI "\fBsetContentTags\fP ($openTag, $closeTag, $escaped=false)"
.br
.ti -1c
.RI "\fBsetEscapedContentTags\fP ($openTag, $closeTag)"
.br
.ti -1c
.RI "\fBgetContentTags\fP ()"
.br
.ti -1c
.RI "\fBgetEscapedContentTags\fP ()"
.br
.ti -1c
.RI "\fBsetEchoFormat\fP ($\fBformat\fP)"
.br
.ti -1c
.RI "\fBcompile\fP ($\fBpath\fP=null)"
.br
.ti -1c
.RI "\fBgetPath\fP ()"
.br
.ti -1c
.RI "\fBsetPath\fP ($\fBpath\fP)"
.br
.ti -1c
.RI "\fBcompileString\fP ($value)"
.br
.ti -1c
.RI "\fBcompileEchoDefaults\fP ($value)"
.br
.ti -1c
.RI "\fBextend\fP (callable $compiler)"
.br
.ti -1c
.RI "\fBcreateMatcher\fP ($function)"
.br
.ti -1c
.RI "\fBcreateOpenMatcher\fP ($function)"
.br
.ti -1c
.RI "\fBcreatePlainMatcher\fP ($function)"
.br
.ti -1c
.RI "\fBsetRawTags\fP ($openTag, $closeTag)"
.br
.ti -1c
.RI "\fBsetContentTags\fP ($openTag, $closeTag, $escaped=false)"
.br
.ti -1c
.RI "\fBsetEscapedContentTags\fP ($openTag, $closeTag)"
.br
.ti -1c
.RI "\fBgetContentTags\fP ()"
.br
.ti -1c
.RI "\fBgetEscapedContentTags\fP ()"
.br
.ti -1c
.RI "\fBsetEchoFormat\fP ($\fBformat\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBparseToken\fP ($token)"
.br
.ti -1c
.RI "\fBcompileExtensions\fP ($value)"
.br
.ti -1c
.RI "\fBcompileComments\fP ($value)"
.br
.ti -1c
.RI "\fBcompileEchos\fP ($value)"
.br
.ti -1c
.RI "\fBgetEchoMethods\fP ()"
.br
.ti -1c
.RI "\fBcompileStatements\fP ($value)"
.br
.ti -1c
.RI "\fBcompileRawEchos\fP ($value)"
.br
.ti -1c
.RI "\fBcompileRegularEchos\fP ($value)"
.br
.ti -1c
.RI "\fBcompileEscapedEchos\fP ($value)"
.br
.ti -1c
.RI "\fBcompileEach\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileYield\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileShow\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileSection\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileAppend\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndsection\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileStop\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileOverwrite\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileUnless\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndunless\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileLang\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileChoice\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileElse\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileFor\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileForeach\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileForelse\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileIf\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileElseif\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEmpty\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileWhile\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndwhile\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndfor\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndforeach\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndif\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndforelse\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileExtends\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileInclude\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileStack\fP ($expression)"
.br
.ti -1c
.RI "\fBcompilePush\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndpush\fP ($expression)"
.br
.ti -1c
.RI "\fBgetTags\fP ($escaped=false)"
.br
.ti -1c
.RI "\fBparseToken\fP ($token)"
.br
.ti -1c
.RI "\fBcompileExtensions\fP ($value)"
.br
.ti -1c
.RI "\fBcompileComments\fP ($value)"
.br
.ti -1c
.RI "\fBcompileEchos\fP ($value)"
.br
.ti -1c
.RI "\fBgetEchoMethods\fP ()"
.br
.ti -1c
.RI "\fBcompileStatements\fP ($value)"
.br
.ti -1c
.RI "\fBcompileRawEchos\fP ($value)"
.br
.ti -1c
.RI "\fBcompileRegularEchos\fP ($value)"
.br
.ti -1c
.RI "\fBcompileEscapedEchos\fP ($value)"
.br
.ti -1c
.RI "\fBcompileEach\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileYield\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileShow\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileSection\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileAppend\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndsection\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileStop\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileOverwrite\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileUnless\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndunless\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileLang\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileChoice\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileElse\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileFor\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileForeach\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileForelse\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileIf\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileElseif\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEmpty\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileWhile\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndwhile\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndfor\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndforeach\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndif\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndforelse\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileExtends\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileInclude\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileStack\fP ($expression)"
.br
.ti -1c
.RI "\fBcompilePush\fP ($expression)"
.br
.ti -1c
.RI "\fBcompileEndpush\fP ($expression)"
.br
.ti -1c
.RI "\fBgetTags\fP ($escaped=false)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fB$extensions\fP = array()"
.br
.ti -1c
.RI "\fB$path\fP"
.br
.ti -1c
.RI "\fB$compilers\fP = array('Extensions', 'Statements', 'Comments', 'Echos')"
.br
.ti -1c
.RI "\fB$rawTags\fP = array('{!!', '!!}')"
.br
.ti -1c
.RI "\fB$contentTags\fP = array('{{', '}}')"
.br
.ti -1c
.RI "\fB$escapedTags\fP = array('{{{', '}}}')"
.br
.ti -1c
.RI "\fB$echoFormat\fP = '\fBe\fP(%s)'"
.br
.ti -1c
.RI "\fB$footer\fP = array()"
.br
.ti -1c
.RI "\fB$forelseCounter\fP = 0"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 13825 of file compiled\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "compile ( $path = \fCnull\fP)"
Compile the view at the given path\&.
.PP
\fBParameters:\fP
.RS 4
\fI$path\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Implements \fBCompilerInterface\fP\&.
.PP
Definition at line 79 of file BladeCompiler\&.php\&.
.SS "compile ( $path = \fCnull\fP)"

.PP
Implements \fBCompilerInterface\fP\&.
.PP
Definition at line 13836 of file compiled\&.php\&.
.SS "compileAppend ( $expression)\fC [protected]\fP"
Compile the append statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 387 of file BladeCompiler\&.php\&.
.SS "compileAppend ( $expression)\fC [protected]\fP"

.PP
Definition at line 13978 of file compiled\&.php\&.
.SS "compileChoice ( $expression)\fC [protected]\fP"
Compile the choice statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 464 of file BladeCompiler\&.php\&.
.SS "compileChoice ( $expression)\fC [protected]\fP"

.PP
Definition at line 14006 of file compiled\&.php\&.
.SS "compileComments ( $value)\fC [protected]\fP"
Compile \fBBlade\fP comments into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 190 of file BladeCompiler\&.php\&.
.SS "compileComments ( $value)\fC [protected]\fP"

.PP
Definition at line 13883 of file compiled\&.php\&.
.SS "compileEach ( $expression)\fC [protected]\fP"
Compile the each statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 343 of file BladeCompiler\&.php\&.
.SS "compileEach ( $expression)\fC [protected]\fP"

.PP
Definition at line 13962 of file compiled\&.php\&.
.SS "compileEchoDefaults ( $value)"
Compile the default values for the echo statement\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 332 of file BladeCompiler\&.php\&.
.SS "compileEchoDefaults ( $value)"

.PP
Definition at line 13958 of file compiled\&.php\&.
.SS "compileEchos ( $value)\fC [protected]\fP"
Compile \fBBlade\fP echos into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 203 of file BladeCompiler\&.php\&.
.SS "compileEchos ( $value)\fC [protected]\fP"

.PP
Definition at line 13888 of file compiled\&.php\&.
.SS "compileElse ( $expression)\fC [protected]\fP"
Compile the else statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 475 of file BladeCompiler\&.php\&.
.SS "compileElse ( $expression)\fC [protected]\fP"

.PP
Definition at line 14010 of file compiled\&.php\&.
.SS "compileElseif ( $expression)\fC [protected]\fP"
Compile the else-if statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 532 of file BladeCompiler\&.php\&.
.SS "compileElseif ( $expression)\fC [protected]\fP"

.PP
Definition at line 14031 of file compiled\&.php\&.
.SS "compileEmpty ( $expression)\fC [protected]\fP"
Compile the forelse statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 543 of file BladeCompiler\&.php\&.
.SS "compileEmpty ( $expression)\fC [protected]\fP"

.PP
Definition at line 14035 of file compiled\&.php\&.
.SS "compileEndfor ( $expression)\fC [protected]\fP"
Compile the end-for statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 578 of file BladeCompiler\&.php\&.
.SS "compileEndfor ( $expression)\fC [protected]\fP"

.PP
Definition at line 14048 of file compiled\&.php\&.
.SS "compileEndforeach ( $expression)\fC [protected]\fP"
Compile the end-for-each statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 589 of file BladeCompiler\&.php\&.
.SS "compileEndforeach ( $expression)\fC [protected]\fP"

.PP
Definition at line 14052 of file compiled\&.php\&.
.SS "compileEndforelse ( $expression)\fC [protected]\fP"
Compile the end-for-else statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 611 of file BladeCompiler\&.php\&.
.SS "compileEndforelse ( $expression)\fC [protected]\fP"

.PP
Definition at line 14060 of file compiled\&.php\&.
.SS "compileEndif ( $expression)\fC [protected]\fP"
Compile the end-if statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 600 of file BladeCompiler\&.php\&.
.SS "compileEndif ( $expression)\fC [protected]\fP"

.PP
Definition at line 14056 of file compiled\&.php\&.
.SS "compileEndpush ( $expression)\fC [protected]\fP"
Compile the endpush statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 680 of file BladeCompiler\&.php\&.
.SS "compileEndpush ( $expression)\fC [protected]\fP"

.PP
Definition at line 14088 of file compiled\&.php\&.
.SS "compileEndsection ( $expression)\fC [protected]\fP"
Compile the end-section statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 398 of file BladeCompiler\&.php\&.
.SS "compileEndsection ( $expression)\fC [protected]\fP"

.PP
Definition at line 13982 of file compiled\&.php\&.
.SS "compileEndunless ( $expression)\fC [protected]\fP"
Compile the end unless statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 442 of file BladeCompiler\&.php\&.
.SS "compileEndunless ( $expression)\fC [protected]\fP"

.PP
Definition at line 13998 of file compiled\&.php\&.
.SS "compileEndwhile ( $expression)\fC [protected]\fP"
Compile the end-while statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 567 of file BladeCompiler\&.php\&.
.SS "compileEndwhile ( $expression)\fC [protected]\fP"

.PP
Definition at line 14044 of file compiled\&.php\&.
.SS "compileEscapedEchos ( $value)\fC [protected]\fP"
Compile the escaped echo statements\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 312 of file BladeCompiler\&.php\&.
.SS "compileEscapedEchos ( $value)\fC [protected]\fP"

.PP
Definition at line 13949 of file compiled\&.php\&.
.SS "compileExtends ( $expression)\fC [protected]\fP"
Compile the extends statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 622 of file BladeCompiler\&.php\&.
.SS "compileExtends ( $expression)\fC [protected]\fP"

.PP
Definition at line 14064 of file compiled\&.php\&.
.SS "compileExtensions ( $value)\fC [protected]\fP"
Execute the user defined extensions\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 174 of file BladeCompiler\&.php\&.
.SS "compileExtensions ( $value)\fC [protected]\fP"

.PP
Definition at line 13876 of file compiled\&.php\&.
.SS "compileFor ( $expression)\fC [protected]\fP"
Compile the for statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 486 of file BladeCompiler\&.php\&.
.SS "compileFor ( $expression)\fC [protected]\fP"

.PP
Definition at line 14014 of file compiled\&.php\&.
.SS "compileForeach ( $expression)\fC [protected]\fP"
Compile the foreach statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 497 of file BladeCompiler\&.php\&.
.SS "compileForeach ( $expression)\fC [protected]\fP"

.PP
Definition at line 14018 of file compiled\&.php\&.
.SS "compileForelse ( $expression)\fC [protected]\fP"
Compile the forelse statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 508 of file BladeCompiler\&.php\&.
.SS "compileForelse ( $expression)\fC [protected]\fP"

.PP
Definition at line 14022 of file compiled\&.php\&.
.SS "compileIf ( $expression)\fC [protected]\fP"
Compile the if statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 521 of file BladeCompiler\&.php\&.
.SS "compileIf ( $expression)\fC [protected]\fP"

.PP
Definition at line 14027 of file compiled\&.php\&.
.SS "compileInclude ( $expression)\fC [protected]\fP"
Compile the include statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 642 of file BladeCompiler\&.php\&.
.SS "compileInclude ( $expression)\fC [protected]\fP"

.PP
Definition at line 14073 of file compiled\&.php\&.
.SS "compileLang ( $expression)\fC [protected]\fP"
Compile the lang statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 453 of file BladeCompiler\&.php\&.
.SS "compileLang ( $expression)\fC [protected]\fP"

.PP
Definition at line 14002 of file compiled\&.php\&.
.SS "compileOverwrite ( $expression)\fC [protected]\fP"
Compile the overwrite statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 420 of file BladeCompiler\&.php\&.
.SS "compileOverwrite ( $expression)\fC [protected]\fP"

.PP
Definition at line 13990 of file compiled\&.php\&.
.SS "compilePush ( $expression)\fC [protected]\fP"
Compile the push statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 669 of file BladeCompiler\&.php\&.
.SS "compilePush ( $expression)\fC [protected]\fP"

.PP
Definition at line 14084 of file compiled\&.php\&.
.SS "compileRawEchos ( $value)\fC [protected]\fP"
Compile the 'raw' echo statements\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 270 of file BladeCompiler\&.php\&.
.SS "compileRawEchos ( $value)\fC [protected]\fP"

.PP
Definition at line 13930 of file compiled\&.php\&.
.SS "compileRegularEchos ( $value)\fC [protected]\fP"
Compile the 'regular' echo statements\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 290 of file BladeCompiler\&.php\&.
.SS "compileRegularEchos ( $value)\fC [protected]\fP"

.PP
Definition at line 13939 of file compiled\&.php\&.
.SS "compileSection ( $expression)\fC [protected]\fP"
Compile the section statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 376 of file BladeCompiler\&.php\&.
.SS "compileSection ( $expression)\fC [protected]\fP"

.PP
Definition at line 13974 of file compiled\&.php\&.
.SS "compileShow ( $expression)\fC [protected]\fP"
Compile the show statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 365 of file BladeCompiler\&.php\&.
.SS "compileShow ( $expression)\fC [protected]\fP"

.PP
Definition at line 13970 of file compiled\&.php\&.
.SS "compileStack ( $expression)\fC [protected]\fP"
Compile the stack statements into the content\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 658 of file BladeCompiler\&.php\&.
.SS "compileStack ( $expression)\fC [protected]\fP"

.PP
Definition at line 14080 of file compiled\&.php\&.
.SS "compileStatements ( $value)\fC [protected]\fP"
Compile \fBBlade\fP statements that start with '@'\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 249 of file BladeCompiler\&.php\&.
.SS "compileStatements ( $value)\fC [protected]\fP"

.PP
Definition at line 13920 of file compiled\&.php\&.
.SS "compileStop ( $expression)\fC [protected]\fP"
Compile the stop statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 409 of file BladeCompiler\&.php\&.
.SS "compileStop ( $expression)\fC [protected]\fP"

.PP
Definition at line 13986 of file compiled\&.php\&.
.SS "compileString ( $value)"
Compile the given \fBBlade\fP template contents\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 123 of file BladeCompiler\&.php\&.
.SS "compileString ( $value)"

.PP
Definition at line 13855 of file compiled\&.php\&.
.SS "compileUnless ( $expression)\fC [protected]\fP"
Compile the unless statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 431 of file BladeCompiler\&.php\&.
.SS "compileUnless ( $expression)\fC [protected]\fP"

.PP
Definition at line 13994 of file compiled\&.php\&.
.SS "compileWhile ( $expression)\fC [protected]\fP"
Compile the while statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 556 of file BladeCompiler\&.php\&.
.SS "compileWhile ( $expression)\fC [protected]\fP"

.PP
Definition at line 14040 of file compiled\&.php\&.
.SS "compileYield ( $expression)\fC [protected]\fP"
Compile the yield statements into valid \fBPHP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expression\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 354 of file BladeCompiler\&.php\&.
.SS "compileYield ( $expression)\fC [protected]\fP"

.PP
Definition at line 13966 of file compiled\&.php\&.
.SS "createMatcher ( $function)"
Get the regular expression for a generic \fBBlade\fP function\&.
.PP
\fBParameters:\fP
.RS 4
\fI$function\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 702 of file BladeCompiler\&.php\&.
.SS "createMatcher ( $function)"

.PP
Definition at line 14096 of file compiled\&.php\&.
.SS "createOpenMatcher ( $function)"
Get the regular expression for a generic \fBBlade\fP function\&.
.PP
\fBParameters:\fP
.RS 4
\fI$function\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 713 of file BladeCompiler\&.php\&.
.SS "createOpenMatcher ( $function)"

.PP
Definition at line 14100 of file compiled\&.php\&.
.SS "createPlainMatcher ( $function)"
Create a plain \fBBlade\fP matcher\&.
.PP
\fBParameters:\fP
.RS 4
\fI$function\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 724 of file BladeCompiler\&.php\&.
.SS "createPlainMatcher ( $function)"

.PP
Definition at line 14104 of file compiled\&.php\&.
.SS "extend (callable $compiler)"
Register a custom \fBBlade\fP compiler\&.
.PP
\fBParameters:\fP
.RS 4
\fI$compiler\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 691 of file BladeCompiler\&.php\&.
.SS "extend (callable $compiler)"

.PP
Definition at line 14092 of file compiled\&.php\&.
.SS "getContentTags ()"
Gets the content tags used for the compiler\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 773 of file BladeCompiler\&.php\&.
.SS "getContentTags ()"

.PP
Definition at line 14121 of file compiled\&.php\&.
.SS "getEchoMethods ()\fC [protected]\fP"
Get the echo methdos in the proper order for compilation\&.
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Definition at line 218 of file BladeCompiler\&.php\&.
.SS "getEchoMethods ()\fC [protected]\fP"

.PP
Definition at line 13895 of file compiled\&.php\&.
.SS "getEscapedContentTags ()"
Gets the escaped content tags used for the compiler\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 783 of file BladeCompiler\&.php\&.
.SS "getEscapedContentTags ()"

.PP
Definition at line 14125 of file compiled\&.php\&.
.SS "getPath ()"
Get the path currently being compiled\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 101 of file BladeCompiler\&.php\&.
.SS "getPath ()"

.PP
Definition at line 13847 of file compiled\&.php\&.
.SS "getTags ( $escaped = \fCfalse\fP)\fC [protected]\fP"
Gets the tags used for the compiler\&.
.PP
\fBParameters:\fP
.RS 4
\fI$escaped\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Definition at line 794 of file BladeCompiler\&.php\&.
.SS "getTags ( $escaped = \fCfalse\fP)\fC [protected]\fP"

.PP
Definition at line 14129 of file compiled\&.php\&.
.SS "parseToken ( $token)\fC [protected]\fP"
Parse the tokens from the template\&.
.PP
\fBParameters:\fP
.RS 4
\fI$token\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 153 of file BladeCompiler\&.php\&.
.SS "parseToken ( $token)\fC [protected]\fP"

.PP
Definition at line 13866 of file compiled\&.php\&.
.SS "setContentTags ( $openTag,  $closeTag,  $escaped = \fCfalse\fP)"
Sets the content tags used for the compiler\&.
.PP
\fBParameters:\fP
.RS 4
\fI$openTag\fP 
.br
\fI$closeTag\fP 
.br
\fI$escaped\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 749 of file BladeCompiler\&.php\&.
.SS "setContentTags ( $openTag,  $closeTag,  $escaped = \fCfalse\fP)"

.PP
Definition at line 14112 of file compiled\&.php\&.
.SS "setEchoFormat ( $format)"
Set the echo format to be used by the compiler\&.
.PP
\fBParameters:\fP
.RS 4
\fI$format\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 807 of file BladeCompiler\&.php\&.
.SS "setEchoFormat ( $format)"

.PP
Definition at line 14134 of file compiled\&.php\&.
.SS "setEscapedContentTags ( $openTag,  $closeTag)"
Sets the escaped content tags used for the compiler\&.
.PP
\fBParameters:\fP
.RS 4
\fI$openTag\fP 
.br
\fI$closeTag\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 763 of file BladeCompiler\&.php\&.
.SS "setEscapedContentTags ( $openTag,  $closeTag)"

.PP
Definition at line 14117 of file compiled\&.php\&.
.SS "setPath ( $path)"
Set the path currently being compiled\&.
.PP
\fBParameters:\fP
.RS 4
\fI$path\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 112 of file BladeCompiler\&.php\&.
.SS "setPath ( $path)"

.PP
Definition at line 13851 of file compiled\&.php\&.
.SS "setRawTags ( $openTag,  $closeTag)"
Sets the raw tags used for the compiler\&.
.PP
\fBParameters:\fP
.RS 4
\fI$openTag\fP 
.br
\fI$closeTag\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 736 of file BladeCompiler\&.php\&.
.SS "setRawTags ( $openTag,  $closeTag)"

.PP
Definition at line 14108 of file compiled\&.php\&.
.SH "Field Documentation"
.PP 
.SS "$compilers = array('Extensions', 'Statements', 'Comments', 'Echos')\fC [protected]\fP"

.PP
Definition at line 13829 of file compiled\&.php\&.
.SS "$contentTags = array('{{', '}}')\fC [protected]\fP"

.PP
Definition at line 13831 of file compiled\&.php\&.
.SS "$echoFormat = '\fBe\fP(%s)'\fC [protected]\fP"

.PP
Definition at line 13833 of file compiled\&.php\&.
.SS "$escapedTags = array('{{{', '}}}')\fC [protected]\fP"

.PP
Definition at line 13832 of file compiled\&.php\&.
.SS "$extensions = array()\fC [protected]\fP"

.PP
Definition at line 13827 of file compiled\&.php\&.
.SS "$footer = array()\fC [protected]\fP"

.PP
Definition at line 13834 of file compiled\&.php\&.
.SS "$forelseCounter = 0\fC [protected]\fP"

.PP
Definition at line 13835 of file compiled\&.php\&.
.SS "$\fBpath\fP\fC [protected]\fP"

.PP
Definition at line 13828 of file compiled\&.php\&.
.SS "$rawTags = array('{!!', '!!}')\fC [protected]\fP"

.PP
Definition at line 13830 of file compiled\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
