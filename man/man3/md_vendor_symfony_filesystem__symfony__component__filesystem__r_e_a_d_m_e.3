.TH "md_vendor_symfony_filesystem__symfony__component__filesystem__r_e_a_d_m_e" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_vendor_symfony_filesystem__symfony__component__filesystem__r_e_a_d_m_e \- Filesystem Component 
Filesystem provides basic utility to manipulate the file system:
.PP
```php <?php
.PP
use \fBSymfony\fP;
.PP
$filesystem = new Filesystem();
.PP
$filesystem->copy($originFile, $targetFile, $override = false);
.PP
$filesystem->mkdir($dirs, $mode = 0777);
.PP
$filesystem->touch($files, $time = null, $atime = null);
.PP
$filesystem->remove($files);
.PP
$filesystem->exists($files);
.PP
$filesystem->chmod($files, $mode, $umask = 0000, $recursive = false);
.PP
$filesystem->chown($files, $user, $recursive = false);
.PP
$filesystem->chgrp($files, $group, $recursive = false);
.PP
$filesystem->rename($origin, $target);
.PP
$filesystem->symlink($originDir, $targetDir, $copyOnWindows = false);
.PP
$filesystem->makePathRelative($endPath, $startPath);
.PP
$filesystem->mirror($originDir, $targetDir,  $iterator = null, $options = array());
.PP
$filesystem->isAbsolutePath($file); ```
.PP
.SS "Resources "
.PP
You can run the unit tests with the following command: 
.PP
.nf
$ cd path/to/Symfony/Component/Filesystem/
$ composer install
$ phpunit
.fi
.PP
 
