.TH "Swift_Mime_Message" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Swift_Mime_Message \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBSwift_Mime_MimeEntity\fP\&.
.PP
Inherited by \fBSwift_Mime_SimpleMessage\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBgenerateId\fP ()"
.br
.ti -1c
.RI "\fBsetSubject\fP ($subject)"
.br
.ti -1c
.RI "\fBgetSubject\fP ()"
.br
.ti -1c
.RI "\fBsetDate\fP ($date)"
.br
.ti -1c
.RI "\fBgetDate\fP ()"
.br
.ti -1c
.RI "\fBsetReturnPath\fP ($address)"
.br
.ti -1c
.RI "\fBgetReturnPath\fP ()"
.br
.ti -1c
.RI "\fBsetSender\fP ($address, $\fBname\fP=null)"
.br
.ti -1c
.RI "\fBgetSender\fP ()"
.br
.ti -1c
.RI "\fBsetFrom\fP ($addresses, $\fBname\fP=null)"
.br
.ti -1c
.RI "\fBgetFrom\fP ()"
.br
.ti -1c
.RI "\fBsetReplyTo\fP ($addresses, $\fBname\fP=null)"
.br
.ti -1c
.RI "\fBgetReplyTo\fP ()"
.br
.ti -1c
.RI "\fBsetTo\fP ($addresses, $\fBname\fP=null)"
.br
.ti -1c
.RI "\fBgetTo\fP ()"
.br
.ti -1c
.RI "\fBsetCc\fP ($addresses, $\fBname\fP=null)"
.br
.ti -1c
.RI "\fBgetCc\fP ()"
.br
.ti -1c
.RI "\fBsetBcc\fP ($addresses, $\fBname\fP=null)"
.br
.ti -1c
.RI "\fBgetBcc\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBA\fP Message (RFC 2822) object\&.
.PP
\fBAuthor:\fP
.RS 4
Chris Corbyn 
.RE
.PP

.PP
Definition at line 16 of file Message\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "generateId ()"
Generates a valid Message-ID and switches to it\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.SS "getBcc ()"
Get the Bcc addresses for this message\&.
.PP
This method always returns an associative array, whereby the keys provide the actual email addresses\&.
.PP
\fBReturns:\fP
.RS 4
string[] 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "getCc ()"
Get the Cc addresses for this message\&.
.PP
This method always returns an associative array, whereby the keys provide the actual email addresses\&.
.PP
\fBReturns:\fP
.RS 4
string[] 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "getDate ()"
Get the origination date of the message as a UNIX timestamp\&.
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "getFrom ()"
Get the From address(es) of this message\&.
.PP
This method always returns an associative array where the keys are the addresses\&.
.PP
\fBReturns:\fP
.RS 4
string[] 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "getReplyTo ()"
Get the Reply-To addresses for this message\&.
.PP
This method always returns an associative array where the keys provide the email addresses\&.
.PP
\fBReturns:\fP
.RS 4
string[] 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "getReturnPath ()"
Get the return-path (bounce-detect) address\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "getSender ()"
Get the sender address for this message\&.
.PP
This has a higher significance than the From address\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "getSubject ()"
Get the subject of the message\&.
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "getTo ()"
Get the To addresses for this message\&.
.PP
This method always returns an associative array, whereby the keys provide the actual email addresses\&.
.PP
\fBReturns:\fP
.RS 4
string[] 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setBcc ( $addresses,  $name = \fCnull\fP)"
Set the Bcc address(es)\&.
.PP
Recipients set in this field will receive a 'blind-carbon-copy' of this message\&.
.PP
In other words, they will get the message, but any other recipients of the message will have no such knowledge of their receipt of it\&.
.PP
This method has the same synopsis as \fBsetFrom()\fP and \fBsetTo()\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$addresses\fP 
.br
\fI$name\fP optional 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setCc ( $addresses,  $name = \fCnull\fP)"
Set the Cc address(es)\&.
.PP
Recipients set in this field will receive a 'carbon-copy' of this message\&.
.PP
This method has the same synopsis as \fBsetFrom()\fP and \fBsetTo()\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fI$addresses\fP 
.br
\fI$name\fP optional 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setDate ( $date)"
Set the origination date of the message as a UNIX timestamp\&.
.PP
\fBParameters:\fP
.RS 4
\fI$date\fP 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setFrom ( $addresses,  $name = \fCnull\fP)"
Set the From address of this message\&.
.PP
It is permissible for multiple From addresses to be set using an array\&.
.PP
If multiple From addresses are used, you SHOULD set the Sender address and according to RFC 2822, MUST set the sender address\&.
.PP
An array can be used if display names are to be provided: i\&.e\&. array('email@address.com' => 'Real Name')\&.
.PP
If the second parameter is provided and the first is a string, then $name is associated with the address\&.
.PP
\fBParameters:\fP
.RS 4
\fI$addresses\fP 
.br
\fI$name\fP optional 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setReplyTo ( $addresses,  $name = \fCnull\fP)"
Set the Reply-To address(es)\&.
.PP
Any replies from the receiver will be sent to this address\&.
.PP
It is permissible for multiple reply-to addresses to be set using an array\&.
.PP
This method has the same synopsis as \fBsetFrom()\fP and \fBsetTo()\fP\&.
.PP
If the second parameter is provided and the first is a string, then $name is associated with the address\&.
.PP
\fBParameters:\fP
.RS 4
\fI$addresses\fP 
.br
\fI$name\fP optional 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setReturnPath ( $address)"
Set the return-path (bounce-detect) address\&.
.PP
\fBParameters:\fP
.RS 4
\fI$address\fP 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setSender ( $address,  $name = \fCnull\fP)"
Set the sender of this message\&.
.PP
If multiple addresses are present in the From field, this SHOULD be set\&.
.PP
According to RFC 2822 it is a requirement when there are multiple From addresses, but \fBSwift\fP itself does not require it directly\&.
.PP
An associative array (with one element!) can be used to provide a display- name: i\&.e\&. array('email' => 'Real Name')\&.
.PP
If the second parameter is provided and the first is a string, then $name is associated with the address\&.
.PP
\fBParameters:\fP
.RS 4
\fI$address\fP 
.br
\fI$name\fP optional 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setSubject ( $subject)"
Set the subject of the message\&.
.PP
\fBParameters:\fP
.RS 4
\fI$subject\fP 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.
.SS "setTo ( $addresses,  $name = \fCnull\fP)"
Set the To address(es)\&.
.PP
Recipients set in this field will receive a copy of this message\&.
.PP
This method has the same synopsis as \fBsetFrom()\fP and \fBsetCc()\fP\&.
.PP
If the second parameter is provided and the first is a string, then $name is associated with the address\&.
.PP
\fBParameters:\fP
.RS 4
\fI$addresses\fP 
.br
\fI$name\fP optional 
.RE
.PP

.PP
Implemented in \fBSwift_Mime_SimpleMessage\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
