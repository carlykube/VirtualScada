.TH "PHPUnit_Framework_MockObject_Builder_ParametersMatch" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PHPUnit_Framework_MockObject_Builder_ParametersMatch \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPHPUnit_Framework_MockObject_Builder_Match\fP\&.
.PP
Inherited by \fBPHPUnit_Framework_MockObject_Builder_MethodNameMatch\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBwith\fP ()"
.br
.ti -1c
.RI "\fBwithAnyParameters\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 22 of file ParametersMatch\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "with ()"
Sets the parameters to match for, each parameter to this funtion will be part of match\&. To perform specific matches or constraints create a new \fBPHPUnit_Framework_Constraint\fP and use it for the parameter\&. If the parameter value is not a constraint it will use the \fBPHPUnit_Framework_Constraint_IsEqual\fP for the value\&.
.PP
Some examples: \fC // match first parameter with value 2 $b->with(2); // match first parameter with value 'smock' and second identical to 42 $b->with('smock', new \fBPHPUnit_Framework_Constraint_IsEqual(42)\fP); \fP
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_MockObject_Builder_ParametersMatch\fP 
.RE
.PP

.PP
Implemented in \fBPHPUnit_Framework_MockObject_Builder_InvocationMocker\fP\&.
.SS "withAnyParameters ()"
Sets a matcher which allows any kind of parameters\&.
.PP
Some examples: \fC // match any number of parameters $b->withAnyParamers(); \fP
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_MockObject_Matcher_AnyParameters\fP 
.RE
.PP

.PP
Implemented in \fBPHPUnit_Framework_MockObject_Builder_InvocationMocker\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
