.TH "Framework_MockObject_GeneratorTest" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Framework_MockObject_GeneratorTest \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPHPUnit_Framework_TestCase\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBtestGetMockFailsWhenInvalidFunctionNameIsPassedInAsAFunctionToMock\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockCanCreateNonExistingFunctions\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockGeneratorFails\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForAbstractClassDoesNotFailWhenFakingInterfaces\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForAbstractClassStubbingAbstractClass\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForAbstractClassWithNonExistentMethods\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForAbstractClassShouldCreateStubsOnlyForAbstractMethodWhenNoMethodsWereInformed\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForAbstractClassExpectingInvalidArgumentException\fP ($className, $mockClassName)"
.br
.ti -1c
.RI "\fBtestGetMockForAbstractClassAbstractClassDoesNotExist\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForTraitWithNonExistentMethodsAndNonAbstractMethods\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForTraitStubbingAbstractMethod\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForSingletonWithReflectionSuccess\fP ()"
.br
.ti -1c
.RI "\fBtestGetMockForSingletonWithUnserializeFail\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBgetMockForAbstractClassExpectsInvalidArgumentExceptionDataprovider\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBsetUp\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fB$generator\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 2 of file GeneratorTest\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "static getMockForAbstractClassExpectsInvalidArgumentExceptionDataprovider ()\fC [static]\fP"
Dataprovider for test 'testGetMockForAbstractClassExpectingInvalidArgumentException' 
.PP
Definition at line 111 of file GeneratorTest\&.php\&.
.SS "setUp ()\fC [protected]\fP"

.PP
Definition at line 9 of file GeneratorTest\&.php\&.
.SS "testGetMockCanCreateNonExistingFunctions ()"
\fBPHPUnit_Framework_MockObject_Generator::getMock\fP 
.PP
Definition at line 26 of file GeneratorTest\&.php\&.
.SS "testGetMockFailsWhenInvalidFunctionNameIsPassedInAsAFunctionToMock ()"
\fBPHPUnit_Framework_MockObject_Generator::getMock\fP  \fBPHPUnit_Framework_Exception\fP 
.PP
Definition at line 18 of file GeneratorTest\&.php\&.
.SS "testGetMockForAbstractClassAbstractClassDoesNotExist ()"
\fBPHPUnit_Framework_MockObject_Generator::getMockForAbstractClass\fP  \fBPHPUnit_Framework_MockObject_RuntimeException\fP 
.PP
Definition at line 103 of file GeneratorTest\&.php\&.
.SS "testGetMockForAbstractClassDoesNotFailWhenFakingInterfaces ()"
\fBPHPUnit_Framework_MockObject_Generator::getMockForAbstractClass\fP 
.PP
Definition at line 45 of file GeneratorTest\&.php\&.
.SS "testGetMockForAbstractClassExpectingInvalidArgumentException ( $className,  $mockClassName)"
getMockForAbstractClassExpectsInvalidArgumentExceptionDataprovider  \fBPHPUnit_Framework_MockObject_Generator::getMockForAbstractClass\fP  \fBPHPUnit_Framework_Exception\fP 
.PP
Definition at line 94 of file GeneratorTest\&.php\&.
.SS "testGetMockForAbstractClassShouldCreateStubsOnlyForAbstractMethodWhenNoMethodsWereInformed ()"
\fBPHPUnit_Framework_MockObject_Generator::getMockForAbstractClass\fP 
.PP
Definition at line 77 of file GeneratorTest\&.php\&.
.SS "testGetMockForAbstractClassStubbingAbstractClass ()"
\fBPHPUnit_Framework_MockObject_Generator::getMockForAbstractClass\fP 
.PP
Definition at line 54 of file GeneratorTest\&.php\&.
.SS "testGetMockForAbstractClassWithNonExistentMethods ()"
\fBPHPUnit_Framework_MockObject_Generator::getMockForAbstractClass\fP 
.PP
Definition at line 63 of file GeneratorTest\&.php\&.
.SS "testGetMockForSingletonWithReflectionSuccess ()"
\fBPHP\fP 5\&.4\&.0 
.PP
Definition at line 149 of file GeneratorTest\&.php\&.
.SS "testGetMockForSingletonWithUnserializeFail ()"
Same as 'testGetMockForSingletonWithReflectionSuccess', but we expect warning for \fBPHP\fP < 5\&.4\&.0 since \fBPHPUnit\fP will try to execute private __wakeup on unserialize 
.PP
Definition at line 163 of file GeneratorTest\&.php\&.
.SS "testGetMockForTraitStubbingAbstractMethod ()"
\fBPHPUnit_Framework_MockObject_Generator::getMockForTrait\fP  \fBPHP\fP 5\&.4\&.0 
.PP
Definition at line 140 of file GeneratorTest\&.php\&.
.SS "testGetMockForTraitWithNonExistentMethodsAndNonAbstractMethods ()"
\fBPHPUnit_Framework_MockObject_Generator::getMockForTrait\fP  \fBPHP\fP 5\&.4\&.0 
.PP
Definition at line 123 of file GeneratorTest\&.php\&.
.SS "testGetMockGeneratorFails ()"
\fBPHPUnit_Framework_MockObject_Generator::getMock\fP  \fBPHPUnit_Framework_MockObject_RuntimeException\fP  duplicates: 'foo, foo' 
.PP
Definition at line 37 of file GeneratorTest\&.php\&.
.SH "Field Documentation"
.PP 
.SS "$generator\fC [protected]\fP"

.PP
Definition at line 7 of file GeneratorTest\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
