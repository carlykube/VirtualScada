.TH "Util_TestTest" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Util_TestTest \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPHPUnit_Framework_TestCase\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBtestGetExpectedException\fP ()"
.br
.ti -1c
.RI "\fBtestGetExpectedRegExp\fP ()"
.br
.ti -1c
.RI "\fBtestGetRequirements\fP ($test, $result)"
.br
.ti -1c
.RI "\fBrequirementsProvider\fP ()"
.br
.ti -1c
.RI "\fBtestGetRequirementsMergesClassAndMethodDocBlocks\fP ()"
.br
.ti -1c
.RI "\fBtestGetMissingRequirements\fP ($test, $result)"
.br
.ti -1c
.RI "\fBmissingRequirementsProvider\fP ()"
.br
.ti -1c
.RI "\fBtestGetProvidedDataRegEx\fP ()"
.br
.ti -1c
.RI "\fBtestParseAnnotation\fP ()"
.br
.ti -1c
.RI "\fBmethodForTestParseAnnotation\fP ()"
.br
.ti -1c
.RI "\fBtestParseAnnotationThatIsOnlyOneLine\fP ()"
.br
.ti -1c
.RI "\fBmethodForTestParseAnnotationThatIsOnlyOneLine\fP ()"
.br
.ti -1c
.RI "\fBtestGetLinesToBeCovered\fP ($test, $lines)"
.br
.ti -1c
.RI "\fBtestGetLinesToBeCovered2\fP ()"
.br
.ti -1c
.RI "\fBtestGetLinesToBeCovered3\fP ()"
.br
.ti -1c
.RI "\fBtestGetLinesToBeCovered4\fP ()"
.br
.ti -1c
.RI "\fBtestGetLinesToBeCoveredSkipsNonExistentMethods\fP ()"
.br
.ti -1c
.RI "\fBtestTwoCoversDefaultClassAnnoationsAreNotAllowed\fP ()"
.br
.ti -1c
.RI "\fBtestFunctionParenthesesAreAllowed\fP ()"
.br
.ti -1c
.RI "\fBtestFunctionParenthesesAreAllowedWithWhitespace\fP ()"
.br
.ti -1c
.RI "\fBtestMethodParenthesesAreAllowed\fP ()"
.br
.ti -1c
.RI "\fBtestMethodParenthesesAreAllowedWithWhitespace\fP ()"
.br
.ti -1c
.RI "\fBgetLinesToBeCoveredProvider\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 29 of file TestTest\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "getLinesToBeCoveredProvider ()"

.PP
Definition at line 459 of file TestTest\&.php\&.
.SS "methodForTestParseAnnotation ()"
\fBFoo\fP  ほげ 
.PP
\fBTodo\fP
.RS 4
Remove fixture from test class 
.RE
.PP

.PP
Definition at line 279 of file TestTest\&.php\&.
.SS "methodForTestParseAnnotationThatIsOnlyOneLine ()"
\fBBar\fP 
.PP
Definition at line 295 of file TestTest\&.php\&.
.SS "missingRequirementsProvider ()"

.PP
Definition at line 214 of file TestTest\&.php\&.
.SS "requirementsProvider ()"

.PP
Definition at line 137 of file TestTest\&.php\&.
.SS "testFunctionParenthesesAreAllowed ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed 
.PP
Definition at line 403 of file TestTest\&.php\&.
.SS "testFunctionParenthesesAreAllowedWithWhitespace ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed 
.PP
Definition at line 418 of file TestTest\&.php\&.
.SS "testGetExpectedException ()"
\fBPHPUnit_Util_Test::getExpectedException\fP 
.PP
\fBTodo\fP
.RS 4
Split up in separate tests 
.RE
.PP

.PP
Definition at line 35 of file TestTest\&.php\&.
.SS "testGetExpectedRegExp ()"
\fBPHPUnit_Util_Test::getExpectedException\fP 
.PP
Definition at line 107 of file TestTest\&.php\&.
.SS "testGetLinesToBeCovered ( $test,  $lines)"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed  PHPUnit_Util_Test::resolveElementToReflectionObjects  getLinesToBeCoveredProvider 
.PP
Definition at line 306 of file TestTest\&.php\&.
.SS "testGetLinesToBeCovered2 ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed  PHPUnit_Util_Test::resolveElementToReflectionObjects  \fBPHPUnit_Framework_CodeCoverageException\fP 
.PP
Definition at line 338 of file TestTest\&.php\&.
.SS "testGetLinesToBeCovered3 ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed  PHPUnit_Util_Test::resolveElementToReflectionObjects  \fBPHPUnit_Framework_CodeCoverageException\fP 
.PP
Definition at line 351 of file TestTest\&.php\&.
.SS "testGetLinesToBeCovered4 ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed  PHPUnit_Util_Test::resolveElementToReflectionObjects  \fBPHPUnit_Framework_CodeCoverageException\fP 
.PP
Definition at line 364 of file TestTest\&.php\&.
.SS "testGetLinesToBeCoveredSkipsNonExistentMethods ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed 
.PP
Definition at line 375 of file TestTest\&.php\&.
.SS "testGetMissingRequirements ( $test,  $result)"
\fBPHPUnit_Util_Test::getMissingRequirements\fP  missingRequirementsProvider 
.PP
Definition at line 206 of file TestTest\&.php\&.
.SS "testGetProvidedDataRegEx ()"

.PP
\fBTodo\fP
.RS 4
This test does not really test functionality of \fBPHPUnit_Util_Test\fP 
.RE
.PP

.PP
Definition at line 239 of file TestTest\&.php\&.
.SS "testGetRequirements ( $test,  $result)"
\fBPHPUnit_Util_Test::getRequirements\fP  requirementsProvider 
.PP
Definition at line 129 of file TestTest\&.php\&.
.SS "testGetRequirementsMergesClassAndMethodDocBlocks ()"
\fBPHPUnit_Util_Test::getRequirements\fP 
.PP
Definition at line 180 of file TestTest\&.php\&.
.SS "testMethodParenthesesAreAllowed ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed 
.PP
Definition at line 433 of file TestTest\&.php\&.
.SS "testMethodParenthesesAreAllowedWithWhitespace ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed 
.PP
Definition at line 448 of file TestTest\&.php\&.
.SS "testParseAnnotation ()"
\fBPHPUnit_Util_Test::getDependencies\fP 
.PP
\fBTodo\fP
.RS 4
Not sure what this test tests (name is misleading at least) 
.RE
.PP

.PP
Definition at line 266 of file TestTest\&.php\&.
.SS "testParseAnnotationThatIsOnlyOneLine ()"
\fBPHPUnit_Util_Test::getDependencies\fP 
.PP
Definition at line 286 of file TestTest\&.php\&.
.SS "testTwoCoversDefaultClassAnnoationsAreNotAllowed ()"
\fBPHPUnit_Util_Test::getLinesToBeCovered\fP  PHPUnit_Util_Test::getLinesToBeCoveredOrUsed  \fBPHPUnit_Framework_CodeCoverageException\fP 
.PP
Definition at line 391 of file TestTest\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
