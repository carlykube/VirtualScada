.TH "RouteCollection" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RouteCollection \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits Countable, IteratorAggregate, Countable, and IteratorAggregate\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBadd\fP (\fBRoute\fP $route)"
.br
.ti -1c
.RI "\fBmatch\fP (\fBRequest\fP $request)"
.br
.ti -1c
.RI "\fBhasNamedRoute\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBgetByName\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBgetByAction\fP ($action)"
.br
.ti -1c
.RI "\fBgetRoutes\fP ()"
.br
.ti -1c
.RI "\fBgetIterator\fP ()"
.br
.ti -1c
.RI "\fBcount\fP ()"
.br
.ti -1c
.RI "\fBadd\fP (\fBRoute\fP $route)"
.br
.ti -1c
.RI "\fBmatch\fP (\fBRequest\fP $request)"
.br
.ti -1c
.RI "\fBhasNamedRoute\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBgetByName\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fBgetByAction\fP ($action)"
.br
.ti -1c
.RI "\fBgetRoutes\fP ()"
.br
.ti -1c
.RI "\fBgetIterator\fP ()"
.br
.ti -1c
.RI "\fBcount\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBaddToCollections\fP ($route)"
.br
.ti -1c
.RI "\fBaddLookups\fP ($route)"
.br
.ti -1c
.RI "\fBaddToActionList\fP ($action, $route)"
.br
.ti -1c
.RI "\fBcheckForAlternateVerbs\fP ($request)"
.br
.ti -1c
.RI "\fBgetRouteForMethods\fP ($request, array $methods)"
.br
.ti -1c
.RI "\fBmethodNotAllowed\fP (array $others)"
.br
.ti -1c
.RI "\fBcheck\fP (array $routes, $request, $includingMethod=true)"
.br
.ti -1c
.RI "\fBget\fP ($method=null)"
.br
.ti -1c
.RI "\fBaddToCollections\fP ($route)"
.br
.ti -1c
.RI "\fBaddLookups\fP ($route)"
.br
.ti -1c
.RI "\fBaddToActionList\fP ($action, $route)"
.br
.ti -1c
.RI "\fBcheckForAlternateVerbs\fP ($request)"
.br
.ti -1c
.RI "\fBgetRouteForMethods\fP ($request, array $methods)"
.br
.ti -1c
.RI "\fBmethodNotAllowed\fP (array $others)"
.br
.ti -1c
.RI "\fBcheck\fP (array $routes, $request, $includingMethod=true)"
.br
.ti -1c
.RI "\fBget\fP ($method=null)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fB$routes\fP = array()"
.br
.ti -1c
.RI "\fB$allRoutes\fP = array()"
.br
.ti -1c
.RI "\fB$nameList\fP = array()"
.br
.ti -1c
.RI "\fB$actionList\fP = array()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 7710 of file compiled\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "add (\fBRoute\fP $route)"
Add a \fBRoute\fP instance to the collection\&.
.PP
\fBParameters:\fP
.RS 4
\fI$route\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 47 of file RouteCollection\&.php\&.
.SS "add (\fBRoute\fP $route)"

.PP
Definition at line 7716 of file compiled\&.php\&.
.SS "addLookups ( $route)\fC [protected]\fP"
Add the route to any look-up tables if necessary\&.
.PP
\fBParameters:\fP
.RS 4
\fI$route\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 80 of file RouteCollection\&.php\&.
.SS "addLookups ( $route)\fC [protected]\fP"

.PP
Definition at line 7730 of file compiled\&.php\&.
.SS "addToActionList ( $action,  $route)\fC [protected]\fP"
Add a route to the controller action dictionary\&.
.PP
\fBParameters:\fP
.RS 4
\fI$action\fP 
.br
\fI$route\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 108 of file RouteCollection\&.php\&.
.SS "addToActionList ( $action,  $route)\fC [protected]\fP"

.PP
Definition at line 7740 of file compiled\&.php\&.
.SS "addToCollections ( $route)\fC [protected]\fP"
Add the given route to the arrays of routes\&.
.PP
\fBParameters:\fP
.RS 4
\fI$route\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 62 of file RouteCollection\&.php\&.
.SS "addToCollections ( $route)\fC [protected]\fP"

.PP
Definition at line 7722 of file compiled\&.php\&.
.SS "check (array $routes,  $request,  $includingMethod = \fCtrue\fP)\fC [protected]\fP"
Determine if a route in the array matches the request\&.
.PP
\fBParameters:\fP
.RS 4
\fI$routes\fP 
.br
\fI$request\fP 
.br
\fI$includingMethod\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
|null 
.RE
.PP

.PP
Definition at line 218 of file RouteCollection\&.php\&.
.SS "check (array $routes,  $request,  $includingMethod = \fCtrue\fP)\fC [protected]\fP"

.PP
Definition at line 7781 of file compiled\&.php\&.
.SS "checkForAlternateVerbs ( $request)\fC [protected]\fP"
Determine if any routes match on another HTTP verb\&.
.PP
\fBParameters:\fP
.RS 4
\fI$request\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Definition at line 154 of file RouteCollection\&.php\&.
.SS "checkForAlternateVerbs ( $request)\fC [protected]\fP"

.PP
Definition at line 7757 of file compiled\&.php\&.
.SS "count ()"
Count the number of items in the collection\&.
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Definition at line 297 of file RouteCollection\&.php\&.
.SS "count ()"

.PP
Definition at line 7814 of file compiled\&.php\&.
.SS "get ( $method = \fCnull\fP)\fC [protected]\fP"
Get all of the routes in the collection\&.
.PP
\fBParameters:\fP
.RS 4
\fI$method\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Definition at line 232 of file RouteCollection\&.php\&.
.SS "get ( $method = \fCnull\fP)\fC [protected]\fP"

.PP
Definition at line 7787 of file compiled\&.php\&.
.SS "getByAction ( $action)"
Get a route instance by its controller action\&.
.PP
\fBParameters:\fP
.RS 4
\fI$action\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
|null 
.RE
.PP

.PP
Definition at line 267 of file RouteCollection\&.php\&.
.SS "getByAction ( $action)"

.PP
Definition at line 7802 of file compiled\&.php\&.
.SS "getByName ( $name)"
Get a route instance by its name\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
|null 
.RE
.PP

.PP
Definition at line 256 of file RouteCollection\&.php\&.
.SS "getByName ( $name)"

.PP
Definition at line 7798 of file compiled\&.php\&.
.SS "getIterator ()"
Get an iterator for the items\&.
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 287 of file RouteCollection\&.php\&.
.SS "getIterator ()"

.PP
Definition at line 7810 of file compiled\&.php\&.
.SS "getRouteForMethods ( $request, array $methods)\fC [protected]\fP"
Get a route (if necessary) that responds when other available methods are present\&.
.PP
\fBParameters:\fP
.RS 4
\fI$request\fP 
.br
\fI$methods\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Definition at line 183 of file RouteCollection\&.php\&.
.SS "getRouteForMethods ( $request, array $methods)\fC [protected]\fP"

.PP
Definition at line 7768 of file compiled\&.php\&.
.SS "getRoutes ()"
Get all of the routes in the collection\&.
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Definition at line 277 of file RouteCollection\&.php\&.
.SS "getRoutes ()"

.PP
Definition at line 7806 of file compiled\&.php\&.
.SS "hasNamedRoute ( $name)"
Determine if the route collection contains a given named route\&.
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP

.PP
Definition at line 245 of file RouteCollection\&.php\&.
.SS "hasNamedRoute ( $name)"

.PP
Definition at line 7794 of file compiled\&.php\&.
.SS "match (\fBRequest\fP $request)"
Find the first route matching a given request\&.
.PP
\fBParameters:\fP
.RS 4
\fI$request\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Definition at line 121 of file RouteCollection\&.php\&.
.SS "match (\fBRequest\fP $request)"

.PP
Definition at line 7744 of file compiled\&.php\&.
.SS "methodNotAllowed (array $others)\fC [protected]\fP"
Throw a method not allowed HTTP exception\&.
.PP
\fBParameters:\fP
.RS 4
\fI$others\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fP .RE
.PP

.PP
Definition at line 205 of file RouteCollection\&.php\&.
.SS "methodNotAllowed (array $others)\fC [protected]\fP"

.PP
Definition at line 7777 of file compiled\&.php\&.
.SH "Field Documentation"
.PP 
.SS "$actionList = array()\fC [protected]\fP"

.PP
Definition at line 7715 of file compiled\&.php\&.
.SS "$allRoutes = array()\fC [protected]\fP"

.PP
Definition at line 7713 of file compiled\&.php\&.
.SS "$nameList = array()\fC [protected]\fP"

.PP
Definition at line 7714 of file compiled\&.php\&.
.SS "$routes = array()\fC [protected]\fP"

.PP
Definition at line 7712 of file compiled\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
