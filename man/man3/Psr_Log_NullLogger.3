.TH "NullLogger" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NullLogger \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBAbstractLogger\fP\&.
.PP
Inherited by \fBNullLogger\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBlog\fP ($level, $message, array $context=array())"
.br
.in -1c
.SH "Detailed Description"
.PP 
This Logger can be used to avoid conditional log calls
.PP
Logging should always be optional, and if no logger is provided to your library creating a \fBNullLogger\fP instance to have something to throw logs at is a good way to avoid littering your code with \fCif ($this->logger) { }\fP blocks\&. 
.PP
Definition at line 13 of file NullLogger\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "log ( $level,  $message, array $context = \fCarray()\fP)"
Logs with an arbitrary level\&.
.PP
\fBParameters:\fP
.RS 4
\fI$level\fP 
.br
\fI$message\fP 
.br
\fI$context\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
null 
.RE
.PP

.PP
Implements \fBLoggerInterface\fP\&.
.PP
Definition at line 23 of file NullLogger\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
