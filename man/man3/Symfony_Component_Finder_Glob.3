.TH "Glob" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Glob \- 
.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBtoRegex\fP ($glob, $strictLeadingDot=true, $strictWildcardSlash=true)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBGlob\fP matches globbing patterns against text\&.
.PP
if match_glob('foo\&.*', 'foo\&.bar') echo 'matched\\n';
.PP
// prints foo\&.bar and foo\&.baz $regex = glob_to_regex('foo\&.*'); for (array('foo\&.bar', 'foo\&.baz', 'foo', 'bar') as $t) { if (/$regex/) echo 'matched: $car\\n'; }
.PP
\fBGlob\fP implements glob(3) style matching that can be used to match against text, rather than fetching names from a filesystem\&.
.PP
Based on the Perl Text::Glob module\&.
.PP
\fBAuthor:\fP
.RS 4
Fabien Potencier fabien@symfony.com \fBPHP\fP port 
.PP
Richard Clamp richardc@unixbeard.net Perl version 
.RE
.PP
\fBCopyright:\fP
.RS 4
2004-2005 Fabien Potencier fabien@symfony.com 
.PP
2002 Richard Clamp richardc@unixbeard.net 
.RE
.PP

.PP
Definition at line 36 of file Glob\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "static toRegex ( $glob,  $strictLeadingDot = \fCtrue\fP,  $strictWildcardSlash = \fCtrue\fP)\fC [static]\fP"
Returns a regexp which is the equivalent of the glob pattern\&.
.PP
\fBParameters:\fP
.RS 4
\fI$glob\fP The glob pattern 
.br
\fI$strictLeadingDot\fP 
.br
\fI$strictWildcardSlash\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string regex The regexp 
.RE
.PP

.PP
Definition at line 47 of file Glob\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
