.TH "SaveSessionListener" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SaveSessionListener \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits EventSubscriberInterface\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBonKernelResponse\fP (\fBFilterResponseEvent\fP $\fBevent\fP)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBgetSubscribedEvents\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Saves the session, in case it is still open, before sending the response/headers\&.
.PP
This ensures several things in case the developer did not save the session explicitly:
.PP
.IP "\(bu" 2
If a session save handler without locking is used, it ensures the data is available on the next request, e\&.g\&. after a redirect\&. PHPs auto-save at script end via session_register_shutdown is executed after fastcgi_finish_request\&. So in this case the data could be missing the next request because it might not be saved the moment the new request is processed\&.
.IP "\(bu" 2
\fBA\fP locking save handler (e\&.g\&. the native 'files') circumvents concurrency problems like the one above\&. But by saving the session before long-running things in the terminate event, we ensure the session is not blocked longer than needed\&.
.IP "\(bu" 2
When regenerating the session ID no locking is involved in PHPs session design\&. See https://bugs.php.net/bug.php?id=61470 for a discussion\&. So in this case, the session must be saved anyway before sending the headers with the new session ID\&. Otherwise session data could get lost again for concurrent requests with the new ID\&. \fBOne\fP result could be that you get logged out after just logging in\&.
.PP
.PP
This listener should be executed as one of the last listeners, so that previous listeners can still operate on the open session\&. This prevents the overhead of restarting it\&. Listeners after closing the session can still work with the session as usual because Symfonys session implementation starts the session on demand\&. So writing to it after it is saved will just restart it\&.
.PP
\fBAuthor:\fP
.RS 4
Tobias Schultze http://tobion.de 
.RE
.PP

.PP
Definition at line 45 of file SaveSessionListener\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "static getSubscribedEvents ()\fC [static]\fP"

.PP
Definition at line 59 of file SaveSessionListener\&.php\&.
.SS "onKernelResponse (\fBFilterResponseEvent\fP $event)"

.PP
Definition at line 47 of file SaveSessionListener\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
