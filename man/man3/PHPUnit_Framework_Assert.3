.TH "PHPUnit_Framework_Assert" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PHPUnit_Framework_Assert \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBPHPUnit_Extensions_TestDecorator\fP, and \fBPHPUnit_Framework_TestCase\fP\&.
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBassertArrayHasKey\fP ($key, $array, $message= '')"
.br
.ti -1c
.RI "static \fBassertArraySubset\fP ($subset, $array, $strict=false, $message= '')"
.br
.ti -1c
.RI "static \fBassertArrayNotHasKey\fP ($key, $array, $message= '')"
.br
.ti -1c
.RI "static \fBassertContains\fP ($needle, $haystack, $message= '', $ignoreCase=false, $checkForObjectIdentity=true, $checkForNonObjectIdentity=false)"
.br
.ti -1c
.RI "static \fBassertAttributeContains\fP ($needle, $haystackAttributeName, $haystackClassOrObject, $message= '', $ignoreCase=false, $checkForObjectIdentity=true, $checkForNonObjectIdentity=false)"
.br
.ti -1c
.RI "static \fBassertNotContains\fP ($needle, $haystack, $message= '', $ignoreCase=false, $checkForObjectIdentity=true, $checkForNonObjectIdentity=false)"
.br
.ti -1c
.RI "static \fBassertAttributeNotContains\fP ($needle, $haystackAttributeName, $haystackClassOrObject, $message= '', $ignoreCase=false, $checkForObjectIdentity=true, $checkForNonObjectIdentity=false)"
.br
.ti -1c
.RI "static \fBassertContainsOnly\fP ($type, $haystack, $isNativeType=null, $message= '')"
.br
.ti -1c
.RI "static \fBassertContainsOnlyInstancesOf\fP ($classname, $haystack, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeContainsOnly\fP ($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType=null, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotContainsOnly\fP ($type, $haystack, $isNativeType=null, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeNotContainsOnly\fP ($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType=null, $message= '')"
.br
.ti -1c
.RI "static \fBassertCount\fP ($expectedCount, $haystack, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeCount\fP ($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotCount\fP ($expectedCount, $haystack, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeNotCount\fP ($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertEquals\fP ($expected, $actual, $message= '', $delta=0\&.0, $maxDepth=10, $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBassertAttributeEquals\fP ($expected, $actualAttributeName, $actualClassOrObject, $message= '', $delta=0\&.0, $maxDepth=10, $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBassertNotEquals\fP ($expected, $actual, $message= '', $delta=0\&.0, $maxDepth=10, $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBassertAttributeNotEquals\fP ($expected, $actualAttributeName, $actualClassOrObject, $message= '', $delta=0\&.0, $maxDepth=10, $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBassertEmpty\fP ($actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeEmpty\fP ($haystackAttributeName, $haystackClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotEmpty\fP ($actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeNotEmpty\fP ($haystackAttributeName, $haystackClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertGreaterThan\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeGreaterThan\fP ($expected, $actualAttributeName, $actualClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertGreaterThanOrEqual\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeGreaterThanOrEqual\fP ($expected, $actualAttributeName, $actualClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertLessThan\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeLessThan\fP ($expected, $actualAttributeName, $actualClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertLessThanOrEqual\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeLessThanOrEqual\fP ($expected, $actualAttributeName, $actualClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertFileEquals\fP ($expected, $actual, $message= '', $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBassertFileNotEquals\fP ($expected, $actual, $message= '', $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBassertStringEqualsFile\fP ($expectedFile, $actualString, $message= '', $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBassertStringNotEqualsFile\fP ($expectedFile, $actualString, $message= '', $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBassertFileExists\fP ($filename, $message= '')"
.br
.ti -1c
.RI "static \fBassertFileNotExists\fP ($filename, $message= '')"
.br
.ti -1c
.RI "static \fBassertTrue\fP ($condition, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotTrue\fP ($condition, $message= '')"
.br
.ti -1c
.RI "static \fBassertFalse\fP ($condition, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotFalse\fP ($condition, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotNull\fP ($actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertNull\fP ($actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertClassHasAttribute\fP ($attributeName, $className, $message= '')"
.br
.ti -1c
.RI "static \fBassertClassNotHasAttribute\fP ($attributeName, $className, $message= '')"
.br
.ti -1c
.RI "static \fBassertClassHasStaticAttribute\fP ($attributeName, $className, $message= '')"
.br
.ti -1c
.RI "static \fBassertClassNotHasStaticAttribute\fP ($attributeName, $className, $message= '')"
.br
.ti -1c
.RI "static \fBassertObjectHasAttribute\fP ($attributeName, $object, $message= '')"
.br
.ti -1c
.RI "static \fBassertObjectNotHasAttribute\fP ($attributeName, $object, $message= '')"
.br
.ti -1c
.RI "static \fBassertSame\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeSame\fP ($expected, $actualAttributeName, $actualClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotSame\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeNotSame\fP ($expected, $actualAttributeName, $actualClassOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertInstanceOf\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeInstanceOf\fP ($expected, $attributeName, $classOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotInstanceOf\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeNotInstanceOf\fP ($expected, $attributeName, $classOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertInternalType\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeInternalType\fP ($expected, $attributeName, $classOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotInternalType\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertAttributeNotInternalType\fP ($expected, $attributeName, $classOrObject, $message= '')"
.br
.ti -1c
.RI "static \fBassertRegExp\fP ($pattern, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotRegExp\fP ($pattern, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertSameSize\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertNotSameSize\fP ($expected, $actual, $message= '')"
.br
.ti -1c
.RI "static \fBassertStringMatchesFormat\fP ($\fBformat\fP, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertStringNotMatchesFormat\fP ($\fBformat\fP, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertStringMatchesFormatFile\fP ($formatFile, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertStringNotMatchesFormatFile\fP ($formatFile, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertStringStartsWith\fP ($prefix, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertStringStartsNotWith\fP ($prefix, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertStringEndsWith\fP ($suffix, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertStringEndsNotWith\fP ($suffix, $string, $message= '')"
.br
.ti -1c
.RI "static \fBassertXmlFileEqualsXmlFile\fP ($expectedFile, $actualFile, $message= '')"
.br
.ti -1c
.RI "static \fBassertXmlFileNotEqualsXmlFile\fP ($expectedFile, $actualFile, $message= '')"
.br
.ti -1c
.RI "static \fBassertXmlStringEqualsXmlFile\fP ($expectedFile, $actualXml, $message= '')"
.br
.ti -1c
.RI "static \fBassertXmlStringNotEqualsXmlFile\fP ($expectedFile, $actualXml, $message= '')"
.br
.ti -1c
.RI "static \fBassertXmlStringEqualsXmlString\fP ($expectedXml, $actualXml, $message= '')"
.br
.ti -1c
.RI "static \fBassertXmlStringNotEqualsXmlString\fP ($expectedXml, $actualXml, $message= '')"
.br
.ti -1c
.RI "static \fBassertEqualXMLStructure\fP (DOMElement $expectedElement, DOMElement $actualElement, $checkAttributes=false, $message= '')"
.br
.ti -1c
.RI "static \fBassertSelectCount\fP ($selector, $count, $actual, $message= '', $isHtml=true)"
.br
.ti -1c
.RI "static \fBassertSelectRegExp\fP ($selector, $pattern, $count, $actual, $message= '', $isHtml=true)"
.br
.ti -1c
.RI "static \fBassertSelectEquals\fP ($selector, $content, $count, $actual, $message= '', $isHtml=true)"
.br
.ti -1c
.RI "static \fBassertTag\fP ($matcher, $actual, $message= '', $isHtml=true)"
.br
.ti -1c
.RI "static \fBassertNotTag\fP ($matcher, $actual, $message= '', $isHtml=true)"
.br
.ti -1c
.RI "static \fBassertThat\fP ($value, \fBPHPUnit_Framework_Constraint\fP $constraint, $message= '')"
.br
.ti -1c
.RI "static \fBassertJson\fP ($actualJson, $message= '')"
.br
.ti -1c
.RI "static \fBassertJsonStringEqualsJsonString\fP ($expectedJson, $actualJson, $message= '')"
.br
.ti -1c
.RI "static \fBassertJsonStringNotEqualsJsonString\fP ($expectedJson, $actualJson, $message= '')"
.br
.ti -1c
.RI "static \fBassertJsonStringEqualsJsonFile\fP ($expectedFile, $actualJson, $message= '')"
.br
.ti -1c
.RI "static \fBassertJsonStringNotEqualsJsonFile\fP ($expectedFile, $actualJson, $message= '')"
.br
.ti -1c
.RI "static \fBassertJsonFileNotEqualsJsonFile\fP ($expectedFile, $actualFile, $message= '')"
.br
.ti -1c
.RI "static \fBassertJsonFileEqualsJsonFile\fP ($expectedFile, $actualFile, $message= '')"
.br
.ti -1c
.RI "static \fBlogicalAnd\fP ()"
.br
.ti -1c
.RI "static \fBlogicalOr\fP ()"
.br
.ti -1c
.RI "static \fBlogicalNot\fP (\fBPHPUnit_Framework_Constraint\fP $constraint)"
.br
.ti -1c
.RI "static \fBlogicalXor\fP ()"
.br
.ti -1c
.RI "static \fBanything\fP ()"
.br
.ti -1c
.RI "static \fBisTrue\fP ()"
.br
.ti -1c
.RI "static \fBcallback\fP ($callback)"
.br
.ti -1c
.RI "static \fBisFalse\fP ()"
.br
.ti -1c
.RI "static \fBisJson\fP ()"
.br
.ti -1c
.RI "static \fBisNull\fP ()"
.br
.ti -1c
.RI "static \fBattribute\fP (\fBPHPUnit_Framework_Constraint\fP $constraint, $attributeName)"
.br
.ti -1c
.RI "static \fBcontains\fP ($value, $checkForObjectIdentity=true, $checkForNonObjectIdentity=false)"
.br
.ti -1c
.RI "static \fBcontainsOnly\fP ($type)"
.br
.ti -1c
.RI "static \fBcontainsOnlyInstancesOf\fP ($classname)"
.br
.ti -1c
.RI "static \fBarrayHasKey\fP ($key)"
.br
.ti -1c
.RI "static \fBequalTo\fP ($value, $delta=0\&.0, $maxDepth=10, $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBattributeEqualTo\fP ($attributeName, $value, $delta=0\&.0, $maxDepth=10, $canonicalize=false, $ignoreCase=false)"
.br
.ti -1c
.RI "static \fBisEmpty\fP ()"
.br
.ti -1c
.RI "static \fBfileExists\fP ()"
.br
.ti -1c
.RI "static \fBgreaterThan\fP ($value)"
.br
.ti -1c
.RI "static \fBgreaterThanOrEqual\fP ($value)"
.br
.ti -1c
.RI "static \fBclassHasAttribute\fP ($attributeName)"
.br
.ti -1c
.RI "static \fBclassHasStaticAttribute\fP ($attributeName)"
.br
.ti -1c
.RI "static \fBobjectHasAttribute\fP ($attributeName)"
.br
.ti -1c
.RI "static \fBidenticalTo\fP ($value)"
.br
.ti -1c
.RI "static \fBisInstanceOf\fP ($className)"
.br
.ti -1c
.RI "static \fBisType\fP ($type)"
.br
.ti -1c
.RI "static \fBlessThan\fP ($value)"
.br
.ti -1c
.RI "static \fBlessThanOrEqual\fP ($value)"
.br
.ti -1c
.RI "static \fBmatchesRegularExpression\fP ($pattern)"
.br
.ti -1c
.RI "static \fBmatches\fP ($string)"
.br
.ti -1c
.RI "static \fBstringStartsWith\fP ($prefix)"
.br
.ti -1c
.RI "static \fBstringContains\fP ($string, $case=true)"
.br
.ti -1c
.RI "static \fBstringEndsWith\fP ($suffix)"
.br
.ti -1c
.RI "static \fBcountOf\fP ($count)"
.br
.ti -1c
.RI "static \fBfail\fP ($message= '')"
.br
.ti -1c
.RI "static \fBreadAttribute\fP ($classOrObject, $attributeName)"
.br
.ti -1c
.RI "static \fBgetStaticAttribute\fP ($className, $attributeName)"
.br
.ti -1c
.RI "static \fBgetObjectAttribute\fP ($object, $attributeName)"
.br
.ti -1c
.RI "static \fBmarkTestIncomplete\fP ($message= '')"
.br
.ti -1c
.RI "static \fBmarkTestSkipped\fP ($message= '')"
.br
.ti -1c
.RI "static \fBgetCount\fP ()"
.br
.ti -1c
.RI "static \fBresetCount\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 22 of file Assert\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "static anything ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsAnything\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsAnything\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2441 of file Assert\&.php\&.
.SS "static arrayHasKey ( $key)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_ArrayHasKey\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_ArrayHasKey\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2564 of file Assert\&.php\&.
.SS "static assertArrayHasKey ( $key,  $array,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an array has a specified key\&.
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP 
.br
\fI$array\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 37 of file Assert\&.php\&.
.SS "static assertArrayNotHasKey ( $key,  $array,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an array does not have a specified key\&.
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP 
.br
\fI$array\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 96 of file Assert\&.php\&.
.SS "static assertArraySubset ( $subset,  $array,  $strict = \fCfalse\fP,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an array has a specified subset\&.
.PP
\fBParameters:\fP
.RS 4
\fI$subset\fP 
.br
\fI$array\fP 
.br
\fI$strict\fP Check for object identity 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 4\&.4\&.0 
.RE
.PP

.PP
Definition at line 67 of file Assert\&.php\&.
.SS "static assertAttributeContains ( $needle,  $haystackAttributeName,  $haystackClassOrObject,  $message = \fC''\fP,  $ignoreCase = \fCfalse\fP,  $checkForObjectIdentity = \fCtrue\fP,  $checkForNonObjectIdentity = \fCfalse\fP)\fC [static]\fP"
Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object contains a needle\&.
.PP
\fBParameters:\fP
.RS 4
\fI$needle\fP 
.br
\fI$haystackAttributeName\fP 
.br
\fI$haystackClassOrObject\fP 
.br
\fI$message\fP 
.br
\fI$ignoreCase\fP 
.br
\fI$checkForObjectIdentity\fP 
.br
\fI$checkForNonObjectIdentity\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 167 of file Assert\&.php\&.
.SS "static assertAttributeContainsOnly ( $type,  $haystackAttributeName,  $haystackClassOrObject,  $isNativeType = \fCnull\fP,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object contains only values of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$type\fP 
.br
\fI$haystackAttributeName\fP 
.br
\fI$haystackClassOrObject\fP 
.br
\fI$isNativeType\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.4 
.RE
.PP

.PP
Definition at line 314 of file Assert\&.php\&.
.SS "static assertAttributeCount ( $expectedCount,  $haystackAttributeName,  $haystackClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts the number of elements of an array, Countable or Traversable that is stored in an attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedCount\fP 
.br
\fI$haystackAttributeName\fP 
.br
\fI$haystackClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.6\&.0 
.RE
.PP

.PP
Definition at line 417 of file Assert\&.php\&.
.SS "static assertAttributeEmpty ( $haystackAttributeName,  $haystackClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a static attribute of a class or an attribute of an object is empty\&.
.PP
\fBParameters:\fP
.RS 4
\fI$haystackAttributeName\fP 
.br
\fI$haystackClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 593 of file Assert\&.php\&.
.SS "static assertAttributeEquals ( $expected,  $actualAttributeName,  $actualClassOrObject,  $message = \fC''\fP,  $delta = \fC0\&.0\fP,  $maxDepth = \fC10\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Asserts that a variable is equal to an attribute of an object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actualAttributeName\fP 
.br
\fI$actualClassOrObject\fP 
.br
\fI$message\fP 
.br
\fI$delta\fP 
.br
\fI$maxDepth\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP

.PP
Definition at line 507 of file Assert\&.php\&.
.SS "static assertAttributeGreaterThan ( $expected,  $actualAttributeName,  $actualClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an attribute is greater than another value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actualAttributeName\fP 
.br
\fI$actualClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 652 of file Assert\&.php\&.
.SS "static assertAttributeGreaterThanOrEqual ( $expected,  $actualAttributeName,  $actualClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an attribute is greater than or equal to another value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actualAttributeName\fP 
.br
\fI$actualClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 687 of file Assert\&.php\&.
.SS "static assertAttributeInstanceOf ( $expected,  $attributeName,  $classOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an attribute is of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$attributeName\fP 
.br
\fI$classOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1258 of file Assert\&.php\&.
.SS "static assertAttributeInternalType ( $expected,  $attributeName,  $classOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an attribute is of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$attributeName\fP 
.br
\fI$classOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1336 of file Assert\&.php\&.
.SS "static assertAttributeLessThan ( $expected,  $actualAttributeName,  $actualClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an attribute is smaller than another value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actualAttributeName\fP 
.br
\fI$actualClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 718 of file Assert\&.php\&.
.SS "static assertAttributeLessThanOrEqual ( $expected,  $actualAttributeName,  $actualClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an attribute is smaller than or equal to another value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actualAttributeName\fP 
.br
\fI$actualClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 749 of file Assert\&.php\&.
.SS "static assertAttributeNotContains ( $needle,  $haystackAttributeName,  $haystackClassOrObject,  $message = \fC''\fP,  $ignoreCase = \fCfalse\fP,  $checkForObjectIdentity = \fCtrue\fP,  $checkForNonObjectIdentity = \fCfalse\fP)\fC [static]\fP"
Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object does not contain a needle\&.
.PP
\fBParameters:\fP
.RS 4
\fI$needle\fP 
.br
\fI$haystackAttributeName\fP 
.br
\fI$haystackClassOrObject\fP 
.br
\fI$message\fP 
.br
\fI$ignoreCase\fP 
.br
\fI$checkForObjectIdentity\fP 
.br
\fI$checkForNonObjectIdentity\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 231 of file Assert\&.php\&.
.SS "static assertAttributeNotContainsOnly ( $type,  $haystackAttributeName,  $haystackClassOrObject,  $isNativeType = \fCnull\fP,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object does not contain only values of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$type\fP 
.br
\fI$haystackAttributeName\fP 
.br
\fI$haystackClassOrObject\fP 
.br
\fI$isNativeType\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.4 
.RE
.PP

.PP
Definition at line 371 of file Assert\&.php\&.
.SS "static assertAttributeNotCount ( $expectedCount,  $haystackAttributeName,  $haystackClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts the number of elements of an array, Countable or Traversable that is stored in an attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedCount\fP 
.br
\fI$haystackAttributeName\fP 
.br
\fI$haystackClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.6\&.0 
.RE
.PP

.PP
Definition at line 462 of file Assert\&.php\&.
.SS "static assertAttributeNotEmpty ( $haystackAttributeName,  $haystackClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a static attribute of a class or an attribute of an object is not empty\&.
.PP
\fBParameters:\fP
.RS 4
\fI$haystackAttributeName\fP 
.br
\fI$haystackClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 622 of file Assert\&.php\&.
.SS "static assertAttributeNotEquals ( $expected,  $actualAttributeName,  $actualClassOrObject,  $message = \fC''\fP,  $delta = \fC0\&.0\fP,  $maxDepth = \fC10\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Asserts that a variable is not equal to an attribute of an object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actualAttributeName\fP 
.br
\fI$actualClassOrObject\fP 
.br
\fI$message\fP 
.br
\fI$delta\fP 
.br
\fI$maxDepth\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP

.PP
Definition at line 559 of file Assert\&.php\&.
.SS "static assertAttributeNotInstanceOf ( $expected,  $attributeName,  $classOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an attribute is of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$attributeName\fP 
.br
\fI$classOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1297 of file Assert\&.php\&.
.SS "static assertAttributeNotInternalType ( $expected,  $attributeName,  $classOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an attribute is of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$attributeName\fP 
.br
\fI$classOrObject\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1375 of file Assert\&.php\&.
.SS "static assertAttributeNotSame ( $expected,  $actualAttributeName,  $actualClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable and an attribute of an object do not have the same type and value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actualAttributeName\fP 
.br
\fI$actualClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 1219 of file Assert\&.php\&.
.SS "static assertAttributeSame ( $expected,  $actualAttributeName,  $actualClassOrObject,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable and an attribute of an object have the same type and value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actualAttributeName\fP 
.br
\fI$actualClassOrObject\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 1179 of file Assert\&.php\&.
.SS "static assertClassHasAttribute ( $attributeName,  $className,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a class has a specified attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.br
\fI$className\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 980 of file Assert\&.php\&.
.SS "static assertClassHasStaticAttribute ( $attributeName,  $className,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a class has a specified static attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.br
\fI$className\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 1038 of file Assert\&.php\&.
.SS "static assertClassNotHasAttribute ( $attributeName,  $className,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a class does not have a specified attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.br
\fI$className\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 1009 of file Assert\&.php\&.
.SS "static assertClassNotHasStaticAttribute ( $attributeName,  $className,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a class does not have a specified static attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.br
\fI$className\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 1067 of file Assert\&.php\&.
.SS "static assertContains ( $needle,  $haystack,  $message = \fC''\fP,  $ignoreCase = \fCfalse\fP,  $checkForObjectIdentity = \fCtrue\fP,  $checkForNonObjectIdentity = \fCfalse\fP)\fC [static]\fP"
Asserts that a haystack contains a needle\&.
.PP
\fBParameters:\fP
.RS 4
\fI$needle\fP 
.br
\fI$haystack\fP 
.br
\fI$message\fP 
.br
\fI$ignoreCase\fP 
.br
\fI$checkForObjectIdentity\fP 
.br
\fI$checkForNonObjectIdentity\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 2\&.1\&.0 
.RE
.PP

.PP
Definition at line 130 of file Assert\&.php\&.
.SS "static assertContainsOnly ( $type,  $haystack,  $isNativeType = \fCnull\fP,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a haystack contains only values of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$type\fP 
.br
\fI$haystack\fP 
.br
\fI$isNativeType\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.4 
.RE
.PP

.PP
Definition at line 252 of file Assert\&.php\&.
.SS "static assertContainsOnlyInstancesOf ( $classname,  $haystack,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a haystack contains only instances of a given classname
.PP
\fBParameters:\fP
.RS 4
\fI$classname\fP 
.br
\fI$haystack\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 283 of file Assert\&.php\&.
.SS "static assertCount ( $expectedCount,  $haystack,  $message = \fC''\fP)\fC [static]\fP"
Asserts the number of elements of an array, Countable or Traversable\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedCount\fP 
.br
\fI$haystack\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 388 of file Assert\&.php\&.
.SS "static assertEmpty ( $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable is empty\&.
.PP
\fBParameters:\fP
.RS 4
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_AssertionFailedError\fP\fP 
.RE
.PP

.PP
Definition at line 579 of file Assert\&.php\&.
.SS "static assertEquals ( $expected,  $actual,  $message = \fC''\fP,  $delta = \fC0\&.0\fP,  $maxDepth = \fC10\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Asserts that two variables are equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$delta\fP 
.br
\fI$maxDepth\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP

.PP
Definition at line 482 of file Assert\&.php\&.
.SS "static assertEqualXMLStructure (DOMElement $expectedElement, DOMElement $actualElement,  $checkAttributes = \fCfalse\fP,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a hierarchy of DOMElements matches\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedElement\fP 
.br
\fI$actualElement\fP 
.br
\fI$checkAttributes\fP 
.br
\fI$message\fP 
.RE
.PP
\fBAuthor:\fP
.RS 4
Mattis Stordalen Flister mattis@xait.no 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP

.PP
Definition at line 1829 of file Assert\&.php\&.
.SS "static assertFalse ( $condition,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a condition is false\&.
.PP
\fBParameters:\fP
.RS 4
\fI$condition\fP 
.br
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_AssertionFailedError\fP\fP 
.RE
.PP

.PP
Definition at line 933 of file Assert\&.php\&.
.SS "static assertFileEquals ( $expected,  $actual,  $message = \fC''\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Asserts that the contents of one file is equal to the contents of another file\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.2\&.14 
.RE
.PP

.PP
Definition at line 769 of file Assert\&.php\&.
.SS "static assertFileExists ( $filename,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a file exists\&.
.PP
\fBParameters:\fP
.RS 4
\fI$filename\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 871 of file Assert\&.php\&.
.SS "static assertFileNotEquals ( $expected,  $actual,  $message = \fC''\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Asserts that the contents of one file is not equal to the contents of another file\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.2\&.14 
.RE
.PP

.PP
Definition at line 796 of file Assert\&.php\&.
.SS "static assertFileNotExists ( $filename,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a file does not exist\&.
.PP
\fBParameters:\fP
.RS 4
\fI$filename\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 889 of file Assert\&.php\&.
.SS "static assertGreaterThan ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a value is greater than another value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 638 of file Assert\&.php\&.
.SS "static assertGreaterThanOrEqual ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a value is greater than or equal to another value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 669 of file Assert\&.php\&.
.SS "static assertInstanceOf ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable is of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1236 of file Assert\&.php\&.
.SS "static assertInternalType ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable is of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1314 of file Assert\&.php\&.
.SS "static assertJson ( $actualJson,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string is a valid JSON string\&.
.PP
\fBParameters:\fP
.RS 4
\fI$actualJson\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.7\&.20 
.RE
.PP

.PP
Definition at line 2226 of file Assert\&.php\&.
.SS "static assertJsonFileEqualsJsonFile ( $expectedFile,  $actualFile,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two JSON files are equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualFile\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 2353 of file Assert\&.php\&.
.SS "static assertJsonFileNotEqualsJsonFile ( $expectedFile,  $actualFile,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two JSON files are not equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualFile\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 2324 of file Assert\&.php\&.
.SS "static assertJsonStringEqualsJsonFile ( $expectedFile,  $actualJson,  $message = \fC''\fP)\fC [static]\fP"
Asserts that the generated JSON encoded object and the content of the given file are equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualJson\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 2278 of file Assert\&.php\&.
.SS "static assertJsonStringEqualsJsonString ( $expectedJson,  $actualJson,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two given JSON encoded objects or arrays are equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedJson\fP 
.br
\fI$actualJson\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 2242 of file Assert\&.php\&.
.SS "static assertJsonStringNotEqualsJsonFile ( $expectedFile,  $actualJson,  $message = \fC''\fP)\fC [static]\fP"
Asserts that the generated JSON encoded object and the content of the given file are not equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualJson\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 2301 of file Assert\&.php\&.
.SS "static assertJsonStringNotEqualsJsonString ( $expectedJson,  $actualJson,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two given JSON encoded objects or arrays are not equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedJson\fP 
.br
\fI$actualJson\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 2260 of file Assert\&.php\&.
.SS "static assertLessThan ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a value is smaller than another value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 704 of file Assert\&.php\&.
.SS "static assertLessThanOrEqual ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a value is smaller than or equal to another value\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 735 of file Assert\&.php\&.
.SS "static assertNotContains ( $needle,  $haystack,  $message = \fC''\fP,  $ignoreCase = \fCfalse\fP,  $checkForObjectIdentity = \fCtrue\fP,  $checkForNonObjectIdentity = \fCfalse\fP)\fC [static]\fP"
Asserts that a haystack does not contain a needle\&.
.PP
\fBParameters:\fP
.RS 4
\fI$needle\fP 
.br
\fI$haystack\fP 
.br
\fI$message\fP 
.br
\fI$ignoreCase\fP 
.br
\fI$checkForObjectIdentity\fP 
.br
\fI$checkForNonObjectIdentity\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 2\&.1\&.0 
.RE
.PP

.PP
Definition at line 190 of file Assert\&.php\&.
.SS "static assertNotContainsOnly ( $type,  $haystack,  $isNativeType = \fCnull\fP,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a haystack does not contain only values of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$type\fP 
.br
\fI$haystack\fP 
.br
\fI$isNativeType\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.4 
.RE
.PP

.PP
Definition at line 333 of file Assert\&.php\&.
.SS "static assertNotCount ( $expectedCount,  $haystack,  $message = \fC''\fP)\fC [static]\fP"
Asserts the number of elements of an array, Countable or Traversable\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedCount\fP 
.br
\fI$haystack\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 433 of file Assert\&.php\&.
.SS "static assertNotEmpty ( $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable is not empty\&.
.PP
\fBParameters:\fP
.RS 4
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_AssertionFailedError\fP\fP 
.RE
.PP

.PP
Definition at line 608 of file Assert\&.php\&.
.SS "static assertNotEquals ( $expected,  $actual,  $message = \fC''\fP,  $delta = \fC0\&.0\fP,  $maxDepth = \fC10\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Asserts that two variables are not equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$delta\fP 
.br
\fI$maxDepth\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 2\&.3\&.0 
.RE
.PP

.PP
Definition at line 532 of file Assert\&.php\&.
.SS "static assertNotFalse ( $condition,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a condition is not false\&.
.PP
\fBParameters:\fP
.RS 4
\fI$condition\fP 
.br
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_AssertionFailedError\fP\fP 
.RE
.PP

.PP
Definition at line 945 of file Assert\&.php\&.
.SS "static assertNotInstanceOf ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable is not of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1275 of file Assert\&.php\&.
.SS "static assertNotInternalType ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable is not of a given type\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1353 of file Assert\&.php\&.
.SS "static assertNotNull ( $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable is not null\&.
.PP
\fBParameters:\fP
.RS 4
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 956 of file Assert\&.php\&.
.SS "static assertNotRegExp ( $pattern,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string does not match a given regular expression\&.
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 2\&.1\&.0 
.RE
.PP

.PP
Definition at line 1414 of file Assert\&.php\&.
.SS "static assertNotSame ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two variables do not have the same type and value\&. Used on objects, it asserts that two variables do not reference the same object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 1197 of file Assert\&.php\&.
.SS "static assertNotSameSize ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Assert that the size of two arrays (or \fCCountable\fP or \fCTraversable\fP objects) is not the same\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 1468 of file Assert\&.php\&.
.SS "static assertNotTag ( $matcher,  $actual,  $message = \fC''\fP,  $isHtml = \fCtrue\fP)\fC [static]\fP"
This assertion is the exact opposite of \fBassertTag()\fP\&.
.PP
Rather than asserting that $matcher results in a match, it asserts that $matcher does not match\&.
.PP
\fBParameters:\fP
.RS 4
\fI$matcher\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$isHtml\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP
\fBAuthor:\fP
.RS 4
Mike Naberezny mike@maintainable.com 
.PP
Derek DeVries derek@maintainable.com 
.RE
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP

.PP
Definition at line 2193 of file Assert\&.php\&.
.SS "static assertNotTrue ( $condition,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a condition is not true\&.
.PP
\fBParameters:\fP
.RS 4
\fI$condition\fP 
.br
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_AssertionFailedError\fP\fP 
.RE
.PP

.PP
Definition at line 921 of file Assert\&.php\&.
.SS "static assertNull ( $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a variable is null\&.
.PP
\fBParameters:\fP
.RS 4
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 967 of file Assert\&.php\&.
.SS "static assertObjectHasAttribute ( $attributeName,  $object,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an object has a specified attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.br
\fI$object\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 1098 of file Assert\&.php\&.
.SS "static assertObjectNotHasAttribute ( $attributeName,  $object,  $message = \fC''\fP)\fC [static]\fP"
Asserts that an object does not have a specified attribute\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.br
\fI$object\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 1127 of file Assert\&.php\&.
.SS "static assertRegExp ( $pattern,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string matches a given regular expression\&.
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 1391 of file Assert\&.php\&.
.SS "static assertSame ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two variables have the same type and value\&. Used on objects, it asserts that two variables reference the same object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 1157 of file Assert\&.php\&.
.SS "static assertSameSize ( $expected,  $actual,  $message = \fC''\fP)\fC [static]\fP"
Assert that the size of two arrays (or \fCCountable\fP or \fCTraversable\fP objects) is the same\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expected\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.RE
.PP

.PP
Definition at line 1439 of file Assert\&.php\&.
.SS "static assertSelectCount ( $selector,  $count,  $actual,  $message = \fC''\fP,  $isHtml = \fCtrue\fP)\fC [static]\fP"
Assert the presence, absence, or count of elements in a document matching the CSS $selector, regardless of the contents of those elements\&.
.PP
The first argument, $selector, is the CSS selector used to match the elements in the $actual document\&.
.PP
The second argument, $count, can be either boolean or numeric\&. When boolean, it asserts for presence of elements matching the selector (true) or absence of elements (false)\&. When numeric, it asserts the count of elements\&.
.PP
assertSelectCount('#binder', true, $xml); // any? assertSelectCount('\&.binder', 3, $xml); // exactly 3?
.PP
\fBParameters:\fP
.RS 4
\fI$selector\fP 
.br
\fI$count\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$isHtml\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP
\fBAuthor:\fP
.RS 4
Mike Naberezny mike@maintainable.com 
.PP
Derek DeVries derek@maintainable.com 
.RE
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP

.PP
Definition at line 1921 of file Assert\&.php\&.
.SS "static assertSelectEquals ( $selector,  $content,  $count,  $actual,  $message = \fC''\fP,  $isHtml = \fCtrue\fP)\fC [static]\fP"
assertSelectEquals('#binder \&.name', 'Chuck', true, $xml); // any? assertSelectEquals('#binder \&.name', 'Chuck', false, $xml); // none?
.PP
\fBParameters:\fP
.RS 4
\fI$selector\fP 
.br
\fI$content\fP 
.br
\fI$count\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$isHtml\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP
\fBAuthor:\fP
.RS 4
Mike Naberezny mike@maintainable.com 
.PP
Derek DeVries derek@maintainable.com 
.RE
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP

.PP
Definition at line 1979 of file Assert\&.php\&.
.SS "static assertSelectRegExp ( $selector,  $pattern,  $count,  $actual,  $message = \fC''\fP,  $isHtml = \fCtrue\fP)\fC [static]\fP"
assertSelectRegExp('#binder \&.name', '/Mike|Derek/', true, $xml); // any? assertSelectRegExp('#binder \&.name', '/Mike|Derek/', 3, $xml); // 3?
.PP
\fBParameters:\fP
.RS 4
\fI$selector\fP 
.br
\fI$pattern\fP 
.br
\fI$count\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$isHtml\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP
\fBAuthor:\fP
.RS 4
Mike Naberezny mike@maintainable.com 
.PP
Derek DeVries derek@maintainable.com 
.RE
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP

.PP
Definition at line 1950 of file Assert\&.php\&.
.SS "static assertStringEndsNotWith ( $suffix,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string ends not with a given suffix\&.
.PP
\fBParameters:\fP
.RS 4
\fI$suffix\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.4\&.0 
.RE
.PP

.PP
Definition at line 1666 of file Assert\&.php\&.
.SS "static assertStringEndsWith ( $suffix,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string ends with a given suffix\&.
.PP
\fBParameters:\fP
.RS 4
\fI$suffix\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.4\&.0 
.RE
.PP

.PP
Definition at line 1643 of file Assert\&.php\&.
.SS "static assertStringEqualsFile ( $expectedFile,  $actualString,  $message = \fC''\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Asserts that the contents of a string is equal to the contents of a file\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualString\fP 
.br
\fI$message\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP

.PP
Definition at line 823 of file Assert\&.php\&.
.SS "static assertStringMatchesFormat ( $format,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string matches a given format string\&.
.PP
\fBParameters:\fP
.RS 4
\fI$format\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1497 of file Assert\&.php\&.
.SS "static assertStringMatchesFormatFile ( $formatFile,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string matches a given format file\&.
.PP
\fBParameters:\fP
.RS 4
\fI$formatFile\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1545 of file Assert\&.php\&.
.SS "static assertStringNotEqualsFile ( $expectedFile,  $actualString,  $message = \fC''\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Asserts that the contents of a string is not equal to the contents of a file\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualString\fP 
.br
\fI$message\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP

.PP
Definition at line 849 of file Assert\&.php\&.
.SS "static assertStringNotMatchesFormat ( $format,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string does not match a given format string\&.
.PP
\fBParameters:\fP
.RS 4
\fI$format\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1520 of file Assert\&.php\&.
.SS "static assertStringNotMatchesFormatFile ( $formatFile,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string does not match a given format string\&.
.PP
\fBParameters:\fP
.RS 4
\fI$formatFile\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 1568 of file Assert\&.php\&.
.SS "static assertStringStartsNotWith ( $prefix,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string starts not with a given prefix\&.
.PP
\fBParameters:\fP
.RS 4
\fI$prefix\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.4\&.0 
.RE
.PP

.PP
Definition at line 1618 of file Assert\&.php\&.
.SS "static assertStringStartsWith ( $prefix,  $string,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a string starts with a given prefix\&.
.PP
\fBParameters:\fP
.RS 4
\fI$prefix\fP 
.br
\fI$string\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.4\&.0 
.RE
.PP

.PP
Definition at line 1593 of file Assert\&.php\&.
.SS "static assertTag ( $matcher,  $actual,  $message = \fC''\fP,  $isHtml = \fCtrue\fP)\fC [static]\fP"
Evaluate an \fBHTML\fP or XML string and assert its structure and/or contents\&.
.PP
The first argument ($matcher) is an associative array that specifies the match criteria for the assertion:
.PP
.IP "\(bu" 2
\fCid\fP : the node with the given id attribute must match the corresponding value\&.
.IP "\(bu" 2
\fCtag\fP : the node type must match the corresponding value\&.
.IP "\(bu" 2
\fCattributes\fP : a hash\&. The node's attributes must match the corresponding values in the hash\&.
.IP "\(bu" 2
\fCcontent\fP : The text content must match the given value\&.
.IP "\(bu" 2
\fCparent\fP : a hash\&. The node's parent must match the corresponding hash\&.
.IP "\(bu" 2
\fCchild\fP : a hash\&. At least one of the node's immediate children must meet the criteria described by the hash\&.
.IP "\(bu" 2
\fCancestor\fP : a hash\&. At least one of the node's ancestors must meet the criteria described by the hash\&.
.IP "\(bu" 2
\fCdescendant\fP : a hash\&. At least one of the node's descendants must meet the criteria described by the hash\&.
.IP "\(bu" 2
\fCchildren\fP : a hash, for counting children of a node\&. Accepts the keys:
.IP "  \(bu" 4
\fCcount\fP : a number which must equal the number of children that match
.IP "  \(bu" 4
\fCless_than\fP : the number of matching children must be greater than this number
.IP "  \(bu" 4
\fCgreater_than\fP : the number of matching children must be less than this number
.IP "  \(bu" 4
\fConly\fP : another hash consisting of the keys to use to match on the children, and only matching children will be counted
.PP

.PP
.PP
\fC // \fBMatcher\fP that asserts that there is an element with an id='my_id'\&. $matcher = array('id' => 'my_id');\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' tag\&. $matcher = array('tag' => 'span');\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' tag with the content // 'Hello World'\&. $matcher = array('tag' => 'span', 'content' => 'Hello World');\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' tag with content matching // the regular expression pattern\&. $matcher = array('tag' => 'span', 'content' => 'regexp:/Try P(HP|ython)/');\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' with an 'list' class // attribute\&. $matcher = array( 'tag' => 'span', 'attributes' => array('class' => 'list') );\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' inside of a 'div'\&. $matcher = array( 'tag' => 'span', 'parent' => array('tag' => 'div') );\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' somewhere inside a // 'table'\&. $matcher = array( 'tag' => 'span', 'ancestor' => array('tag' => 'table') );\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' with at least one 'em' // child\&. $matcher = array( 'tag' => 'span', 'child' => array('tag' => 'em') );\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' containing a (possibly // nested) 'strong' tag\&. $matcher = array( 'tag' => 'span', 'descendant' => array('tag' => 'strong') );\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'span' containing 5-10 'em' tags // as immediate children\&. $matcher = array( 'tag' => 'span', 'children' => array( 'less_than' => 11, 'greater_than' => 4, 'only' => array('tag' => 'em') ) );\fP
.PP
\fC// \fBMatcher\fP that asserts that there is a 'div', with an 'ul' ancestor and // a 'li' parent (with class='enum'), and containing a 'span' descendant // that contains an element with id='my_test' and the text 'Hello World'\&. $matcher = array( 'tag' => 'div', 'ancestor' => array('tag' => 'ul'), 'parent' => array( 'tag' => 'li', 'attributes' => array('class' => 'enum') ), 'descendant' => array( 'tag' => 'span', 'child' => array( 'id' => 'my_test', 'content' => 'Hello World' ) ) );\fP
.PP
\fC// Use \fBassertTag()\fP to apply a $matcher to a piece of $html\&. $this->assertTag($matcher, $html);\fP
.PP
\fC// Use \fBassertTag()\fP to apply a $matcher to a piece of $xml\&. $this->assertTag($matcher, $xml, '', false); \fP
.PP
The second argument ($actual) is a string containing either \fBHTML\fP or XML text to be tested\&.
.PP
The third argument ($message) is an optional message that will be used if the assertion fails\&.
.PP
The fourth argument ($html) is an optional flag specifying whether to load the $actual string into a DOMDocument using the \fBHTML\fP or XML load strategy\&. It is true by default, which assumes the \fBHTML\fP load strategy\&. In many cases, this will be acceptable for XML as well\&.
.PP
\fBParameters:\fP
.RS 4
\fI$matcher\fP 
.br
\fI$actual\fP 
.br
\fI$message\fP 
.br
\fI$isHtml\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP
\fBAuthor:\fP
.RS 4
Mike Naberezny mike@maintainable.com 
.PP
Derek DeVries derek@maintainable.com 
.RE
.PP
\fBDeprecated\fP
.RS 4
.RE
.PP

.PP
Definition at line 2167 of file Assert\&.php\&.
.SS "static assertThat ( $value, \fBPHPUnit_Framework_Constraint\fP $constraint,  $message = \fC''\fP)\fC [static]\fP"
Evaluates a \fBPHPUnit_Framework_Constraint\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.br
\fI$constraint\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2212 of file Assert\&.php\&.
.SS "static assertTrue ( $condition,  $message = \fC''\fP)\fC [static]\fP"
Asserts that a condition is true\&.
.PP
\fBParameters:\fP
.RS 4
\fI$condition\fP 
.br
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_AssertionFailedError\fP\fP 
.RE
.PP

.PP
Definition at line 909 of file Assert\&.php\&.
.SS "static assertXmlFileEqualsXmlFile ( $expectedFile,  $actualFile,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two XML files are equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualFile\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 1691 of file Assert\&.php\&.
.SS "static assertXmlFileNotEqualsXmlFile ( $expectedFile,  $actualFile,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two XML files are not equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualFile\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 1715 of file Assert\&.php\&.
.SS "static assertXmlStringEqualsXmlFile ( $expectedFile,  $actualXml,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two XML documents are equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualXml\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP

.PP
Definition at line 1739 of file Assert\&.php\&.
.SS "static assertXmlStringEqualsXmlString ( $expectedXml,  $actualXml,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two XML documents are equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedXml\fP 
.br
\fI$actualXml\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 1785 of file Assert\&.php\&.
.SS "static assertXmlStringNotEqualsXmlFile ( $expectedFile,  $actualXml,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two XML documents are not equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedFile\fP 
.br
\fI$actualXml\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP

.PP
Definition at line 1762 of file Assert\&.php\&.
.SS "static assertXmlStringNotEqualsXmlString ( $expectedXml,  $actualXml,  $message = \fC''\fP)\fC [static]\fP"
Asserts that two XML documents are not equal\&.
.PP
\fBParameters:\fP
.RS 4
\fI$expectedXml\fP 
.br
\fI$actualXml\fP 
.br
\fI$message\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 1806 of file Assert\&.php\&.
.SS "static attribute (\fBPHPUnit_Framework_Constraint\fP $constraint,  $attributeName)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_Attribute\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$constraint\fP 
.br
\fI$attributeName\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Attribute\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 2509 of file Assert\&.php\&.
.SS "static attributeEqualTo ( $attributeName,  $value,  $delta = \fC0\&.0\fP,  $maxDepth = \fC10\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsEqual\fP matcher object that is wrapped in a \fBPHPUnit_Framework_Constraint_Attribute\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.br
\fI$value\fP 
.br
\fI$delta\fP 
.br
\fI$maxDepth\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Attribute\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 2605 of file Assert\&.php\&.
.SS "static callback ( $callback)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_Callback\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$callback\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Callback\fP 
.RE
.PP

.PP
Definition at line 2463 of file Assert\&.php\&.
.SS "static classHasAttribute ( $attributeName)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_ClassHasAttribute\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_ClassHasAttribute\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 2677 of file Assert\&.php\&.
.SS "static classHasStaticAttribute ( $attributeName)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_ClassHasStaticAttribute\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_ClassHasStaticAttribute\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 2692 of file Assert\&.php\&.
.SS "static contains ( $value,  $checkForObjectIdentity = \fCtrue\fP,  $checkForNonObjectIdentity = \fCfalse\fP)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_TraversableContains\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.br
\fI$checkForObjectIdentity\fP 
.br
\fI$checkForNonObjectIdentity\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_TraversableContains\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2527 of file Assert\&.php\&.
.SS "static containsOnly ( $type)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_TraversableContainsOnly\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$type\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_TraversableContainsOnly\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.4 
.RE
.PP

.PP
Definition at line 2540 of file Assert\&.php\&.
.SS "static containsOnlyInstancesOf ( $classname)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_TraversableContainsOnly\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$classname\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_TraversableContainsOnly\fP 
.RE
.PP

.PP
Definition at line 2552 of file Assert\&.php\&.
.SS "static countOf ( $count)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_Count\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$count\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Count\fP 
.RE
.PP

.PP
Definition at line 2845 of file Assert\&.php\&.
.SS "static equalTo ( $value,  $delta = \fC0\&.0\fP,  $maxDepth = \fC10\fP,  $canonicalize = \fCfalse\fP,  $ignoreCase = \fCfalse\fP)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsEqual\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.br
\fI$delta\fP 
.br
\fI$maxDepth\fP 
.br
\fI$canonicalize\fP 
.br
\fI$ignoreCase\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsEqual\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2580 of file Assert\&.php\&.
.SS "static fail ( $message = \fC''\fP)\fC [static]\fP"
Fails a test with the given message\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_AssertionFailedError\fP\fP 
.RE
.PP

.PP
Definition at line 2855 of file Assert\&.php\&.
.SS "static fileExists ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_FileExists\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_FileExists\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2636 of file Assert\&.php\&.
.SS "static getCount ()\fC [static]\fP"
Return the current assertion count\&.
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.3 
.RE
.PP

.PP
Definition at line 3040 of file Assert\&.php\&.
.SS "static getObjectAttribute ( $object,  $attributeName)\fC [static]\fP"
Returns the value of an object's attribute\&. This also works for attributes that are declared protected or private\&.
.PP
\fBParameters:\fP
.RS 4
\fI$object\fP 
.br
\fI$attributeName\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_Exception\fP\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 4\&.0\&.0 
.RE
.PP

.PP
Definition at line 2962 of file Assert\&.php\&.
.SS "static getStaticAttribute ( $className,  $attributeName)\fC [static]\fP"
Returns the value of a static attribute\&. This also works for attributes that are declared protected or private\&.
.PP
\fBParameters:\fP
.RS 4
\fI$className\fP 
.br
\fI$attributeName\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_Exception\fP\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 4\&.0\&.0 
.RE
.PP

.PP
Definition at line 2914 of file Assert\&.php\&.
.SS "static greaterThan ( $value)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_GreaterThan\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_GreaterThan\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2648 of file Assert\&.php\&.
.SS "static greaterThanOrEqual ( $value)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_Or\fP matcher object that wraps a \fBPHPUnit_Framework_Constraint_IsEqual\fP and a \fBPHPUnit_Framework_Constraint_GreaterThan\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Or\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 2662 of file Assert\&.php\&.
.SS "static identicalTo ( $value)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsIdentical\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsIdentical\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2720 of file Assert\&.php\&.
.SS "static isEmpty ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsEmpty\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsEmpty\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 2625 of file Assert\&.php\&.
.SS "static isFalse ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsFalse\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsFalse\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP

.PP
Definition at line 2474 of file Assert\&.php\&.
.SS "static isInstanceOf ( $className)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsInstanceOf\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$className\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsInstanceOf\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2732 of file Assert\&.php\&.
.SS "static isJson ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsJson\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsJson\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.7\&.20 
.RE
.PP

.PP
Definition at line 2485 of file Assert\&.php\&.
.SS "static isNull ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsNull\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsNull\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP

.PP
Definition at line 2496 of file Assert\&.php\&.
.SS "static isTrue ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsTrue\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsTrue\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.0 
.RE
.PP

.PP
Definition at line 2452 of file Assert\&.php\&.
.SS "static isType ( $type)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_IsType\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$type\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_IsType\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2744 of file Assert\&.php\&.
.SS "static lessThan ( $value)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_LessThan\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_LessThan\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2756 of file Assert\&.php\&.
.SS "static lessThanOrEqual ( $value)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_Or\fP matcher object that wraps a \fBPHPUnit_Framework_Constraint_IsEqual\fP and a \fBPHPUnit_Framework_Constraint_LessThan\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Or\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.1\&.0 
.RE
.PP

.PP
Definition at line 2770 of file Assert\&.php\&.
.SS "static logicalAnd ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_And\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_And\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2381 of file Assert\&.php\&.
.SS "static logicalNot (\fBPHPUnit_Framework_Constraint\fP $constraint)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_Not\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$constraint\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Not\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2414 of file Assert\&.php\&.
.SS "static logicalOr ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_Or\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Or\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2397 of file Assert\&.php\&.
.SS "static logicalXor ()\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_Xor\fP matcher object\&.
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_Xor\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2425 of file Assert\&.php\&.
.SS "static markTestIncomplete ( $message = \fC''\fP)\fC [static]\fP"
Mark the test as incomplete\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_IncompleteTestError\fP\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 3017 of file Assert\&.php\&.
.SS "static markTestSkipped ( $message = \fC''\fP)\fC [static]\fP"
Mark the test as skipped\&.
.PP
\fBParameters:\fP
.RS 4
\fI$message\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_SkippedTestError\fP\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 3029 of file Assert\&.php\&.
.SS "static matches ( $string)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_StringMatches\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$string\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_StringMatches\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.5\&.0 
.RE
.PP

.PP
Definition at line 2797 of file Assert\&.php\&.
.SS "static matchesRegularExpression ( $pattern)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_PCREMatch\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_PCREMatch\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2785 of file Assert\&.php\&.
.SS "static objectHasAttribute ( $attributeName)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_ObjectHasAttribute\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$attributeName\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_ObjectHasAttribute\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2706 of file Assert\&.php\&.
.SS "static readAttribute ( $classOrObject,  $attributeName)\fC [static]\fP"
Returns the value of an attribute of a class or an object\&. This also works for attributes that are declared protected or private\&.
.PP
\fBParameters:\fP
.RS 4
\fI$classOrObject\fP 
.br
\fI$attributeName\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPHPUnit_Framework_Exception\fP\fP 
.RE
.PP

.PP
Definition at line 2869 of file Assert\&.php\&.
.SS "static resetCount ()\fC [static]\fP"
Reset the assertion counter\&.
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.3\&.3 
.RE
.PP

.PP
Definition at line 3050 of file Assert\&.php\&.
.SS "static stringContains ( $string,  $case = \fCtrue\fP)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_StringContains\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$string\fP 
.br
\fI$case\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_StringContains\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.0\&.0 
.RE
.PP

.PP
Definition at line 2822 of file Assert\&.php\&.
.SS "static stringEndsWith ( $suffix)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_StringEndsWith\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$suffix\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_StringEndsWith\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.4\&.0 
.RE
.PP

.PP
Definition at line 2834 of file Assert\&.php\&.
.SS "static stringStartsWith ( $prefix)\fC [static]\fP"
Returns a \fBPHPUnit_Framework_Constraint_StringStartsWith\fP matcher object\&.
.PP
\fBParameters:\fP
.RS 4
\fI$prefix\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBPHPUnit_Framework_Constraint_StringStartsWith\fP 
.RE
.PP
\fBSince:\fP
.RS 4
Method available since Release 3\&.4\&.0 
.RE
.PP

.PP
Definition at line 2809 of file Assert\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
