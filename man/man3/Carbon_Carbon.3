.TH "Carbon" 3 "Tue Apr 14 2015" "Version 1.0" "VirtualSCADA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Carbon \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits DateTime, and DateTime\&.
.PP
Inherited by \fBMyCarbon\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ($time=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "\fBcopy\fP ()"
.br
.ti -1c
.RI "\fB__get\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fB__isset\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fB__set\fP ($\fBname\fP, $value)"
.br
.ti -1c
.RI "\fByear\fP ($value)"
.br
.ti -1c
.RI "\fBmonth\fP ($value)"
.br
.ti -1c
.RI "\fBday\fP ($value)"
.br
.ti -1c
.RI "\fBhour\fP ($value)"
.br
.ti -1c
.RI "\fBminute\fP ($value)"
.br
.ti -1c
.RI "\fBsecond\fP ($value)"
.br
.ti -1c
.RI "\fBsetDateTime\fP ($\fByear\fP, $\fBmonth\fP, $\fBday\fP, $\fBhour\fP, $\fBminute\fP, $\fBsecond\fP=0)"
.br
.ti -1c
.RI "\fBtimestamp\fP ($value)"
.br
.ti -1c
.RI "\fBtimezone\fP ($value)"
.br
.ti -1c
.RI "\fBtz\fP ($value)"
.br
.ti -1c
.RI "\fBsetTimezone\fP ($value)"
.br
.ti -1c
.RI "\fBformatLocalized\fP ($\fBformat\fP)"
.br
.ti -1c
.RI "\fB__toString\fP ()"
.br
.ti -1c
.RI "\fBtoDateString\fP ()"
.br
.ti -1c
.RI "\fBtoFormattedDateString\fP ()"
.br
.ti -1c
.RI "\fBtoTimeString\fP ()"
.br
.ti -1c
.RI "\fBtoDateTimeString\fP ()"
.br
.ti -1c
.RI "\fBtoDayDateTimeString\fP ()"
.br
.ti -1c
.RI "\fBtoAtomString\fP ()"
.br
.ti -1c
.RI "\fBtoCookieString\fP ()"
.br
.ti -1c
.RI "\fBtoIso8601String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc822String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc850String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc1036String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc1123String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc2822String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc3339String\fP ()"
.br
.ti -1c
.RI "\fBtoRssString\fP ()"
.br
.ti -1c
.RI "\fBtoW3cString\fP ()"
.br
.ti -1c
.RI "\fBeq\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBne\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBgt\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBgte\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBlt\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBlte\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBbetween\fP (\fBCarbon\fP $dt1, \fBCarbon\fP $dt2, $equal=true)"
.br
.ti -1c
.RI "\fBmin\fP (\fBCarbon\fP $dt=null)"
.br
.ti -1c
.RI "\fBmax\fP (\fBCarbon\fP $dt=null)"
.br
.ti -1c
.RI "\fBisWeekday\fP ()"
.br
.ti -1c
.RI "\fBisWeekend\fP ()"
.br
.ti -1c
.RI "\fBisYesterday\fP ()"
.br
.ti -1c
.RI "\fBisToday\fP ()"
.br
.ti -1c
.RI "\fBisTomorrow\fP ()"
.br
.ti -1c
.RI "\fBisFuture\fP ()"
.br
.ti -1c
.RI "\fBisPast\fP ()"
.br
.ti -1c
.RI "\fBisLeapYear\fP ()"
.br
.ti -1c
.RI "\fBisSameDay\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBaddYears\fP ($value)"
.br
.ti -1c
.RI "\fBaddYear\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubYear\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubYears\fP ($value)"
.br
.ti -1c
.RI "\fBaddMonths\fP ($value)"
.br
.ti -1c
.RI "\fBaddMonth\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMonth\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMonths\fP ($value)"
.br
.ti -1c
.RI "\fBaddMonthsNoOverflow\fP ($value)"
.br
.ti -1c
.RI "\fBaddMonthNoOverflow\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMonthNoOverflow\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMonthsNoOverflow\fP ($value)"
.br
.ti -1c
.RI "\fBaddDays\fP ($value)"
.br
.ti -1c
.RI "\fBaddDay\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubDay\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubDays\fP ($value)"
.br
.ti -1c
.RI "\fBaddWeekdays\fP ($value)"
.br
.ti -1c
.RI "\fBaddWeekday\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubWeekday\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubWeekdays\fP ($value)"
.br
.ti -1c
.RI "\fBaddWeeks\fP ($value)"
.br
.ti -1c
.RI "\fBaddWeek\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubWeek\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubWeeks\fP ($value)"
.br
.ti -1c
.RI "\fBaddHours\fP ($value)"
.br
.ti -1c
.RI "\fBaddHour\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubHour\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubHours\fP ($value)"
.br
.ti -1c
.RI "\fBaddMinutes\fP ($value)"
.br
.ti -1c
.RI "\fBaddMinute\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMinute\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMinutes\fP ($value)"
.br
.ti -1c
.RI "\fBaddSeconds\fP ($value)"
.br
.ti -1c
.RI "\fBaddSecond\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubSecond\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubSeconds\fP ($value)"
.br
.ti -1c
.RI "\fBdiffInYears\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInMonths\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInWeeks\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInDays\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInDaysFiltered\fP (Closure $\fBcallback\fP, \fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInHoursFiltered\fP (Closure $\fBcallback\fP, \fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffFiltered\fP (\fBCarbonInterval\fP $\fBci\fP, Closure $\fBcallback\fP, \fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInWeekdays\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInWeekendDays\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInHours\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInMinutes\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInSeconds\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBsecondsSinceMidnight\fP ()"
.br
.ti -1c
.RI "\fBsecondsUntilEndOfDay\fP ()"
.br
.ti -1c
.RI "\fBdiffForHumans\fP (\fBCarbon\fP $other=null, $absolute=false)"
.br
.ti -1c
.RI "\fBstartOfDay\fP ()"
.br
.ti -1c
.RI "\fBendOfDay\fP ()"
.br
.ti -1c
.RI "\fBstartOfMonth\fP ()"
.br
.ti -1c
.RI "\fBendOfMonth\fP ()"
.br
.ti -1c
.RI "\fBstartOfYear\fP ()"
.br
.ti -1c
.RI "\fBendOfYear\fP ()"
.br
.ti -1c
.RI "\fBstartOfDecade\fP ()"
.br
.ti -1c
.RI "\fBendOfDecade\fP ()"
.br
.ti -1c
.RI "\fBstartOfCentury\fP ()"
.br
.ti -1c
.RI "\fBendOfCentury\fP ()"
.br
.ti -1c
.RI "\fBstartOfWeek\fP ()"
.br
.ti -1c
.RI "\fBendOfWeek\fP ()"
.br
.ti -1c
.RI "\fBnext\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBprevious\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBfirstOfMonth\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBlastOfMonth\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBnthOfMonth\fP ($nth, $dayOfWeek)"
.br
.ti -1c
.RI "\fBfirstOfQuarter\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBlastOfQuarter\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBnthOfQuarter\fP ($nth, $dayOfWeek)"
.br
.ti -1c
.RI "\fBfirstOfYear\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBlastOfYear\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBnthOfYear\fP ($nth, $dayOfWeek)"
.br
.ti -1c
.RI "\fBaverage\fP (\fBCarbon\fP $dt=null)"
.br
.ti -1c
.RI "\fBisBirthday\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fB__construct\fP ($time=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "\fBcopy\fP ()"
.br
.ti -1c
.RI "\fB__get\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fB__isset\fP ($\fBname\fP)"
.br
.ti -1c
.RI "\fB__set\fP ($\fBname\fP, $value)"
.br
.ti -1c
.RI "\fByear\fP ($value)"
.br
.ti -1c
.RI "\fBmonth\fP ($value)"
.br
.ti -1c
.RI "\fBday\fP ($value)"
.br
.ti -1c
.RI "\fBhour\fP ($value)"
.br
.ti -1c
.RI "\fBminute\fP ($value)"
.br
.ti -1c
.RI "\fBsecond\fP ($value)"
.br
.ti -1c
.RI "\fBsetDateTime\fP ($\fByear\fP, $\fBmonth\fP, $\fBday\fP, $\fBhour\fP, $\fBminute\fP, $\fBsecond\fP=0)"
.br
.ti -1c
.RI "\fBtimestamp\fP ($value)"
.br
.ti -1c
.RI "\fBtimezone\fP ($value)"
.br
.ti -1c
.RI "\fBtz\fP ($value)"
.br
.ti -1c
.RI "\fBsetTimezone\fP ($value)"
.br
.ti -1c
.RI "\fBformatLocalized\fP ($\fBformat\fP)"
.br
.ti -1c
.RI "\fB__toString\fP ()"
.br
.ti -1c
.RI "\fBtoDateString\fP ()"
.br
.ti -1c
.RI "\fBtoFormattedDateString\fP ()"
.br
.ti -1c
.RI "\fBtoTimeString\fP ()"
.br
.ti -1c
.RI "\fBtoDateTimeString\fP ()"
.br
.ti -1c
.RI "\fBtoDayDateTimeString\fP ()"
.br
.ti -1c
.RI "\fBtoAtomString\fP ()"
.br
.ti -1c
.RI "\fBtoCookieString\fP ()"
.br
.ti -1c
.RI "\fBtoIso8601String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc822String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc850String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc1036String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc1123String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc2822String\fP ()"
.br
.ti -1c
.RI "\fBtoRfc3339String\fP ()"
.br
.ti -1c
.RI "\fBtoRssString\fP ()"
.br
.ti -1c
.RI "\fBtoW3cString\fP ()"
.br
.ti -1c
.RI "\fBeq\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBne\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBgt\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBgte\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBlt\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBlte\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBbetween\fP (\fBCarbon\fP $dt1, \fBCarbon\fP $dt2, $equal=true)"
.br
.ti -1c
.RI "\fBmin\fP (\fBCarbon\fP $dt=null)"
.br
.ti -1c
.RI "\fBmax\fP (\fBCarbon\fP $dt=null)"
.br
.ti -1c
.RI "\fBisWeekday\fP ()"
.br
.ti -1c
.RI "\fBisWeekend\fP ()"
.br
.ti -1c
.RI "\fBisYesterday\fP ()"
.br
.ti -1c
.RI "\fBisToday\fP ()"
.br
.ti -1c
.RI "\fBisTomorrow\fP ()"
.br
.ti -1c
.RI "\fBisFuture\fP ()"
.br
.ti -1c
.RI "\fBisPast\fP ()"
.br
.ti -1c
.RI "\fBisLeapYear\fP ()"
.br
.ti -1c
.RI "\fBisSameDay\fP (\fBCarbon\fP $dt)"
.br
.ti -1c
.RI "\fBaddYears\fP ($value)"
.br
.ti -1c
.RI "\fBaddYear\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubYear\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubYears\fP ($value)"
.br
.ti -1c
.RI "\fBaddMonths\fP ($value)"
.br
.ti -1c
.RI "\fBaddMonth\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMonth\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMonths\fP ($value)"
.br
.ti -1c
.RI "\fBaddMonthsNoOverflow\fP ($value)"
.br
.ti -1c
.RI "\fBaddMonthNoOverflow\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMonthNoOverflow\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMonthsNoOverflow\fP ($value)"
.br
.ti -1c
.RI "\fBaddDays\fP ($value)"
.br
.ti -1c
.RI "\fBaddDay\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubDay\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubDays\fP ($value)"
.br
.ti -1c
.RI "\fBaddWeekdays\fP ($value)"
.br
.ti -1c
.RI "\fBaddWeekday\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubWeekday\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubWeekdays\fP ($value)"
.br
.ti -1c
.RI "\fBaddWeeks\fP ($value)"
.br
.ti -1c
.RI "\fBaddWeek\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubWeek\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubWeeks\fP ($value)"
.br
.ti -1c
.RI "\fBaddHours\fP ($value)"
.br
.ti -1c
.RI "\fBaddHour\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubHour\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubHours\fP ($value)"
.br
.ti -1c
.RI "\fBaddMinutes\fP ($value)"
.br
.ti -1c
.RI "\fBaddMinute\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMinute\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubMinutes\fP ($value)"
.br
.ti -1c
.RI "\fBaddSeconds\fP ($value)"
.br
.ti -1c
.RI "\fBaddSecond\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubSecond\fP ($value=1)"
.br
.ti -1c
.RI "\fBsubSeconds\fP ($value)"
.br
.ti -1c
.RI "\fBdiffInYears\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInMonths\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInWeeks\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInDays\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInDaysFiltered\fP (Closure $\fBcallback\fP, \fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInHoursFiltered\fP (Closure $\fBcallback\fP, \fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffFiltered\fP (\fBCarbonInterval\fP $\fBci\fP, Closure $\fBcallback\fP, \fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInWeekdays\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInWeekendDays\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInHours\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInMinutes\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBdiffInSeconds\fP (\fBCarbon\fP $dt=null, $abs=true)"
.br
.ti -1c
.RI "\fBsecondsSinceMidnight\fP ()"
.br
.ti -1c
.RI "\fBsecondsUntilEndOfDay\fP ()"
.br
.ti -1c
.RI "\fBdiffForHumans\fP (\fBCarbon\fP $other=null, $absolute=false)"
.br
.ti -1c
.RI "\fBstartOfDay\fP ()"
.br
.ti -1c
.RI "\fBendOfDay\fP ()"
.br
.ti -1c
.RI "\fBstartOfMonth\fP ()"
.br
.ti -1c
.RI "\fBendOfMonth\fP ()"
.br
.ti -1c
.RI "\fBstartOfYear\fP ()"
.br
.ti -1c
.RI "\fBendOfYear\fP ()"
.br
.ti -1c
.RI "\fBstartOfDecade\fP ()"
.br
.ti -1c
.RI "\fBendOfDecade\fP ()"
.br
.ti -1c
.RI "\fBstartOfCentury\fP ()"
.br
.ti -1c
.RI "\fBendOfCentury\fP ()"
.br
.ti -1c
.RI "\fBstartOfWeek\fP ()"
.br
.ti -1c
.RI "\fBendOfWeek\fP ()"
.br
.ti -1c
.RI "\fBnext\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBprevious\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBfirstOfMonth\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBlastOfMonth\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBnthOfMonth\fP ($nth, $dayOfWeek)"
.br
.ti -1c
.RI "\fBfirstOfQuarter\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBlastOfQuarter\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBnthOfQuarter\fP ($nth, $dayOfWeek)"
.br
.ti -1c
.RI "\fBfirstOfYear\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBlastOfYear\fP ($dayOfWeek=null)"
.br
.ti -1c
.RI "\fBnthOfYear\fP ($nth, $dayOfWeek)"
.br
.ti -1c
.RI "\fBaverage\fP (\fBCarbon\fP $dt=null)"
.br
.ti -1c
.RI "\fBisBirthday\fP (\fBCarbon\fP $dt)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBinstance\fP (DateTime $dt)"
.br
.ti -1c
.RI "static \fBparse\fP ($time=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBnow\fP ($\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBtoday\fP ($\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBtomorrow\fP ($\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fByesterday\fP ($\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBmaxValue\fP ()"
.br
.ti -1c
.RI "static \fBminValue\fP ()"
.br
.ti -1c
.RI "static \fBcreate\fP ($\fByear\fP=null, $\fBmonth\fP=null, $\fBday\fP=null, $\fBhour\fP=null, $\fBminute\fP=null, $\fBsecond\fP=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromDate\fP ($\fByear\fP=null, $\fBmonth\fP=null, $\fBday\fP=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromTime\fP ($\fBhour\fP=null, $\fBminute\fP=null, $\fBsecond\fP=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromFormat\fP ($\fBformat\fP, $time, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromTimestamp\fP ($\fBtimestamp\fP, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromTimestampUTC\fP ($\fBtimestamp\fP)"
.br
.ti -1c
.RI "static \fBsetTestNow\fP (\fBCarbon\fP $testNow=null)"
.br
.ti -1c
.RI "static \fBgetTestNow\fP ()"
.br
.ti -1c
.RI "static \fBhasTestNow\fP ()"
.br
.ti -1c
.RI "static \fBhasRelativeKeywords\fP ($time)"
.br
.ti -1c
.RI "static \fBgetTranslator\fP ()"
.br
.ti -1c
.RI "static \fBsetTranslator\fP (\fBTranslatorInterface\fP $\fBtranslator\fP)"
.br
.ti -1c
.RI "static \fBgetLocale\fP ()"
.br
.ti -1c
.RI "static \fBsetLocale\fP ($\fBlocale\fP)"
.br
.ti -1c
.RI "static \fBresetToStringFormat\fP ()"
.br
.ti -1c
.RI "static \fBsetToStringFormat\fP ($\fBformat\fP)"
.br
.ti -1c
.RI "static \fBinstance\fP (DateTime $dt)"
.br
.ti -1c
.RI "static \fBparse\fP ($time=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBnow\fP ($\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBtoday\fP ($\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBtomorrow\fP ($\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fByesterday\fP ($\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBmaxValue\fP ()"
.br
.ti -1c
.RI "static \fBminValue\fP ()"
.br
.ti -1c
.RI "static \fBcreate\fP ($\fByear\fP=null, $\fBmonth\fP=null, $\fBday\fP=null, $\fBhour\fP=null, $\fBminute\fP=null, $\fBsecond\fP=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromDate\fP ($\fByear\fP=null, $\fBmonth\fP=null, $\fBday\fP=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromTime\fP ($\fBhour\fP=null, $\fBminute\fP=null, $\fBsecond\fP=null, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromFormat\fP ($\fBformat\fP, $time, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromTimestamp\fP ($\fBtimestamp\fP, $\fBtz\fP=null)"
.br
.ti -1c
.RI "static \fBcreateFromTimestampUTC\fP ($\fBtimestamp\fP)"
.br
.ti -1c
.RI "static \fBsetTestNow\fP (\fBCarbon\fP $testNow=null)"
.br
.ti -1c
.RI "static \fBgetTestNow\fP ()"
.br
.ti -1c
.RI "static \fBhasTestNow\fP ()"
.br
.ti -1c
.RI "static \fBhasRelativeKeywords\fP ($time)"
.br
.ti -1c
.RI "static \fBgetTranslator\fP ()"
.br
.ti -1c
.RI "static \fBsetTranslator\fP (\fBTranslatorInterface\fP $\fBtranslator\fP)"
.br
.ti -1c
.RI "static \fBgetLocale\fP ()"
.br
.ti -1c
.RI "static \fBsetLocale\fP ($\fBlocale\fP)"
.br
.ti -1c
.RI "static \fBresetToStringFormat\fP ()"
.br
.ti -1c
.RI "static \fBsetToStringFormat\fP ($\fBformat\fP)"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBSUNDAY\fP = 0"
.br
.ti -1c
.RI "const \fBMONDAY\fP = 1"
.br
.ti -1c
.RI "const \fBTUESDAY\fP = 2"
.br
.ti -1c
.RI "const \fBWEDNESDAY\fP = 3"
.br
.ti -1c
.RI "const \fBTHURSDAY\fP = 4"
.br
.ti -1c
.RI "const \fBFRIDAY\fP = 5"
.br
.ti -1c
.RI "const \fBSATURDAY\fP = 6"
.br
.ti -1c
.RI "const \fBYEARS_PER_CENTURY\fP = 100"
.br
.ti -1c
.RI "const \fBYEARS_PER_DECADE\fP = 10"
.br
.ti -1c
.RI "const \fBMONTHS_PER_YEAR\fP = 12"
.br
.ti -1c
.RI "const \fBWEEKS_PER_YEAR\fP = 52"
.br
.ti -1c
.RI "const \fBDAYS_PER_WEEK\fP = 7"
.br
.ti -1c
.RI "const \fBHOURS_PER_DAY\fP = 24"
.br
.ti -1c
.RI "const \fBMINUTES_PER_HOUR\fP = 60"
.br
.ti -1c
.RI "const \fBSECONDS_PER_MINUTE\fP = 60"
.br
.ti -1c
.RI "const \fBDEFAULT_TO_STRING_FORMAT\fP = 'Y-m-\fBd\fP H:i:s'"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static \fBsafeCreateDateTimeZone\fP ($object)"
.br
.ti -1c
.RI "static \fBtranslator\fP ()"
.br
.ti -1c
.RI "static \fBsafeCreateDateTimeZone\fP ($object)"
.br
.ti -1c
.RI "static \fBtranslator\fP ()"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static \fB$days\fP = array(self::SUNDAY => 'Sunday', self::MONDAY => 'Monday', self::TUESDAY => 'Tuesday', self::WEDNESDAY => 'Wednesday', self::THURSDAY => 'Thursday', self::FRIDAY => 'Friday', self::SATURDAY => 'Saturday')"
.br
.ti -1c
.RI "static \fB$relativeKeywords\fP = array('\fBthis\fP', '\fBnext\fP', 'last', '\fBtomorrow\fP', '\fByesterday\fP', '+', '-', 'first', 'last', 'ago')"
.br
.ti -1c
.RI "static \fB$toStringFormat\fP = self::DEFAULT_TO_STRING_FORMAT"
.br
.ti -1c
.RI "static \fB$testNow\fP"
.br
.ti -1c
.RI "static \fB$translator\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 16352 of file compiled\&.php\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ( $time = \fCnull\fP,  $tz = \fCnull\fP)"

.PP
Definition at line 16389 of file compiled\&.php\&.
.SS "__construct ( $time = \fCnull\fP,  $tz = \fCnull\fP)"
Create a new \fBCarbon\fP instance\&.
.PP
Please see the testing aids section (specifically static::setTestNow()) for more on the possibility of this constructor returning a test instance\&.
.PP
\fBParameters:\fP
.RS 4
\fI$time\fP 
.br
\fI$tz\fP 
.RE
.PP

.PP
Definition at line 181 of file Carbon\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "__get ( $name)"
Get a part of the \fBCarbon\fP object
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidArgumentException\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string|integer|DateTimeZone 
.RE
.PP

.PP
Definition at line 444 of file Carbon\&.php\&.
.SS "__get ( $name)"

.PP
Definition at line 16485 of file compiled\&.php\&.
.SS "__isset ( $name)"
Check if an attribute exists on the object
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 506 of file Carbon\&.php\&.
.SS "__isset ( $name)"

.PP
Definition at line 16514 of file compiled\&.php\&.
.SS "__set ( $name,  $value)"
Set a part of the \fBCarbon\fP object
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP 
.br
\fI$value\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidArgumentException\fP 
.RE
.PP

.PP
Definition at line 525 of file Carbon\&.php\&.
.SS "__set ( $name,  $value)"

.PP
Definition at line 16523 of file compiled\&.php\&.
.SS "__toString ()"
Format the instance as a string using the set format
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 898 of file Carbon\&.php\&.
.SS "__toString ()"

.PP
Definition at line 16671 of file compiled\&.php\&.
.SS "addDay ( $value = \fC1\fP)"
Add a day to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1445 of file Carbon\&.php\&.
.SS "addDay ( $value = \fC1\fP)"

.PP
Definition at line 16878 of file compiled\&.php\&.
.SS "addDays ( $value)"
Add days to the instance\&. Positive $value travels forward while negative $value travels into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1435 of file Carbon\&.php\&.
.SS "addDays ( $value)"

.PP
Definition at line 16874 of file compiled\&.php\&.
.SS "addHour ( $value = \fC1\fP)"
Add an hour to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1580 of file Carbon\&.php\&.
.SS "addHour ( $value = \fC1\fP)"

.PP
Definition at line 16926 of file compiled\&.php\&.
.SS "addHours ( $value)"
Add hours to the instance\&. Positive $value travels forward while negative $value travels into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1570 of file Carbon\&.php\&.
.SS "addHours ( $value)"

.PP
Definition at line 16922 of file compiled\&.php\&.
.SS "addMinute ( $value = \fC1\fP)"
Add a minute to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1625 of file Carbon\&.php\&.
.SS "addMinute ( $value = \fC1\fP)"

.PP
Definition at line 16942 of file compiled\&.php\&.
.SS "addMinutes ( $value)"
Add minutes to the instance\&. Positive $value travels forward while negative $value travels into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1615 of file Carbon\&.php\&.
.SS "addMinutes ( $value)"

.PP
Definition at line 16938 of file compiled\&.php\&.
.SS "addMonth ( $value = \fC1\fP)"
Add a month to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1349 of file Carbon\&.php\&.
.SS "addMonth ( $value = \fC1\fP)"

.PP
Definition at line 16842 of file compiled\&.php\&.
.SS "addMonthNoOverflow ( $value = \fC1\fP)"
Add a month with no overflow to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1400 of file Carbon\&.php\&.
.SS "addMonthNoOverflow ( $value = \fC1\fP)"

.PP
Definition at line 16862 of file compiled\&.php\&.
.SS "addMonths ( $value)"
Add months to the instance\&. Positive $value travels forward while negative $value travels into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1339 of file Carbon\&.php\&.
.SS "addMonths ( $value)"

.PP
Definition at line 16838 of file compiled\&.php\&.
.SS "addMonthsNoOverflow ( $value)"
Add months without overflowing to the instance\&. Positive $value travels forward while negative $value travels into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1384 of file Carbon\&.php\&.
.SS "addMonthsNoOverflow ( $value)"

.PP
Definition at line 16854 of file compiled\&.php\&.
.SS "addSecond ( $value = \fC1\fP)"
Add a second to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1670 of file Carbon\&.php\&.
.SS "addSecond ( $value = \fC1\fP)"

.PP
Definition at line 16958 of file compiled\&.php\&.
.SS "addSeconds ( $value)"
Add seconds to the instance\&. Positive $value travels forward while negative $value travels into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1660 of file Carbon\&.php\&.
.SS "addSeconds ( $value)"

.PP
Definition at line 16954 of file compiled\&.php\&.
.SS "addWeek ( $value = \fC1\fP)"
Add a week to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1535 of file Carbon\&.php\&.
.SS "addWeek ( $value = \fC1\fP)"

.PP
Definition at line 16910 of file compiled\&.php\&.
.SS "addWeekday ( $value = \fC1\fP)"
Add a weekday to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1490 of file Carbon\&.php\&.
.SS "addWeekday ( $value = \fC1\fP)"

.PP
Definition at line 16894 of file compiled\&.php\&.
.SS "addWeekdays ( $value)"
Add weekdays to the instance\&. Positive $value travels forward while negative $value travels into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1480 of file Carbon\&.php\&.
.SS "addWeekdays ( $value)"

.PP
Definition at line 16890 of file compiled\&.php\&.
.SS "addWeeks ( $value)"
Add weeks to the instance\&. Positive $value travels forward while negative $value travels into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1525 of file Carbon\&.php\&.
.SS "addWeeks ( $value)"

.PP
Definition at line 16906 of file compiled\&.php\&.
.SS "addYear ( $value = \fC1\fP)"
Add a year to the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1304 of file Carbon\&.php\&.
.SS "addYear ( $value = \fC1\fP)"

.PP
Definition at line 16826 of file compiled\&.php\&.
.SS "addYears ( $value)"
Add years to the instance\&. Positive $value travel forward while negative $value travel into the past\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1294 of file Carbon\&.php\&.
.SS "addYears ( $value)"

.PP
Definition at line 16822 of file compiled\&.php\&.
.SS "average (\fBCarbon\fP $dt = \fCnull\fP)"
Modify the current instance to the average of a given instance (default now) and the current instance\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2342 of file Carbon\&.php\&.
.SS "average (\fBCarbon\fP $dt = \fCnull\fP)"

.PP
Definition at line 17220 of file compiled\&.php\&.
.SS "between (\fBCarbon\fP $dt1, \fBCarbon\fP $dt2,  $equal = \fCtrue\fP)"
Determines if the instance is between two others
.PP
\fBParameters:\fP
.RS 4
\fI$dt1\fP 
.br
\fI$dt2\fP 
.br
\fI$equal\fP Indicates if a > and < comparison should be used or <= or >=
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1148 of file Carbon\&.php\&.
.SS "between (\fBCarbon\fP $dt1, \fBCarbon\fP $dt2,  $equal = \fCtrue\fP)"

.PP
Definition at line 16763 of file compiled\&.php\&.
.SS "copy ()"
Get a copy of the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 426 of file Carbon\&.php\&.
.SS "copy ()"

.PP
Definition at line 16481 of file compiled\&.php\&.
.SS "static create ( $year = \fCnull\fP,  $month = \fCnull\fP,  $day = \fCnull\fP,  $hour = \fCnull\fP,  $minute = \fCnull\fP,  $second = \fCnull\fP,  $tz = \fCnull\fP)\fC [static]\fP"
Create a new \fBCarbon\fP instance from a specific date and time\&.
.PP
If any of $year, $month or $day are set to null their \fBnow()\fP values will be used\&.
.PP
If $hour is null it will be set to its \fBnow()\fP value and the default values for $minute and $second will be their \fBnow()\fP values\&. If $hour is not null then the default values for $minute and $second will be 0\&.
.PP
\fBParameters:\fP
.RS 4
\fI$year\fP 
.br
\fI$month\fP 
.br
\fI$day\fP 
.br
\fI$hour\fP 
.br
\fI$minute\fP 
.br
\fI$second\fP 
.br
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 321 of file Carbon\&.php\&.
.SS "static create ( $year = \fCnull\fP,  $month = \fCnull\fP,  $day = \fCnull\fP,  $hour = \fCnull\fP,  $minute = \fCnull\fP,  $second = \fCnull\fP,  $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16437 of file compiled\&.php\&.
.SS "static createFromDate ( $year = \fCnull\fP,  $month = \fCnull\fP,  $day = \fCnull\fP,  $tz = \fCnull\fP)\fC [static]\fP"
Create a \fBCarbon\fP instance from just a date\&. The time portion is set to now\&.
.PP
\fBParameters:\fP
.RS 4
\fI$year\fP 
.br
\fI$month\fP 
.br
\fI$day\fP 
.br
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 349 of file Carbon\&.php\&.
.SS "static createFromDate ( $year = \fCnull\fP,  $month = \fCnull\fP,  $day = \fCnull\fP,  $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16452 of file compiled\&.php\&.
.SS "static createFromFormat ( $format,  $time,  $tz = \fCnull\fP)\fC [static]\fP"
Create a \fBCarbon\fP instance from a specific format
.PP
\fBParameters:\fP
.RS 4
\fI$format\fP 
.br
\fI$time\fP 
.br
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidArgumentException\fP 
.RE
.PP

.PP
Definition at line 380 of file Carbon\&.php\&.
.SS "static createFromFormat ( $format,  $time,  $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16460 of file compiled\&.php\&.
.SS "static createFromTime ( $hour = \fCnull\fP,  $minute = \fCnull\fP,  $second = \fCnull\fP,  $tz = \fCnull\fP)\fC [static]\fP"
Create a \fBCarbon\fP instance from just a time\&. The date portion is set to today\&.
.PP
\fBParameters:\fP
.RS 4
\fI$hour\fP 
.br
\fI$minute\fP 
.br
\fI$second\fP 
.br
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 364 of file Carbon\&.php\&.
.SS "static createFromTime ( $hour = \fCnull\fP,  $minute = \fCnull\fP,  $second = \fCnull\fP,  $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16456 of file compiled\&.php\&.
.SS "static createFromTimestamp ( $timestamp,  $tz = \fCnull\fP)\fC [static]\fP"
Create a \fBCarbon\fP instance from a timestamp
.PP
\fBParameters:\fP
.RS 4
\fI$timestamp\fP 
.br
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 404 of file Carbon\&.php\&.
.SS "static createFromTimestamp ( $timestamp,  $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16473 of file compiled\&.php\&.
.SS "static createFromTimestampUTC ( $timestamp)\fC [static]\fP"
Create a \fBCarbon\fP instance from an UTC timestamp
.PP
\fBParameters:\fP
.RS 4
\fI$timestamp\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 416 of file Carbon\&.php\&.
.SS "static createFromTimestampUTC ( $timestamp)\fC [static]\fP"

.PP
Definition at line 16477 of file compiled\&.php\&.
.SS "day ( $value)"
Set the instance's day
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 601 of file Carbon\&.php\&.
.SS "day ( $value)"

.PP
Definition at line 16565 of file compiled\&.php\&.
.SS "diffFiltered (\fBCarbonInterval\fP $ci, Closure $callback, \fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference by the given interval using a filter closure
.PP
\fBParameters:\fP
.RS 4
\fI$ci\fP An interval to traverse by 
.br
\fI$callback\fP 
.br
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Definition at line 1797 of file Carbon\&.php\&.
.SS "diffFiltered (\fBCarbonInterval\fP $ci, Closure $callback, \fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 16997 of file compiled\&.php\&.
.SS "diffForHumans (\fBCarbon\fP $other = \fCnull\fP,  $absolute = \fCfalse\fP)"
Get the difference in a human readable format in the current locale\&.
.PP
When comparing a value in the past to default now: 1 hour ago 5 months ago
.PP
When comparing a value in the future to default now: 1 hour from now 5 months from now
.PP
When comparing a value in the past to another value: 1 hour before 5 months before
.PP
When comparing a value in the future to another value: 1 hour after 5 months after
.PP
\fBParameters:\fP
.RS 4
\fI$other\fP 
.br
\fI$absolute\fP removes time difference modifiers ago, after, etc
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1935 of file Carbon\&.php\&.
.SS "diffForHumans (\fBCarbon\fP $other = \fCnull\fP,  $absolute = \fCfalse\fP)"

.PP
Definition at line 17048 of file compiled\&.php\&.
.SS "diffInDays (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in days
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1752 of file Carbon\&.php\&.
.SS "diffInDays (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 16984 of file compiled\&.php\&.
.SS "diffInDaysFiltered (Closure $callback, \fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in days using a filter closure
.PP
\fBParameters:\fP
.RS 4
\fI$callback\fP 
.br
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Definition at line 1768 of file Carbon\&.php\&.
.SS "diffInDaysFiltered (Closure $callback, \fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 16989 of file compiled\&.php\&.
.SS "diffInHours (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in hours
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1857 of file Carbon\&.php\&.
.SS "diffInHours (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 17026 of file compiled\&.php\&.
.SS "diffInHoursFiltered (Closure $callback, \fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in hours using a filter closure
.PP
\fBParameters:\fP
.RS 4
\fI$callback\fP 
.br
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Definition at line 1782 of file Carbon\&.php\&.
.SS "diffInHoursFiltered (Closure $callback, \fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 16993 of file compiled\&.php\&.
.SS "diffInMinutes (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in minutes
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1870 of file Carbon\&.php\&.
.SS "diffInMinutes (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 17030 of file compiled\&.php\&.
.SS "diffInMonths (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in months
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1724 of file Carbon\&.php\&.
.SS "diffInMonths (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 16975 of file compiled\&.php\&.
.SS "diffInSeconds (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in seconds
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1883 of file Carbon\&.php\&.
.SS "diffInSeconds (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 17034 of file compiled\&.php\&.
.SS "diffInWeekdays (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in weekdays
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Definition at line 1827 of file Carbon\&.php\&.
.SS "diffInWeekdays (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 17014 of file compiled\&.php\&.
.SS "diffInWeekendDays (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in weekend days using a filter
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP

.PP
Definition at line 1842 of file Carbon\&.php\&.
.SS "diffInWeekendDays (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 17020 of file compiled\&.php\&.
.SS "diffInWeeks (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in weeks
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1739 of file Carbon\&.php\&.
.SS "diffInWeeks (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 16980 of file compiled\&.php\&.
.SS "diffInYears (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"
Get the difference in years
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.br
\fI$abs\fP Get the absolute of the difference
.RE
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1709 of file Carbon\&.php\&.
.SS "diffInYears (\fBCarbon\fP $dt = \fCnull\fP,  $abs = \fCtrue\fP)"

.PP
Definition at line 16970 of file compiled\&.php\&.
.SS "endOfCentury ()"
Resets the date to end of the century and time to 23:59:59
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2103 of file Carbon\&.php\&.
.SS "endOfCentury ()"

.PP
Definition at line 17136 of file compiled\&.php\&.
.SS "endOfDay ()"
Resets the time to 23:59:59
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2023 of file Carbon\&.php\&.
.SS "endOfDay ()"

.PP
Definition at line 17104 of file compiled\&.php\&.
.SS "endOfDecade ()"
Resets the date to end of the decade and time to 23:59:59
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2083 of file Carbon\&.php\&.
.SS "endOfDecade ()"

.PP
Definition at line 17128 of file compiled\&.php\&.
.SS "endOfMonth ()"
Resets the date to end of the month and time to 23:59:59
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2043 of file Carbon\&.php\&.
.SS "endOfMonth ()"

.PP
Definition at line 17112 of file compiled\&.php\&.
.SS "endOfWeek ()"
Resets the date to end of the ISO-8601 week (Sunday) and time to 23:59:59
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2127 of file Carbon\&.php\&.
.SS "endOfWeek ()"

.PP
Definition at line 17147 of file compiled\&.php\&.
.SS "endOfYear ()"
Resets the date to end of the year and time to 23:59:59
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2063 of file Carbon\&.php\&.
.SS "endOfYear ()"

.PP
Definition at line 17120 of file compiled\&.php\&.
.SS "eq (\fBCarbon\fP $dt)"
Determines if the instance is equal to another
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1074 of file Carbon\&.php\&.
.SS "eq (\fBCarbon\fP $dt)"

.PP
Definition at line 16739 of file compiled\&.php\&.
.SS "firstOfMonth ( $dayOfWeek = \fCnull\fP)"
Modify to the first occurence of a given day of the week in the current month\&. If no dayOfWeek is provided, modify to the first day of the current month\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2184 of file Carbon\&.php\&.
.SS "firstOfMonth ( $dayOfWeek = \fCnull\fP)"

.PP
Definition at line 17168 of file compiled\&.php\&.
.SS "firstOfQuarter ( $dayOfWeek = \fCnull\fP)"
Modify to the first occurence of a given day of the week in the current quarter\&. If no dayOfWeek is provided, modify to the first day of the current quarter\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2246 of file Carbon\&.php\&.
.SS "firstOfQuarter ( $dayOfWeek = \fCnull\fP)"

.PP
Definition at line 17191 of file compiled\&.php\&.
.SS "firstOfYear ( $dayOfWeek = \fCnull\fP)"
Modify to the first occurence of a given day of the week in the current year\&. If no dayOfWeek is provided, modify to the first day of the current year\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2297 of file Carbon\&.php\&.
.SS "firstOfYear ( $dayOfWeek = \fCnull\fP)"

.PP
Definition at line 17207 of file compiled\&.php\&.
.SS "formatLocalized ( $format)"
Format the instance with the current locale\&. You can set the current locale using setlocale() http://php.net/setlocale\&.
.PP
\fBParameters:\fP
.RS 4
\fI$format\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 863 of file Carbon\&.php\&.
.SS "formatLocalized ( $format)"

.PP
Definition at line 16656 of file compiled\&.php\&.
.SS "static getLocale ()\fC [static]\fP"
Get the current translator locale
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 833 of file Carbon\&.php\&.
.SS "static getLocale ()\fC [static]\fP"

.PP
Definition at line 16647 of file compiled\&.php\&.
.SS "static getTestNow ()\fC [static]\fP"
Get the \fBCarbon\fP instance (real or mock) to be returned when a 'now' instance is created\&.
.PP
\fBReturns:\fP
.RS 4
static the current instance used for testing 
.RE
.PP

.PP
Definition at line 750 of file Carbon\&.php\&.
.SS "static getTestNow ()\fC [static]\fP"

.PP
Definition at line 16611 of file compiled\&.php\&.
.SS "static getTranslator ()\fC [static]\fP"
Get the translator instance in use
.PP
\fBReturns:\fP
.RS 4
TranslatorInterface 
.RE
.PP

.PP
Definition at line 813 of file Carbon\&.php\&.
.SS "static getTranslator ()\fC [static]\fP"

.PP
Definition at line 16639 of file compiled\&.php\&.
.SS "gt (\fBCarbon\fP $dt)"
Determines if the instance is greater (after) than another
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1098 of file Carbon\&.php\&.
.SS "gt (\fBCarbon\fP $dt)"

.PP
Definition at line 16747 of file compiled\&.php\&.
.SS "gte (\fBCarbon\fP $dt)"
Determines if the instance is greater (after) than or equal to another
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1110 of file Carbon\&.php\&.
.SS "gte (\fBCarbon\fP $dt)"

.PP
Definition at line 16751 of file compiled\&.php\&.
.SS "static hasRelativeKeywords ( $time)\fC [static]\fP"
Determine if there is a relative keyword in the time string, this is to create dates relative to now for test instances\&. e\&.g\&.: next tuesday
.PP
\fBParameters:\fP
.RS 4
\fI$time\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean true if there is a keyword, otherwise false 
.RE
.PP

.PP
Definition at line 774 of file Carbon\&.php\&.
.SS "static hasRelativeKeywords ( $time)\fC [static]\fP"

.PP
Definition at line 16619 of file compiled\&.php\&.
.SS "static hasTestNow ()\fC [static]\fP"
Determine if there is a valid test instance set\&. \fBA\fP valid test instance is anything that is not null\&.
.PP
\fBReturns:\fP
.RS 4
boolean true if there is a test instance, otherwise false 
.RE
.PP

.PP
Definition at line 761 of file Carbon\&.php\&.
.SS "static hasTestNow ()\fC [static]\fP"

.PP
Definition at line 16615 of file compiled\&.php\&.
.SS "hour ( $value)"
Set the instance's hour
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 615 of file Carbon\&.php\&.
.SS "hour ( $value)"

.PP
Definition at line 16570 of file compiled\&.php\&.
.SS "static instance (DateTime $dt)\fC [static]\fP"
Create a \fBCarbon\fP instance from a DateTime one
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 211 of file Carbon\&.php\&.
.SS "static instance (DateTime $dt)\fC [static]\fP"

.PP
Definition at line 16405 of file compiled\&.php\&.
.SS "isBirthday (\fBCarbon\fP $dt)"
Check if its the birthday\&. Compares the date/month values of the two dates\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 2356 of file Carbon\&.php\&.
.SS "isBirthday (\fBCarbon\fP $dt)"

.PP
Definition at line 17225 of file compiled\&.php\&.
.SS "isFuture ()"
Determines if the instance is in the future, ie\&. greater (after) than now
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1246 of file Carbon\&.php\&.
.SS "isFuture ()"

.PP
Definition at line 16806 of file compiled\&.php\&.
.SS "isLeapYear ()"
Determines if the instance is a leap year
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1266 of file Carbon\&.php\&.
.SS "isLeapYear ()"

.PP
Definition at line 16814 of file compiled\&.php\&.
.SS "isPast ()"
Determines if the instance is in the past, ie\&. less (before) than now
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1256 of file Carbon\&.php\&.
.SS "isPast ()"

.PP
Definition at line 16810 of file compiled\&.php\&.
.SS "isSameDay (\fBCarbon\fP $dt)"
Checks if the passed in date is the same day as the instance current day\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1277 of file Carbon\&.php\&.
.SS "isSameDay (\fBCarbon\fP $dt)"

.PP
Definition at line 16818 of file compiled\&.php\&.
.SS "isToday ()"
Determines if the instance is today
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1226 of file Carbon\&.php\&.
.SS "isToday ()"

.PP
Definition at line 16798 of file compiled\&.php\&.
.SS "isTomorrow ()"
Determines if the instance is tomorrow
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1236 of file Carbon\&.php\&.
.SS "isTomorrow ()"

.PP
Definition at line 16802 of file compiled\&.php\&.
.SS "isWeekday ()"
Determines if the instance is a weekday
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1196 of file Carbon\&.php\&.
.SS "isWeekday ()"

.PP
Definition at line 16786 of file compiled\&.php\&.
.SS "isWeekend ()"
Determines if the instance is a weekend day
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1206 of file Carbon\&.php\&.
.SS "isWeekend ()"

.PP
Definition at line 16790 of file compiled\&.php\&.
.SS "isYesterday ()"
Determines if the instance is yesterday
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1216 of file Carbon\&.php\&.
.SS "isYesterday ()"

.PP
Definition at line 16794 of file compiled\&.php\&.
.SS "lastOfMonth ( $dayOfWeek = \fCnull\fP)"
Modify to the last occurence of a given day of the week in the current month\&. If no dayOfWeek is provided, modify to the last day of the current month\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2205 of file Carbon\&.php\&.
.SS "lastOfMonth ( $dayOfWeek = \fCnull\fP)"

.PP
Definition at line 17176 of file compiled\&.php\&.
.SS "lastOfQuarter ( $dayOfWeek = \fCnull\fP)"
Modify to the last occurence of a given day of the week in the current quarter\&. If no dayOfWeek is provided, modify to the last day of the current quarter\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2261 of file Carbon\&.php\&.
.SS "lastOfQuarter ( $dayOfWeek = \fCnull\fP)"

.PP
Definition at line 17195 of file compiled\&.php\&.
.SS "lastOfYear ( $dayOfWeek = \fCnull\fP)"
Modify to the last occurence of a given day of the week in the current year\&. If no dayOfWeek is provided, modify to the last day of the current year\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2312 of file Carbon\&.php\&.
.SS "lastOfYear ( $dayOfWeek = \fCnull\fP)"

.PP
Definition at line 17211 of file compiled\&.php\&.
.SS "lt (\fBCarbon\fP $dt)"
Determines if the instance is less (before) than another
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1122 of file Carbon\&.php\&.
.SS "lt (\fBCarbon\fP $dt)"

.PP
Definition at line 16755 of file compiled\&.php\&.
.SS "lte (\fBCarbon\fP $dt)"
Determines if the instance is less (before) or equal to another
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1134 of file Carbon\&.php\&.
.SS "lte (\fBCarbon\fP $dt)"

.PP
Definition at line 16759 of file compiled\&.php\&.
.SS "max (\fBCarbon\fP $dt = \fCnull\fP)"
Get the maximum instance between a given instance (default now) and the current instance\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1184 of file Carbon\&.php\&.
.SS "max (\fBCarbon\fP $dt = \fCnull\fP)"

.PP
Definition at line 16781 of file compiled\&.php\&.
.SS "static maxValue ()\fC [static]\fP"
Create a \fBCarbon\fP instance for the greatest supported date\&.
.PP
\fBReturns:\fP
.RS 4
\fBCarbon\fP 
.RE
.PP

.PP
Definition at line 285 of file Carbon\&.php\&.
.SS "static maxValue ()\fC [static]\fP"

.PP
Definition at line 16429 of file compiled\&.php\&.
.SS "min (\fBCarbon\fP $dt = \fCnull\fP)"
Get the minimum instance between a given instance (default now) and the current instance\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1170 of file Carbon\&.php\&.
.SS "min (\fBCarbon\fP $dt = \fCnull\fP)"

.PP
Definition at line 16776 of file compiled\&.php\&.
.SS "minute ( $value)"
Set the instance's minute
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 629 of file Carbon\&.php\&.
.SS "minute ( $value)"

.PP
Definition at line 16575 of file compiled\&.php\&.
.SS "static minValue ()\fC [static]\fP"
Create a \fBCarbon\fP instance for the lowest supported date\&.
.PP
\fBReturns:\fP
.RS 4
\fBCarbon\fP 
.RE
.PP

.PP
Definition at line 295 of file Carbon\&.php\&.
.SS "static minValue ()\fC [static]\fP"

.PP
Definition at line 16433 of file compiled\&.php\&.
.SS "month ( $value)"
Set the instance's month
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 587 of file Carbon\&.php\&.
.SS "month ( $value)"

.PP
Definition at line 16560 of file compiled\&.php\&.
.SS "ne (\fBCarbon\fP $dt)"
Determines if the instance is not equal to another
.PP
\fBParameters:\fP
.RS 4
\fI$dt\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
boolean 
.RE
.PP

.PP
Definition at line 1086 of file Carbon\&.php\&.
.SS "ne (\fBCarbon\fP $dt)"

.PP
Definition at line 16743 of file compiled\&.php\&.
.SS "next ( $dayOfWeek = \fCnull\fP)"
Modify to the next occurence of a given day of the week\&. If no dayOfWeek is provided, modify to the next occurence of the current day of the week\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2146 of file Carbon\&.php\&.
.SS "next ( $dayOfWeek = \fCnull\fP)"

.PP
Definition at line 17154 of file compiled\&.php\&.
.SS "static now ( $tz = \fCnull\fP)\fC [static]\fP"
Get a \fBCarbon\fP instance for the current date and time
.PP
\fBParameters:\fP
.RS 4
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 239 of file Carbon\&.php\&.
.SS "static now ( $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16413 of file compiled\&.php\&.
.SS "nthOfMonth ( $nth,  $dayOfWeek)"
Modify to the given occurence of a given day of the week in the current month\&. If the calculated occurence is outside the scope of the current month, then return false and no modifications are made\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$nth\fP 
.br
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2227 of file Carbon\&.php\&.
.SS "nthOfMonth ( $nth,  $dayOfWeek)"

.PP
Definition at line 17184 of file compiled\&.php\&.
.SS "nthOfQuarter ( $nth,  $dayOfWeek)"
Modify to the given occurence of a given day of the week in the current quarter\&. If the calculated occurence is outside the scope of the current quarter, then return false and no modifications are made\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$nth\fP 
.br
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2277 of file Carbon\&.php\&.
.SS "nthOfQuarter ( $nth,  $dayOfWeek)"

.PP
Definition at line 17199 of file compiled\&.php\&.
.SS "nthOfYear ( $nth,  $dayOfWeek)"
Modify to the given occurence of a given day of the week in the current year\&. If the calculated occurence is outside the scope of the current year, then return false and no modifications are made\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$nth\fP 
.br
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2328 of file Carbon\&.php\&.
.SS "nthOfYear ( $nth,  $dayOfWeek)"

.PP
Definition at line 17215 of file compiled\&.php\&.
.SS "static parse ( $time = \fCnull\fP,  $tz = \fCnull\fP)\fC [static]\fP"
Create a carbon instance from a string\&. This is an alias for the constructor that allows better fluent syntax as it allows you to do Carbon::parse('Monday next week')->\fBfn()\fP rather than (new \fBCarbon\fP('Monday next week'))->\fBfn()\fP
.PP
\fBParameters:\fP
.RS 4
\fI$time\fP 
.br
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 227 of file Carbon\&.php\&.
.SS "static parse ( $time = \fCnull\fP,  $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16409 of file compiled\&.php\&.
.SS "previous ( $dayOfWeek = \fCnull\fP)"
Modify to the previous occurence of a given day of the week\&. If no dayOfWeek is provided, modify to the previous occurence of the current day of the week\&. Use the supplied consts to indicate the desired dayOfWeek, ex\&. static::MONDAY\&.
.PP
\fBParameters:\fP
.RS 4
\fI$dayOfWeek\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 2165 of file Carbon\&.php\&.
.SS "previous ( $dayOfWeek = \fCnull\fP)"

.PP
Definition at line 17161 of file compiled\&.php\&.
.SS "static resetToStringFormat ()\fC [static]\fP"
Reset the format used to the default when type juggling a \fBCarbon\fP instance to a string 
.PP
Definition at line 878 of file Carbon\&.php\&.
.SS "static resetToStringFormat ()\fC [static]\fP"

.PP
Definition at line 16663 of file compiled\&.php\&.
.SS "static safeCreateDateTimeZone ( $object)\fC [static]\fP, \fC [protected]\fP"
Creates a DateTimeZone from a string or a DateTimeZone
.PP
\fBParameters:\fP
.RS 4
\fI$object\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
DateTimeZone
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidArgumentException\fP 
.RE
.PP

.PP
Definition at line 148 of file Carbon\&.php\&.
.SS "static safeCreateDateTimeZone ( $object)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 16375 of file compiled\&.php\&.
.SS "second ( $value)"
Set the instance's second
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 643 of file Carbon\&.php\&.
.SS "second ( $value)"

.PP
Definition at line 16580 of file compiled\&.php\&.
.SS "secondsSinceMidnight ()"
The number of seconds since midnight\&.
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1896 of file Carbon\&.php\&.
.SS "secondsSinceMidnight ()"

.PP
Definition at line 17040 of file compiled\&.php\&.
.SS "secondsUntilEndOfDay ()"
The number of seconds until 23:23:59\&.
.PP
\fBReturns:\fP
.RS 4
integer 
.RE
.PP

.PP
Definition at line 1906 of file Carbon\&.php\&.
.SS "secondsUntilEndOfDay ()"

.PP
Definition at line 17044 of file compiled\&.php\&.
.SS "setDateTime ( $year,  $month,  $day,  $hour,  $minute,  $second = \fC0\fP)"
Set the date and time all together
.PP
\fBParameters:\fP
.RS 4
\fI$year\fP 
.br
\fI$month\fP 
.br
\fI$day\fP 
.br
\fI$hour\fP 
.br
\fI$minute\fP 
.br
\fI$second\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 662 of file Carbon\&.php\&.
.SS "setDateTime ( $year,  $month,  $day,  $hour,  $minute,  $second = \fC0\fP)"

.PP
Definition at line 16585 of file compiled\&.php\&.
.SS "static setLocale ( $locale)\fC [static]\fP"
Set the current translator locale
.PP
\fBParameters:\fP
.RS 4
\fI$locale\fP 
.RE
.PP

.PP
Definition at line 843 of file Carbon\&.php\&.
.SS "static setLocale ( $locale)\fC [static]\fP"

.PP
Definition at line 16651 of file compiled\&.php\&.
.SS "static setTestNow (\fBCarbon\fP $testNow = \fCnull\fP)\fC [static]\fP"
Set a \fBCarbon\fP instance (real or mock) to be returned when a 'now' instance is created\&. The provided instance will be returned specifically under the following conditions:
.IP "\(bu" 2
\fBA\fP call to the static \fBnow()\fP method, ex\&. Carbon::now()
.IP "\(bu" 2
When a null (or blank string) is passed to the constructor or \fBparse()\fP, ex\&. new Carbon(null)
.IP "\(bu" 2
When the string 'now' is passed to the constructor or \fBparse()\fP, ex\&. new \fBCarbon\fP('now')
.PP
.PP
Note the timezone parameter was left out of the examples above and has no affect as the mock value will be returned regardless of its value\&.
.PP
To clear the test instance call this method using the default parameter of null\&.
.PP
\fBParameters:\fP
.RS 4
\fI$testNow\fP 
.RE
.PP

.PP
Definition at line 739 of file Carbon\&.php\&.
.SS "static setTestNow (\fBCarbon\fP $testNow = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16607 of file compiled\&.php\&.
.SS "setTimezone ( $value)"
Set the instance's timezone from a string or object
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 712 of file Carbon\&.php\&.
.SS "setTimezone ( $value)"

.PP
Definition at line 16602 of file compiled\&.php\&.
.SS "static setToStringFormat ( $format)\fC [static]\fP"
Set the default format used when type juggling a \fBCarbon\fP instance to a string
.PP
\fBParameters:\fP
.RS 4
\fI$format\fP 
.RE
.PP

.PP
Definition at line 888 of file Carbon\&.php\&.
.SS "static setToStringFormat ( $format)\fC [static]\fP"

.PP
Definition at line 16667 of file compiled\&.php\&.
.SS "static setTranslator (\fBTranslatorInterface\fP $translator)\fC [static]\fP"
Set the translator instance to use
.PP
\fBParameters:\fP
.RS 4
\fI$translator\fP 
.RE
.PP

.PP
Definition at line 823 of file Carbon\&.php\&.
.SS "static setTranslator (\fBTranslatorInterface\fP $translator)\fC [static]\fP"

.PP
Definition at line 16643 of file compiled\&.php\&.
.SS "startOfCentury ()"
Resets the date to the first day of the century and the time to 00:00:00
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2093 of file Carbon\&.php\&.
.SS "startOfCentury ()"

.PP
Definition at line 17132 of file compiled\&.php\&.
.SS "startOfDay ()"
Resets the time to 00:00:00
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2013 of file Carbon\&.php\&.
.SS "startOfDay ()"

.PP
Definition at line 17100 of file compiled\&.php\&.
.SS "startOfDecade ()"
Resets the date to the first day of the decade and the time to 00:00:00
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2073 of file Carbon\&.php\&.
.SS "startOfDecade ()"

.PP
Definition at line 17124 of file compiled\&.php\&.
.SS "startOfMonth ()"
Resets the date to the first day of the month and the time to 00:00:00
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2033 of file Carbon\&.php\&.
.SS "startOfMonth ()"

.PP
Definition at line 17108 of file compiled\&.php\&.
.SS "startOfWeek ()"
Resets the date to the first day of the ISO-8601 week (Monday) and the time to 00:00:00
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2113 of file Carbon\&.php\&.
.SS "startOfWeek ()"

.PP
Definition at line 17140 of file compiled\&.php\&.
.SS "startOfYear ()"
Resets the date to the first day of the year and the time to 00:00:00
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 2053 of file Carbon\&.php\&.
.SS "startOfYear ()"

.PP
Definition at line 17116 of file compiled\&.php\&.
.SS "subDay ( $value = \fC1\fP)"
Remove a day from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1455 of file Carbon\&.php\&.
.SS "subDay ( $value = \fC1\fP)"

.PP
Definition at line 16882 of file compiled\&.php\&.
.SS "subDays ( $value)"
Remove days from the instance
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1467 of file Carbon\&.php\&.
.SS "subDays ( $value)"

.PP
Definition at line 16886 of file compiled\&.php\&.
.SS "subHour ( $value = \fC1\fP)"
Remove an hour from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1590 of file Carbon\&.php\&.
.SS "subHour ( $value = \fC1\fP)"

.PP
Definition at line 16930 of file compiled\&.php\&.
.SS "subHours ( $value)"
Remove hours from the instance
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1602 of file Carbon\&.php\&.
.SS "subHours ( $value)"

.PP
Definition at line 16934 of file compiled\&.php\&.
.SS "subMinute ( $value = \fC1\fP)"
Remove a minute from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1635 of file Carbon\&.php\&.
.SS "subMinute ( $value = \fC1\fP)"

.PP
Definition at line 16946 of file compiled\&.php\&.
.SS "subMinutes ( $value)"
Remove minutes from the instance
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1647 of file Carbon\&.php\&.
.SS "subMinutes ( $value)"

.PP
Definition at line 16950 of file compiled\&.php\&.
.SS "subMonth ( $value = \fC1\fP)"
Remove a month from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1359 of file Carbon\&.php\&.
.SS "subMonth ( $value = \fC1\fP)"

.PP
Definition at line 16846 of file compiled\&.php\&.
.SS "subMonthNoOverflow ( $value = \fC1\fP)"
Remove a month with no overflow from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1410 of file Carbon\&.php\&.
.SS "subMonthNoOverflow ( $value = \fC1\fP)"

.PP
Definition at line 16866 of file compiled\&.php\&.
.SS "subMonths ( $value)"
Remove months from the instance
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1371 of file Carbon\&.php\&.
.SS "subMonths ( $value)"

.PP
Definition at line 16850 of file compiled\&.php\&.
.SS "subMonthsNoOverflow ( $value)"
Remove months with no overflow from the instance
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1422 of file Carbon\&.php\&.
.SS "subMonthsNoOverflow ( $value)"

.PP
Definition at line 16870 of file compiled\&.php\&.
.SS "subSecond ( $value = \fC1\fP)"
Remove a second from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1680 of file Carbon\&.php\&.
.SS "subSecond ( $value = \fC1\fP)"

.PP
Definition at line 16962 of file compiled\&.php\&.
.SS "subSeconds ( $value)"
Remove seconds from the instance
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1692 of file Carbon\&.php\&.
.SS "subSeconds ( $value)"

.PP
Definition at line 16966 of file compiled\&.php\&.
.SS "subWeek ( $value = \fC1\fP)"
Remove a week from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1545 of file Carbon\&.php\&.
.SS "subWeek ( $value = \fC1\fP)"

.PP
Definition at line 16914 of file compiled\&.php\&.
.SS "subWeekday ( $value = \fC1\fP)"
Remove a weekday from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1500 of file Carbon\&.php\&.
.SS "subWeekday ( $value = \fC1\fP)"

.PP
Definition at line 16898 of file compiled\&.php\&.
.SS "subWeekdays ( $value)"
Remove weekdays from the instance
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1512 of file Carbon\&.php\&.
.SS "subWeekdays ( $value)"

.PP
Definition at line 16902 of file compiled\&.php\&.
.SS "subWeeks ( $value)"
Remove weeks to the instance
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1557 of file Carbon\&.php\&.
.SS "subWeeks ( $value)"

.PP
Definition at line 16918 of file compiled\&.php\&.
.SS "subYear ( $value = \fC1\fP)"
Remove a year from the instance
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1314 of file Carbon\&.php\&.
.SS "subYear ( $value = \fC1\fP)"

.PP
Definition at line 16830 of file compiled\&.php\&.
.SS "subYears ( $value)"
Remove years from the instance\&.
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 1326 of file Carbon\&.php\&.
.SS "subYears ( $value)"

.PP
Definition at line 16834 of file compiled\&.php\&.
.SS "timestamp ( $value)"
Set the instance's timestamp
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 674 of file Carbon\&.php\&.
.SS "timestamp ( $value)"

.PP
Definition at line 16589 of file compiled\&.php\&.
.SS "timezone ( $value)"
Alias for \fBsetTimezone()\fP
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 688 of file Carbon\&.php\&.
.SS "timezone ( $value)"

.PP
Definition at line 16594 of file compiled\&.php\&.
.SS "toAtomString ()"
Format the instance as ATOM
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 958 of file Carbon\&.php\&.
.SS "toAtomString ()"

.PP
Definition at line 16695 of file compiled\&.php\&.
.SS "toCookieString ()"
Format the instance as COOKIE
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 968 of file Carbon\&.php\&.
.SS "toCookieString ()"

.PP
Definition at line 16699 of file compiled\&.php\&.
.SS "toDateString ()"
Format the instance as date
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 908 of file Carbon\&.php\&.
.SS "toDateString ()"

.PP
Definition at line 16675 of file compiled\&.php\&.
.SS "toDateTimeString ()"
Format the instance as date and time
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 938 of file Carbon\&.php\&.
.SS "toDateTimeString ()"

.PP
Definition at line 16687 of file compiled\&.php\&.
.SS "static today ( $tz = \fCnull\fP)\fC [static]\fP"
Create a \fBCarbon\fP instance for today
.PP
\fBParameters:\fP
.RS 4
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 251 of file Carbon\&.php\&.
.SS "static today ( $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16417 of file compiled\&.php\&.
.SS "toDayDateTimeString ()"
Format the instance with day, date and time
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 948 of file Carbon\&.php\&.
.SS "toDayDateTimeString ()"

.PP
Definition at line 16691 of file compiled\&.php\&.
.SS "toFormattedDateString ()"
Format the instance as a readable date
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 918 of file Carbon\&.php\&.
.SS "toFormattedDateString ()"

.PP
Definition at line 16679 of file compiled\&.php\&.
.SS "toIso8601String ()"
Format the instance as ISO8601
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 978 of file Carbon\&.php\&.
.SS "toIso8601String ()"

.PP
Definition at line 16703 of file compiled\&.php\&.
.SS "static tomorrow ( $tz = \fCnull\fP)\fC [static]\fP"
Create a \fBCarbon\fP instance for tomorrow
.PP
\fBParameters:\fP
.RS 4
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 263 of file Carbon\&.php\&.
.SS "static tomorrow ( $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16421 of file compiled\&.php\&.
.SS "toRfc1036String ()"
Format the instance as RFC1036
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1008 of file Carbon\&.php\&.
.SS "toRfc1036String ()"

.PP
Definition at line 16715 of file compiled\&.php\&.
.SS "toRfc1123String ()"
Format the instance as RFC1123
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1018 of file Carbon\&.php\&.
.SS "toRfc1123String ()"

.PP
Definition at line 16719 of file compiled\&.php\&.
.SS "toRfc2822String ()"
Format the instance as RFC2822
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1028 of file Carbon\&.php\&.
.SS "toRfc2822String ()"

.PP
Definition at line 16723 of file compiled\&.php\&.
.SS "toRfc3339String ()"
Format the instance as RFC3339
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1038 of file Carbon\&.php\&.
.SS "toRfc3339String ()"

.PP
Definition at line 16727 of file compiled\&.php\&.
.SS "toRfc822String ()"
Format the instance as RFC822
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 988 of file Carbon\&.php\&.
.SS "toRfc822String ()"

.PP
Definition at line 16707 of file compiled\&.php\&.
.SS "toRfc850String ()"
Format the instance as RFC850
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 998 of file Carbon\&.php\&.
.SS "toRfc850String ()"

.PP
Definition at line 16711 of file compiled\&.php\&.
.SS "toRssString ()"
Format the instance as RSS
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1048 of file Carbon\&.php\&.
.SS "toRssString ()"

.PP
Definition at line 16731 of file compiled\&.php\&.
.SS "toTimeString ()"
Format the instance as time
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 928 of file Carbon\&.php\&.
.SS "toTimeString ()"

.PP
Definition at line 16683 of file compiled\&.php\&.
.SS "toW3cString ()"
Format the instance as W3C
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1058 of file Carbon\&.php\&.
.SS "toW3cString ()"

.PP
Definition at line 16735 of file compiled\&.php\&.
.SS "static translator ()\fC [static]\fP, \fC [protected]\fP"
Intialize the translator instance if necessary\&.
.PP
\fBReturns:\fP
.RS 4
TranslatorInterface 
.RE
.PP

.PP
Definition at line 797 of file Carbon\&.php\&.
.SS "static translator ()\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 16630 of file compiled\&.php\&.
.SS "tz ( $value)"
Alias for \fBsetTimezone()\fP
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 700 of file Carbon\&.php\&.
.SS "tz ( $value)"

.PP
Definition at line 16598 of file compiled\&.php\&.
.SS "year ( $value)"
Set the instance's year
.PP
\fBParameters:\fP
.RS 4
\fI$value\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 573 of file Carbon\&.php\&.
.SS "year ( $value)"

.PP
Definition at line 16555 of file compiled\&.php\&.
.SS "static yesterday ( $tz = \fCnull\fP)\fC [static]\fP"
Create a \fBCarbon\fP instance for yesterday
.PP
\fBParameters:\fP
.RS 4
\fI$tz\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
static 
.RE
.PP

.PP
Definition at line 275 of file Carbon\&.php\&.
.SS "static yesterday ( $tz = \fCnull\fP)\fC [static]\fP"

.PP
Definition at line 16425 of file compiled\&.php\&.
.SH "Field Documentation"
.PP 
.SS "static $\fBdays\fP = array(self::SUNDAY => 'Sunday', self::MONDAY => 'Monday', self::TUESDAY => 'Tuesday', self::WEDNESDAY => 'Wednesday', self::THURSDAY => 'Thursday', self::FRIDAY => 'Friday', self::SATURDAY => 'Saturday')\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 16361 of file compiled\&.php\&.
.SS "static $relativeKeywords = array('\fBthis\fP', '\fBnext\fP', 'last', '\fBtomorrow\fP', '\fByesterday\fP', '+', '-', 'first', 'last', 'ago')\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 16362 of file compiled\&.php\&.
.SS "static $testNow\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 16373 of file compiled\&.php\&.
.SS "static $toStringFormat = self::DEFAULT_TO_STRING_FORMAT\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 16372 of file compiled\&.php\&.
.SS "static $\fBtranslator\fP\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 16374 of file compiled\&.php\&.
.SS "const DAYS_PER_WEEK = 7"

.PP
Definition at line 16367 of file compiled\&.php\&.
.SS "const DEFAULT_TO_STRING_FORMAT = 'Y-m-\fBd\fP H:i:s'"

.PP
Definition at line 16371 of file compiled\&.php\&.
.SS "const FRIDAY = 5"

.PP
Definition at line 16359 of file compiled\&.php\&.
.SS "const HOURS_PER_DAY = 24"

.PP
Definition at line 16368 of file compiled\&.php\&.
.SS "const MINUTES_PER_HOUR = 60"

.PP
Definition at line 16369 of file compiled\&.php\&.
.SS "const MONDAY = 1"

.PP
Definition at line 16355 of file compiled\&.php\&.
.SS "const MONTHS_PER_YEAR = 12"

.PP
Definition at line 16365 of file compiled\&.php\&.
.SS "const SATURDAY = 6"

.PP
Definition at line 16360 of file compiled\&.php\&.
.SS "const SECONDS_PER_MINUTE = 60"

.PP
Definition at line 16370 of file compiled\&.php\&.
.SS "const SUNDAY = 0"
The day constants 
.PP
Definition at line 16354 of file compiled\&.php\&.
.SS "const THURSDAY = 4"

.PP
Definition at line 16358 of file compiled\&.php\&.
.SS "const TUESDAY = 2"

.PP
Definition at line 16356 of file compiled\&.php\&.
.SS "const WEDNESDAY = 3"

.PP
Definition at line 16357 of file compiled\&.php\&.
.SS "const WEEKS_PER_YEAR = 52"

.PP
Definition at line 16366 of file compiled\&.php\&.
.SS "const YEARS_PER_CENTURY = 100"
Number of X in Y 
.PP
Definition at line 16363 of file compiled\&.php\&.
.SS "const YEARS_PER_DECADE = 10"

.PP
Definition at line 16364 of file compiled\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VirtualSCADA from the source code\&.
